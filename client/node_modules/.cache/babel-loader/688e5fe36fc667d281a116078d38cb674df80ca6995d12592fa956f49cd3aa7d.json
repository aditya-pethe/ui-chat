{"ast":null,"code":"import { indentWithTab } from '@codemirror/commands';\nimport { basicSetup } from '@uiw/codemirror-extensions-basic-setup';\nimport { EditorView, keymap, placeholder } from '@codemirror/view';\nimport { oneDark } from '@codemirror/theme-one-dark';\nimport { EditorState } from '@codemirror/state';\nexport var getDefaultExtensions = function getDefaultExtensions(optios) {\n  if (optios === void 0) {\n    optios = {};\n  }\n  var _optios = optios,\n    _optios$indentWithTab = _optios.indentWithTab,\n    defaultIndentWithTab = _optios$indentWithTab === void 0 ? true : _optios$indentWithTab,\n    _optios$editable = _optios.editable,\n    editable = _optios$editable === void 0 ? true : _optios$editable,\n    _optios$readOnly = _optios.readOnly,\n    readOnly = _optios$readOnly === void 0 ? false : _optios$readOnly,\n    _optios$theme = _optios.theme,\n    theme = _optios$theme === void 0 ? 'light' : _optios$theme,\n    _optios$placeholder = _optios.placeholder,\n    placeholderStr = _optios$placeholder === void 0 ? '' : _optios$placeholder,\n    _optios$basicSetup = _optios.basicSetup,\n    defaultBasicSetup = _optios$basicSetup === void 0 ? true : _optios$basicSetup;\n  var getExtensions = [];\n  var defaultLightThemeOption = EditorView.theme({\n    '&': {\n      backgroundColor: '#fff'\n    }\n  }, {\n    dark: false\n  });\n  if (defaultIndentWithTab) {\n    getExtensions.unshift(keymap.of([indentWithTab]));\n  }\n  if (defaultBasicSetup) {\n    if (typeof defaultBasicSetup === 'boolean') {\n      getExtensions.unshift(basicSetup());\n    } else {\n      getExtensions.unshift(basicSetup(defaultBasicSetup));\n    }\n  }\n  if (placeholderStr) {\n    getExtensions.unshift(placeholder(placeholderStr));\n  }\n  switch (theme) {\n    case 'light':\n      getExtensions.push(defaultLightThemeOption);\n      break;\n    case 'dark':\n      getExtensions.push(oneDark);\n      break;\n    case 'none':\n      break;\n    default:\n      getExtensions.push(theme);\n      break;\n  }\n  if (editable === false) {\n    getExtensions.push(EditorView.editable.of(false));\n  }\n  if (readOnly) {\n    getExtensions.push(EditorState.readOnly.of(true));\n  }\n  return [].concat(getExtensions);\n};","map":{"version":3,"names":["indentWithTab","basicSetup","EditorView","keymap","placeholder","oneDark","EditorState","getDefaultExtensions","optios","_optios","_optios$indentWithTab","defaultIndentWithTab","_optios$editable","editable","_optios$readOnly","readOnly","_optios$theme","theme","_optios$placeholder","placeholderStr","_optios$basicSetup","defaultBasicSetup","getExtensions","defaultLightThemeOption","backgroundColor","dark","unshift","of","push","concat"],"sources":["/Users/adityapethe/Developer/ui-chat/ui-chat/client/node_modules/@uiw/react-codemirror/esm/getDefaultExtensions.js"],"sourcesContent":["import { indentWithTab } from '@codemirror/commands';\nimport { basicSetup } from '@uiw/codemirror-extensions-basic-setup';\nimport { EditorView, keymap, placeholder } from '@codemirror/view';\nimport { oneDark } from '@codemirror/theme-one-dark';\nimport { EditorState } from '@codemirror/state';\nexport var getDefaultExtensions = function getDefaultExtensions(optios) {\n  if (optios === void 0) {\n    optios = {};\n  }\n  var {\n    indentWithTab: defaultIndentWithTab = true,\n    editable = true,\n    readOnly = false,\n    theme = 'light',\n    placeholder: placeholderStr = '',\n    basicSetup: defaultBasicSetup = true\n  } = optios;\n  var getExtensions = [];\n  var defaultLightThemeOption = EditorView.theme({\n    '&': {\n      backgroundColor: '#fff'\n    }\n  }, {\n    dark: false\n  });\n  if (defaultIndentWithTab) {\n    getExtensions.unshift(keymap.of([indentWithTab]));\n  }\n  if (defaultBasicSetup) {\n    if (typeof defaultBasicSetup === 'boolean') {\n      getExtensions.unshift(basicSetup());\n    } else {\n      getExtensions.unshift(basicSetup(defaultBasicSetup));\n    }\n  }\n  if (placeholderStr) {\n    getExtensions.unshift(placeholder(placeholderStr));\n  }\n  switch (theme) {\n    case 'light':\n      getExtensions.push(defaultLightThemeOption);\n      break;\n    case 'dark':\n      getExtensions.push(oneDark);\n      break;\n    case 'none':\n      break;\n    default:\n      getExtensions.push(theme);\n      break;\n  }\n  if (editable === false) {\n    getExtensions.push(EditorView.editable.of(false));\n  }\n  if (readOnly) {\n    getExtensions.push(EditorState.readOnly.of(true));\n  }\n  return [...getExtensions];\n};"],"mappings":"AAAA,SAASA,aAAa,QAAQ,sBAAsB;AACpD,SAASC,UAAU,QAAQ,wCAAwC;AACnE,SAASC,UAAU,EAAEC,MAAM,EAAEC,WAAW,QAAQ,kBAAkB;AAClE,SAASC,OAAO,QAAQ,4BAA4B;AACpD,SAASC,WAAW,QAAQ,mBAAmB;AAC/C,OAAO,IAAIC,oBAAoB,GAAG,SAASA,oBAAoBA,CAACC,MAAM,EAAE;EACtE,IAAIA,MAAM,KAAK,KAAK,CAAC,EAAE;IACrBA,MAAM,GAAG,CAAC,CAAC;EACb;EACA,IAAAC,OAAA,GAOID,MAAM;IAAAE,qBAAA,GAAAD,OAAA,CANRT,aAAa;IAAEW,oBAAoB,GAAAD,qBAAA,cAAG,IAAI,GAAAA,qBAAA;IAAAE,gBAAA,GAAAH,OAAA,CAC1CI,QAAQ;IAARA,QAAQ,GAAAD,gBAAA,cAAG,IAAI,GAAAA,gBAAA;IAAAE,gBAAA,GAAAL,OAAA,CACfM,QAAQ;IAARA,QAAQ,GAAAD,gBAAA,cAAG,KAAK,GAAAA,gBAAA;IAAAE,aAAA,GAAAP,OAAA,CAChBQ,KAAK;IAALA,KAAK,GAAAD,aAAA,cAAG,OAAO,GAAAA,aAAA;IAAAE,mBAAA,GAAAT,OAAA,CACfL,WAAW;IAAEe,cAAc,GAAAD,mBAAA,cAAG,EAAE,GAAAA,mBAAA;IAAAE,kBAAA,GAAAX,OAAA,CAChCR,UAAU;IAAEoB,iBAAiB,GAAAD,kBAAA,cAAG,IAAI,GAAAA,kBAAA;EAEtC,IAAIE,aAAa,GAAG,EAAE;EACtB,IAAIC,uBAAuB,GAAGrB,UAAU,CAACe,KAAK,CAAC;IAC7C,GAAG,EAAE;MACHO,eAAe,EAAE;IACnB;EACF,CAAC,EAAE;IACDC,IAAI,EAAE;EACR,CAAC,CAAC;EACF,IAAId,oBAAoB,EAAE;IACxBW,aAAa,CAACI,OAAO,CAACvB,MAAM,CAACwB,EAAE,CAAC,CAAC3B,aAAa,CAAC,CAAC,CAAC;EACnD;EACA,IAAIqB,iBAAiB,EAAE;IACrB,IAAI,OAAOA,iBAAiB,KAAK,SAAS,EAAE;MAC1CC,aAAa,CAACI,OAAO,CAACzB,UAAU,CAAC,CAAC,CAAC;IACrC,CAAC,MAAM;MACLqB,aAAa,CAACI,OAAO,CAACzB,UAAU,CAACoB,iBAAiB,CAAC,CAAC;IACtD;EACF;EACA,IAAIF,cAAc,EAAE;IAClBG,aAAa,CAACI,OAAO,CAACtB,WAAW,CAACe,cAAc,CAAC,CAAC;EACpD;EACA,QAAQF,KAAK;IACX,KAAK,OAAO;MACVK,aAAa,CAACM,IAAI,CAACL,uBAAuB,CAAC;MAC3C;IACF,KAAK,MAAM;MACTD,aAAa,CAACM,IAAI,CAACvB,OAAO,CAAC;MAC3B;IACF,KAAK,MAAM;MACT;IACF;MACEiB,aAAa,CAACM,IAAI,CAACX,KAAK,CAAC;MACzB;EACJ;EACA,IAAIJ,QAAQ,KAAK,KAAK,EAAE;IACtBS,aAAa,CAACM,IAAI,CAAC1B,UAAU,CAACW,QAAQ,CAACc,EAAE,CAAC,KAAK,CAAC,CAAC;EACnD;EACA,IAAIZ,QAAQ,EAAE;IACZO,aAAa,CAACM,IAAI,CAACtB,WAAW,CAACS,QAAQ,CAACY,EAAE,CAAC,IAAI,CAAC,CAAC;EACnD;EACA,UAAAE,MAAA,CAAWP,aAAa;AAC1B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}