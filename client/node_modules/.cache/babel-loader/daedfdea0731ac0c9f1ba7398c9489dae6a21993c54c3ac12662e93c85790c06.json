{"ast":null,"code":"import _regeneratorRuntime from\"/Users/adityapethe/Developer/ui-chat/ui-chat/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _toConsumableArray from\"/Users/adityapethe/Developer/ui-chat/ui-chat/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _asyncToGenerator from\"/Users/adityapethe/Developer/ui-chat/ui-chat/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/adityapethe/Developer/ui-chat/ui-chat/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useEffect,useState}from\"react\";import\"./chatbotui.css\";import{FontAwesomeIcon}from\"@fortawesome/react-fontawesome\";import{faPaperPlane}from\"@fortawesome/free-solid-svg-icons\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Chatbot=function Chatbot(_ref){var fetchAndUpdateCode=_ref.fetchAndUpdateCode,htmlCode=_ref.htmlCode,cssCode=_ref.cssCode,jsCode=_ref.jsCode;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),input=_useState2[0],setInput=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),messages=_useState4[0],setMessages=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isLoading=_useState6[0],setIsLoading=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),apiKey=_useState8[0],setApiKey=_useState8[1];var handleInputChange=function handleInputChange(event){setInput(event.target.value);};// Add a function to handle changes to the API key input\nvar handleApiKeyChange=function handleApiKeyChange(event){setApiKey(event.target.value);};var handleSendMessage=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var userMessage,clientCode,startTime,response,endTime,data,timeElapsed,newMessage;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:if(!(input.trim()!==\"\")){_context.next=20;break;}userMessage={sender:\"user\",text:input.trim()};// Add : Message here\nsetMessages([].concat(_toConsumableArray(messages),[userMessage]));setInput(\"\");setIsLoading(true);clientCode={html:htmlCode,css:cssCode,js:jsCode};startTime=Date.now();_context.next=9;return fetch(\"/chat\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({message:userMessage.text,code:clientCode})});case 9:response=_context.sent;endTime=Date.now();_context.next=13;return response.json();case 13:data=_context.sent;console.log(data.message);timeElapsed=(endTime-startTime)/1000;newMessage=\"\".concat(data.message,\". Time elapsed: \").concat(timeElapsed,\" seconds\");// After the response from the server is received, add the bot's message\nsetMessages(function(prevMessages){return[].concat(_toConsumableArray(prevMessages),[{sender:\"bot\",text:newMessage}]);});fetchAndUpdateCode(data.html,data.css,data.js);setIsLoading(false);case 20:case\"end\":return _context.stop();}},_callee);}));return function handleSendMessage(){return _ref2.apply(this,arguments);};}();// You no longer need to add the bot's message in this useEffect hook\nuseEffect(function(){},[messages]);return/*#__PURE__*/_jsxs(\"div\",{className:\"chatbot-container\",children:[messages.map(function(message,index){return/*#__PURE__*/_jsx(\"div\",{className:message.sender===\"user\"?\"userMessage\":\"botMessage\",children:message.text},index);}),isLoading&&/*#__PURE__*/_jsx(\"div\",{className:\"loading\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-area\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"message-input-area\",children:[/*#__PURE__*/_jsx(\"textarea\",{value:input,onChange:handleInputChange,className:\"input-field\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSendMessage,children:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faPaperPlane,size:\"lg\"})})]}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",value:apiKey,onChange:handleApiKeyChange,className:\"api-key-field\",placeholder:\"Enter OpenAI API key\"})]})]});};export default Chatbot;","map":{"version":3,"names":["useEffect","useState","FontAwesomeIcon","faPaperPlane","jsx","_jsx","jsxs","_jsxs","Chatbot","_ref","fetchAndUpdateCode","htmlCode","cssCode","jsCode","_useState","_useState2","_slicedToArray","input","setInput","_useState3","_useState4","messages","setMessages","_useState5","_useState6","isLoading","setIsLoading","_useState7","_useState8","apiKey","setApiKey","handleInputChange","event","target","value","handleApiKeyChange","handleSendMessage","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","userMessage","clientCode","startTime","response","endTime","data","timeElapsed","newMessage","wrap","_callee$","_context","prev","next","trim","sender","text","concat","_toConsumableArray","html","css","js","Date","now","fetch","method","headers","body","JSON","stringify","message","code","sent","json","console","log","prevMessages","stop","apply","arguments","className","children","map","index","onChange","onClick","icon","size","type","placeholder"],"sources":["/Users/adityapethe/Developer/ui-chat/ui-chat/client/src/components/chatbotui.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport \"./chatbotui.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface Message {\n  sender: \"user\" | \"bot\";\n  text: string;\n}\n\ninterface ChatbotUIProps {\n  fetchAndUpdateCode: (html:string,css:string,js:string) => void;\n  htmlCode: string;\n  cssCode: string;\n  jsCode: string;\n}\n\nconst Chatbot: React.FC<ChatbotUIProps> = ({\n  fetchAndUpdateCode,\n  htmlCode,\n  cssCode,\n  jsCode,\n}) => {\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [apiKey, setApiKey] = useState(\"\");\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setInput(event.target.value);\n  };\n\n  // Add a function to handle changes to the API key input\n  const handleApiKeyChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setApiKey(event.target.value);\n  };\n\n  const handleSendMessage = async () => {\n    if (input.trim() !== \"\") {\n      const userMessage: Message = { sender: \"user\", text: input.trim() }; // Add : Message here\n      setMessages([...messages, userMessage]);\n      setInput(\"\");\n      setIsLoading(true);\n\n      const clientCode = { html: htmlCode, css: cssCode, js: jsCode };\n      const startTime = Date.now();\n\n      const response = await fetch(\"/chat\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ message: userMessage.text, code: clientCode }),\n      });\n\n      const endTime = Date.now();\n\n      const data = await response.json();\n      console.log(data.message);\n\n      const timeElapsed = (endTime - startTime) / 1000;\n      const newMessage = `${data.message}. Time elapsed: ${timeElapsed} seconds`;\n\n      // After the response from the server is received, add the bot's message\n      setMessages((prevMessages) => [\n        ...prevMessages,\n        { sender: \"bot\", text: newMessage } as Message,\n      ]);\n\n      fetchAndUpdateCode(data.html, data.css, data.js);\n      setIsLoading(false);\n    }\n  };\n\n  // You no longer need to add the bot's message in this useEffect hook\n  useEffect(() => {}, [messages]);\n\n  return (\n    <div className=\"chatbot-container\">\n      {messages.map((message, index) => (\n        <div\n          key={index}\n          className={message.sender === \"user\" ? \"userMessage\" : \"botMessage\"}\n        >\n          {message.text}\n        </div>\n      ))}\n      {isLoading && <div className=\"loading\"></div>}\n      <div className=\"input-area\">\n      <div className=\"message-input-area\">\n      <textarea\n          value={input}\n          onChange={handleInputChange}\n          className=\"input-field\"\n        />\n        <button onClick={handleSendMessage}>\n          <FontAwesomeIcon icon={faPaperPlane} size=\"lg\" />\n        </button>\n      </div>\n        <input\n          type=\"password\"\n          value={apiKey}\n          onChange={handleApiKeyChange}\n          className=\"api-key-field\"\n          placeholder=\"Enter OpenAI API key\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Chatbot;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}