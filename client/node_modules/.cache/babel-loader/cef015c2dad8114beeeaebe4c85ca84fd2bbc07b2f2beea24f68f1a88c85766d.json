{"ast":null,"code":"var _jsxFileName = \"/Users/adityapethe/Developer/ui-chat/ui-chat/client/src/components/chatbotui.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport './chatbotui.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatbotUI = () => {\n  _s();\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const handleInputChange = e => {\n    setInput(e.target.value);\n  };\n  const handleSendMessage = () => {\n    if (input.trim() !== '') {\n      setMessages([...messages, {\n        sender: 'user',\n        text: input.trim()\n      }]);\n      setInput('');\n    }\n  };\n\n  // Automatically send a bot response after the messages state updates\n  useEffect(() => {\n    if (messages.length > 0 && messages[messages.length - 1].sender === 'user') {\n      setMessages([...messages, {\n        sender: 'bot',\n        text: 'Hi'\n      }]);\n    }\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbotContainer\",\n    children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: message.sender === 'user' ? 'userMessage' : 'botMessage',\n      children: message.text\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputArea\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: input,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-paper-plane\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatbotUI, \"YBPMDsh31i3F4LdMGBVkzYGOu8w=\");\n_c = ChatbotUI;\nexport default ChatbotUI;\nvar _c;\n$RefreshReg$(_c, \"ChatbotUI\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","ChatbotUI","_s","input","setInput","messages","setMessages","handleInputChange","e","target","value","handleSendMessage","trim","sender","text","length","className","children","map","message","index","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/adityapethe/Developer/ui-chat/ui-chat/client/src/components/chatbotui.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport './chatbotui.css'\nimport CodeMirror from '@uiw/react-codemirror';\nimport { html } from '@codemirror/lang-html';\n\ninterface Message {\n  sender: 'user' | 'bot';\n  text: string;\n}\n\nconst ChatbotUI: React.FC = () => {\n  const [input, setInput] = useState<string>('');\n  const [messages, setMessages] = useState<Message[]>([]);\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setInput(e.target.value);\n  };\n\n  const handleSendMessage = () => {\n    if (input.trim() !== '') {\n      setMessages([...messages, { sender: 'user', text: input.trim() }]);\n      setInput('');\n    }\n  };\n\n  // Automatically send a bot response after the messages state updates\n  useEffect(() => {\n    if (messages.length > 0 && messages[messages.length - 1].sender === 'user') {\n      setMessages([...messages, { sender: 'bot', text: 'Hi' }]);\n    }\n  }, [messages]);\n\n  return (\n    <div className='chatbotContainer'>\n      {messages.map((message, index) => (\n        <div key={index} className={message.sender === 'user' ? 'userMessage' : 'botMessage'}>\n          {message.text}\n        </div>\n      ))}\n      <div className='inputArea'>\n        <textarea value={input} onChange={handleInputChange} />\n        <button onClick={handleSendMessage}>\n          <i className='fas fa-paper-plane'></i>\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatbotUI;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAO,iBAAiB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AASxB,MAAMC,SAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAS,EAAE,CAAC;EAC9C,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAY,EAAE,CAAC;EAEvD,MAAMS,iBAAiB,GAAIC,CAAyC,IAAK;IACvEJ,QAAQ,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC1B,CAAC;EAED,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAIR,KAAK,CAACS,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MACvBN,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE;QAAEQ,MAAM,EAAE,MAAM;QAAEC,IAAI,EAAEX,KAAK,CAACS,IAAI,CAAC;MAAE,CAAC,CAAC,CAAC;MAClER,QAAQ,CAAC,EAAE,CAAC;IACd;EACF,CAAC;;EAED;EACAP,SAAS,CAAC,MAAM;IACd,IAAIQ,QAAQ,CAACU,MAAM,GAAG,CAAC,IAAIV,QAAQ,CAACA,QAAQ,CAACU,MAAM,GAAG,CAAC,CAAC,CAACF,MAAM,KAAK,MAAM,EAAE;MAC1EP,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE;QAAEQ,MAAM,EAAE,KAAK;QAAEC,IAAI,EAAE;MAAK,CAAC,CAAC,CAAC;IAC3D;EACF,CAAC,EAAE,CAACT,QAAQ,CAAC,CAAC;EAEd,oBACEL,OAAA;IAAKgB,SAAS,EAAC,kBAAkB;IAAAC,QAAA,GAC9BZ,QAAQ,CAACa,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC3BpB,OAAA;MAAiBgB,SAAS,EAAEG,OAAO,CAACN,MAAM,KAAK,MAAM,GAAG,aAAa,GAAG,YAAa;MAAAI,QAAA,EAClFE,OAAO,CAACL;IAAI,GADLM,KAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEV,CACN,CAAC,eACFxB,OAAA;MAAKgB,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxBjB,OAAA;QAAUU,KAAK,EAAEP,KAAM;QAACsB,QAAQ,EAAElB;MAAkB;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvDxB,OAAA;QAAQ0B,OAAO,EAAEf,iBAAkB;QAAAM,QAAA,eACjCjB,OAAA;UAAGgB,SAAS,EAAC;QAAoB;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACtB,EAAA,CArCID,SAAmB;AAAA0B,EAAA,GAAnB1B,SAAmB;AAuCzB,eAAeA,SAAS;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}