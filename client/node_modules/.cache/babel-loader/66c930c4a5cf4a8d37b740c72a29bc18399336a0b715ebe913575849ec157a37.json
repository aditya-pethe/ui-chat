{"ast":null,"code":"import _inherits from \"/Users/adityapethe/Developer/ui-chat/ui-chat/client/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/adityapethe/Developer/ui-chat/ui-chat/client/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _toConsumableArray from \"/Users/adityapethe/Developer/ui-chat/ui-chat/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"/Users/adityapethe/Developer/ui-chat/ui-chat/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _createForOfIteratorHelper from \"/Users/adityapethe/Developer/ui-chat/ui-chat/client/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"/Users/adityapethe/Developer/ui-chat/ui-chat/client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/adityapethe/Developer/ui-chat/ui-chat/client/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { Annotation, StateEffect, EditorSelection, codePointAt, codePointSize, fromCodePoint, Facet, combineConfig, StateField, Prec, Text, MapMode, RangeValue, RangeSet, CharCategory } from '@codemirror/state';\nimport { Direction, ViewPlugin, logException, getTooltip, showTooltip, EditorView, Decoration, WidgetType, keymap } from '@codemirror/view';\nimport { syntaxTree, indentUnit } from '@codemirror/language';\n\n/**\nAn instance of this is passed to completion source functions.\n*/\nvar CompletionContext = /*#__PURE__*/function () {\n  /**\n  Create a new completion context. (Mostly useful for testing\n  completion sources—in the editor, the extension will create\n  these for you.)\n  */\n  function CompletionContext(\n  /**\n  The editor state that the completion happens in.\n  */\n  state,\n  /**\n  The position at which the completion is happening.\n  */\n  pos,\n  /**\n  Indicates whether completion was activated explicitly, or\n  implicitly by typing. The usual way to respond to this is to\n  only return completions when either there is part of a\n  completable entity before the cursor, or `explicit` is true.\n  */\n  explicit) {\n    _classCallCheck(this, CompletionContext);\n    this.state = state;\n    this.pos = pos;\n    this.explicit = explicit;\n    /**\n    @internal\n    */\n    this.abortListeners = [];\n  }\n  /**\n  Get the extent, content, and (if there is a token) type of the\n  token before `this.pos`.\n  */\n  _createClass(CompletionContext, [{\n    key: \"tokenBefore\",\n    value: function tokenBefore(types) {\n      var token = syntaxTree(this.state).resolveInner(this.pos, -1);\n      while (token && types.indexOf(token.name) < 0) token = token.parent;\n      return token ? {\n        from: token.from,\n        to: this.pos,\n        text: this.state.sliceDoc(token.from, this.pos),\n        type: token.type\n      } : null;\n    }\n    /**\n    Get the match of the given expression directly before the\n    cursor.\n    */\n  }, {\n    key: \"matchBefore\",\n    value: function matchBefore(expr) {\n      var line = this.state.doc.lineAt(this.pos);\n      var start = Math.max(line.from, this.pos - 250);\n      var str = line.text.slice(start - line.from, this.pos - line.from);\n      var found = str.search(ensureAnchor(expr, false));\n      return found < 0 ? null : {\n        from: start + found,\n        to: this.pos,\n        text: str.slice(found)\n      };\n    }\n    /**\n    Yields true when the query has been aborted. Can be useful in\n    asynchronous queries to avoid doing work that will be ignored.\n    */\n  }, {\n    key: \"aborted\",\n    get: function get() {\n      return this.abortListeners == null;\n    }\n    /**\n    Allows you to register abort handlers, which will be called when\n    the query is\n    [aborted](https://codemirror.net/6/docs/ref/#autocomplete.CompletionContext.aborted).\n    */\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(type, listener) {\n      if (type == \"abort\" && this.abortListeners) this.abortListeners.push(listener);\n    }\n  }]);\n  return CompletionContext;\n}();\nfunction toSet(chars) {\n  var flat = Object.keys(chars).join(\"\");\n  var words = /\\w/.test(flat);\n  if (words) flat = flat.replace(/\\w/g, \"\");\n  return \"[\".concat(words ? \"\\\\w\" : \"\").concat(flat.replace(/[^\\w\\s]/g, \"\\\\$&\"), \"]\");\n}\nfunction prefixMatch(options) {\n  var first = Object.create(null),\n    rest = Object.create(null);\n  var _iterator = _createForOfIteratorHelper(options),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var label = _step.value.label;\n      first[label[0]] = true;\n      for (var i = 1; i < label.length; i++) rest[label[i]] = true;\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  var source = toSet(first) + toSet(rest) + \"*$\";\n  return [new RegExp(\"^\" + source), new RegExp(source)];\n}\n/**\nGiven a a fixed array of options, return an autocompleter that\ncompletes them.\n*/\nfunction completeFromList(list) {\n  var options = list.map(function (o) {\n    return typeof o == \"string\" ? {\n      label: o\n    } : o;\n  });\n  var _ref = options.every(function (o) {\n      return /^\\w+$/.test(o.label);\n    }) ? [/\\w*$/, /\\w+$/] : prefixMatch(options),\n    _ref2 = _slicedToArray(_ref, 2),\n    validFor = _ref2[0],\n    match = _ref2[1];\n  return function (context) {\n    var token = context.matchBefore(match);\n    return token || context.explicit ? {\n      from: token ? token.from : context.pos,\n      options: options,\n      validFor: validFor\n    } : null;\n  };\n}\n/**\nWrap the given completion source so that it will only fire when the\ncursor is in a syntax node with one of the given names.\n*/\nfunction ifIn(nodes, source) {\n  return function (context) {\n    for (var pos = syntaxTree(context.state).resolveInner(context.pos, -1); pos; pos = pos.parent) {\n      if (nodes.indexOf(pos.name) > -1) return source(context);\n      if (pos.type.isTop) break;\n    }\n    return null;\n  };\n}\n/**\nWrap the given completion source so that it will not fire when the\ncursor is in a syntax node with one of the given names.\n*/\nfunction ifNotIn(nodes, source) {\n  return function (context) {\n    for (var pos = syntaxTree(context.state).resolveInner(context.pos, -1); pos; pos = pos.parent) {\n      if (nodes.indexOf(pos.name) > -1) return null;\n      if (pos.type.isTop) break;\n    }\n    return source(context);\n  };\n}\nvar Option = /*#__PURE__*/_createClass(function Option(completion, source, match, score) {\n  _classCallCheck(this, Option);\n  this.completion = completion;\n  this.source = source;\n  this.match = match;\n  this.score = score;\n});\nfunction cur(state) {\n  return state.selection.main.from;\n}\n// Make sure the given regexp has a $ at its end and, if `start` is\n// true, a ^ at its start.\nfunction ensureAnchor(expr, start) {\n  var _a;\n  var source = expr.source;\n  var addStart = start && source[0] != \"^\",\n    addEnd = source[source.length - 1] != \"$\";\n  if (!addStart && !addEnd) return expr;\n  return new RegExp(\"\".concat(addStart ? \"^\" : \"\", \"(?:\").concat(source, \")\").concat(addEnd ? \"$\" : \"\"), (_a = expr.flags) !== null && _a !== void 0 ? _a : expr.ignoreCase ? \"i\" : \"\");\n}\n/**\nThis annotation is added to transactions that are produced by\npicking a completion.\n*/\nvar pickedCompletion = /*@__PURE__*/Annotation.define();\n/**\nHelper function that returns a transaction spec which inserts a\ncompletion's text in the main selection range, and any other\nselection range that has the same text in front of it.\n*/\nfunction insertCompletionText(state, text, from, to) {\n  var main = state.selection.main,\n    fromOff = from - main.from,\n    toOff = to - main.from;\n  return Object.assign(Object.assign({}, state.changeByRange(function (range) {\n    if (range != main && from != to && state.sliceDoc(range.from + fromOff, range.from + toOff) != state.sliceDoc(from, to)) return {\n      range: range\n    };\n    return {\n      changes: {\n        from: range.from + fromOff,\n        to: to == main.from ? range.to : range.from + toOff,\n        insert: text\n      },\n      range: EditorSelection.cursor(range.from + fromOff + text.length)\n    };\n  })), {\n    userEvent: \"input.complete\"\n  });\n}\nvar SourceCache = /*@__PURE__*/new WeakMap();\nfunction asSource(source) {\n  if (!Array.isArray(source)) return source;\n  var known = SourceCache.get(source);\n  if (!known) SourceCache.set(source, known = completeFromList(source));\n  return known;\n}\nvar startCompletionEffect = /*@__PURE__*/StateEffect.define();\nvar closeCompletionEffect = /*@__PURE__*/StateEffect.define();\n\n// A pattern matcher for fuzzy completion matching. Create an instance\n// once for a pattern, and then use that to match any number of\n// completions.\nvar FuzzyMatcher = /*#__PURE__*/function () {\n  function FuzzyMatcher(pattern) {\n    _classCallCheck(this, FuzzyMatcher);\n    this.pattern = pattern;\n    this.chars = [];\n    this.folded = [];\n    // Buffers reused by calls to `match` to track matched character\n    // positions.\n    this.any = [];\n    this.precise = [];\n    this.byWord = [];\n    for (var p = 0; p < pattern.length;) {\n      var char = codePointAt(pattern, p),\n        size = codePointSize(char);\n      this.chars.push(char);\n      var part = pattern.slice(p, p + size),\n        upper = part.toUpperCase();\n      this.folded.push(codePointAt(upper == part ? part.toLowerCase() : upper, 0));\n      p += size;\n    }\n    this.astral = pattern.length != this.chars.length;\n  }\n  // Matches a given word (completion) against the pattern (input).\n  // Will return null for no match, and otherwise an array that starts\n  // with the match score, followed by any number of `from, to` pairs\n  // indicating the matched parts of `word`.\n  //\n  // The score is a number that is more negative the worse the match\n  // is. See `Penalty` above.\n  _createClass(FuzzyMatcher, [{\n    key: \"match\",\n    value: function match(word) {\n      if (this.pattern.length == 0) return [-100 /* Penalty.NotFull */];\n      if (word.length < this.pattern.length) return null;\n      var chars = this.chars,\n        folded = this.folded,\n        any = this.any,\n        precise = this.precise,\n        byWord = this.byWord;\n      // For single-character queries, only match when they occur right\n      // at the start\n      if (chars.length == 1) {\n        var first = codePointAt(word, 0),\n          firstSize = codePointSize(first);\n        var _score = firstSize == word.length ? 0 : -100 /* Penalty.NotFull */;\n        if (first == chars[0]) ;else if (first == folded[0]) _score += -200 /* Penalty.CaseFold */;else return null;\n        return [_score, 0, firstSize];\n      }\n      var direct = word.indexOf(this.pattern);\n      if (direct == 0) return [word.length == this.pattern.length ? 0 : -100 /* Penalty.NotFull */, 0, this.pattern.length];\n      var len = chars.length,\n        anyTo = 0;\n      if (direct < 0) {\n        for (var i = 0, e = Math.min(word.length, 200); i < e && anyTo < len;) {\n          var next = codePointAt(word, i);\n          if (next == chars[anyTo] || next == folded[anyTo]) any[anyTo++] = i;\n          i += codePointSize(next);\n        }\n        // No match, exit immediately\n        if (anyTo < len) return null;\n      }\n      // This tracks the extent of the precise (non-folded, not\n      // necessarily adjacent) match\n      var preciseTo = 0;\n      // Tracks whether there is a match that hits only characters that\n      // appear to be starting words. `byWordFolded` is set to true when\n      // a case folded character is encountered in such a match\n      var byWordTo = 0,\n        byWordFolded = false;\n      // If we've found a partial adjacent match, these track its state\n      var adjacentTo = 0,\n        adjacentStart = -1,\n        adjacentEnd = -1;\n      var hasLower = /[a-z]/.test(word),\n        wordAdjacent = true;\n      // Go over the option's text, scanning for the various kinds of matches\n      for (var _i = 0, _e = Math.min(word.length, 200), prevType = 0 /* Tp.NonWord */; _i < _e && byWordTo < len;) {\n        var _next = codePointAt(word, _i);\n        if (direct < 0) {\n          if (preciseTo < len && _next == chars[preciseTo]) precise[preciseTo++] = _i;\n          if (adjacentTo < len) {\n            if (_next == chars[adjacentTo] || _next == folded[adjacentTo]) {\n              if (adjacentTo == 0) adjacentStart = _i;\n              adjacentEnd = _i + 1;\n              adjacentTo++;\n            } else {\n              adjacentTo = 0;\n            }\n          }\n        }\n        var ch = void 0,\n          type = _next < 0xff ? _next >= 48 && _next <= 57 || _next >= 97 && _next <= 122 ? 2 /* Tp.Lower */ : _next >= 65 && _next <= 90 ? 1 /* Tp.Upper */ : 0 /* Tp.NonWord */ : (ch = fromCodePoint(_next)) != ch.toLowerCase() ? 1 /* Tp.Upper */ : ch != ch.toUpperCase() ? 2 /* Tp.Lower */ : 0 /* Tp.NonWord */;\n        if (!_i || type == 1 /* Tp.Upper */ && hasLower || prevType == 0 /* Tp.NonWord */ && type != 0 /* Tp.NonWord */) {\n          if (chars[byWordTo] == _next || folded[byWordTo] == _next && (byWordFolded = true)) byWord[byWordTo++] = _i;else if (byWord.length) wordAdjacent = false;\n        }\n        prevType = type;\n        _i += codePointSize(_next);\n      }\n      if (byWordTo == len && byWord[0] == 0 && wordAdjacent) return this.result(-100 /* Penalty.ByWord */ + (byWordFolded ? -200 /* Penalty.CaseFold */ : 0), byWord, word);\n      if (adjacentTo == len && adjacentStart == 0) return [-200 /* Penalty.CaseFold */ - word.length + (adjacentEnd == word.length ? 0 : -100 /* Penalty.NotFull */), 0, adjacentEnd];\n      if (direct > -1) return [-700 /* Penalty.NotStart */ - word.length, direct, direct + this.pattern.length];\n      if (adjacentTo == len) return [-200 /* Penalty.CaseFold */ + -700 /* Penalty.NotStart */ - word.length, adjacentStart, adjacentEnd];\n      if (byWordTo == len) return this.result(-100 /* Penalty.ByWord */ + (byWordFolded ? -200 /* Penalty.CaseFold */ : 0) + -700 /* Penalty.NotStart */ + (wordAdjacent ? 0 : -1100 /* Penalty.Gap */), byWord, word);\n      return chars.length == 2 ? null : this.result((any[0] ? -700 /* Penalty.NotStart */ : 0) + -200 /* Penalty.CaseFold */ + -1100 /* Penalty.Gap */, any, word);\n    }\n  }, {\n    key: \"result\",\n    value: function result(score, positions, word) {\n      var result = [score - word.length],\n        i = 1;\n      var _iterator2 = _createForOfIteratorHelper(positions),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var pos = _step2.value;\n          var to = pos + (this.astral ? codePointSize(codePointAt(word, pos)) : 1);\n          if (i > 1 && result[i - 1] == pos) result[i - 1] = to;else {\n            result[i++] = pos;\n            result[i++] = to;\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      return result;\n    }\n  }]);\n  return FuzzyMatcher;\n}();\nvar completionConfig = /*@__PURE__*/Facet.define({\n  combine: function combine(configs) {\n    return combineConfig(configs, {\n      activateOnTyping: true,\n      selectOnOpen: true,\n      override: null,\n      closeOnBlur: true,\n      maxRenderedOptions: 100,\n      defaultKeymap: true,\n      tooltipClass: function tooltipClass() {\n        return \"\";\n      },\n      optionClass: function optionClass() {\n        return \"\";\n      },\n      aboveCursor: false,\n      icons: true,\n      addToOptions: [],\n      positionInfo: defaultPositionInfo,\n      compareCompletions: function compareCompletions(a, b) {\n        return a.label.localeCompare(b.label);\n      },\n      interactionDelay: 75\n    }, {\n      defaultKeymap: function defaultKeymap(a, b) {\n        return a && b;\n      },\n      closeOnBlur: function closeOnBlur(a, b) {\n        return a && b;\n      },\n      icons: function icons(a, b) {\n        return a && b;\n      },\n      tooltipClass: function tooltipClass(a, b) {\n        return function (c) {\n          return joinClass(a(c), b(c));\n        };\n      },\n      optionClass: function optionClass(a, b) {\n        return function (c) {\n          return joinClass(a(c), b(c));\n        };\n      },\n      addToOptions: function addToOptions(a, b) {\n        return a.concat(b);\n      }\n    });\n  }\n});\nfunction joinClass(a, b) {\n  return a ? b ? a + \" \" + b : a : b;\n}\nfunction defaultPositionInfo(view, list, option, info, space) {\n  var rtl = view.textDirection == Direction.RTL,\n    left = rtl,\n    narrow = false;\n  var side = \"top\",\n    offset,\n    maxWidth;\n  var spaceLeft = list.left - space.left,\n    spaceRight = space.right - list.right;\n  var infoWidth = info.right - info.left,\n    infoHeight = info.bottom - info.top;\n  if (left && spaceLeft < Math.min(infoWidth, spaceRight)) left = false;else if (!left && spaceRight < Math.min(infoWidth, spaceLeft)) left = true;\n  if (infoWidth <= (left ? spaceLeft : spaceRight)) {\n    offset = Math.max(space.top, Math.min(option.top, space.bottom - infoHeight)) - list.top;\n    maxWidth = Math.min(400 /* Info.Width */, left ? spaceLeft : spaceRight);\n  } else {\n    narrow = true;\n    maxWidth = Math.min(400 /* Info.Width */, (rtl ? list.right : space.right - list.left) - 30 /* Info.Margin */);\n    var spaceBelow = space.bottom - list.bottom;\n    if (spaceBelow >= infoHeight || spaceBelow > list.top) {\n      // Below the completion\n      offset = option.bottom - list.top;\n    } else {\n      // Above it\n      side = \"bottom\";\n      offset = list.bottom - option.top;\n    }\n  }\n  return {\n    style: \"\".concat(side, \": \").concat(offset, \"px; max-width: \").concat(maxWidth, \"px\"),\n    class: \"cm-completionInfo-\" + (narrow ? rtl ? \"left-narrow\" : \"right-narrow\" : left ? \"left\" : \"right\")\n  };\n}\n\n/**\nReturns a command that moves the completion selection forward or\nbackward by the given amount.\n*/\nfunction moveCompletionSelection(forward) {\n  var by = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"option\";\n  return function (view) {\n    var cState = view.state.field(completionState, false);\n    if (!cState || !cState.open || cState.open.disabled || Date.now() - cState.open.timestamp < view.state.facet(completionConfig).interactionDelay) return false;\n    var step = 1,\n      tooltip;\n    if (by == \"page\" && (tooltip = getTooltip(view, cState.open.tooltip))) step = Math.max(2, Math.floor(tooltip.dom.offsetHeight / tooltip.dom.querySelector(\"li\").offsetHeight) - 1);\n    var length = cState.open.options.length;\n    var selected = cState.open.selected > -1 ? cState.open.selected + step * (forward ? 1 : -1) : forward ? 0 : length - 1;\n    if (selected < 0) selected = by == \"page\" ? 0 : length - 1;else if (selected >= length) selected = by == \"page\" ? length - 1 : 0;\n    view.dispatch({\n      effects: setSelectedEffect.of(selected)\n    });\n    return true;\n  };\n}\n/**\nAccept the current completion.\n*/\nvar acceptCompletion = function acceptCompletion(view) {\n  var cState = view.state.field(completionState, false);\n  if (view.state.readOnly || !cState || !cState.open || cState.open.selected < 0 || Date.now() - cState.open.timestamp < view.state.facet(completionConfig).interactionDelay) return false;\n  if (!cState.open.disabled) return applyCompletion(view, cState.open.options[cState.open.selected]);\n  return true;\n};\n/**\nExplicitly start autocompletion.\n*/\nvar startCompletion = function startCompletion(view) {\n  var cState = view.state.field(completionState, false);\n  if (!cState) return false;\n  view.dispatch({\n    effects: startCompletionEffect.of(true)\n  });\n  return true;\n};\n/**\nClose the currently active completion.\n*/\nvar closeCompletion = function closeCompletion(view) {\n  var cState = view.state.field(completionState, false);\n  if (!cState || !cState.active.some(function (a) {\n    return a.state != 0;\n  } /* State.Inactive */)) return false;\n  view.dispatch({\n    effects: closeCompletionEffect.of(null)\n  });\n  return true;\n};\nvar RunningQuery = /*#__PURE__*/_createClass(function RunningQuery(active, context) {\n  _classCallCheck(this, RunningQuery);\n  this.active = active;\n  this.context = context;\n  this.time = Date.now();\n  this.updates = [];\n  // Note that 'undefined' means 'not done yet', whereas 'null' means\n  // 'query returned null'.\n  this.done = undefined;\n});\nvar DebounceTime = 50,\n  MaxUpdateCount = 50,\n  MinAbortTime = 1000;\nvar completionPlugin = /*@__PURE__*/ViewPlugin.fromClass( /*#__PURE__*/function () {\n  function _class(view) {\n    _classCallCheck(this, _class);\n    this.view = view;\n    this.debounceUpdate = -1;\n    this.running = [];\n    this.debounceAccept = -1;\n    this.composing = 0 /* CompositionState.None */;\n    var _iterator3 = _createForOfIteratorHelper(view.state.field(completionState).active),\n      _step3;\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var active = _step3.value;\n        if (active.state == 1 /* State.Pending */) this.startQuery(active);\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n  }\n  _createClass(_class, [{\n    key: \"update\",\n    value: function update(_update) {\n      var _this = this;\n      var cState = _update.state.field(completionState);\n      if (!_update.selectionSet && !_update.docChanged && _update.startState.field(completionState) == cState) return;\n      var doesReset = _update.transactions.some(function (tr) {\n        return (tr.selection || tr.docChanged) && !getUserEvent(tr);\n      });\n      for (var i = 0; i < this.running.length; i++) {\n        var query = this.running[i];\n        if (doesReset || query.updates.length + _update.transactions.length > MaxUpdateCount && Date.now() - query.time > MinAbortTime) {\n          var _iterator4 = _createForOfIteratorHelper(query.context.abortListeners),\n            _step4;\n          try {\n            for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n              var handler = _step4.value;\n              try {\n                handler();\n              } catch (e) {\n                logException(this.view.state, e);\n              }\n            }\n          } catch (err) {\n            _iterator4.e(err);\n          } finally {\n            _iterator4.f();\n          }\n          query.context.abortListeners = null;\n          this.running.splice(i--, 1);\n        } else {\n          var _query$updates;\n          (_query$updates = query.updates).push.apply(_query$updates, _toConsumableArray(_update.transactions));\n        }\n      }\n      if (this.debounceUpdate > -1) clearTimeout(this.debounceUpdate);\n      this.debounceUpdate = cState.active.some(function (a) {\n        return a.state == 1 /* State.Pending */ && !_this.running.some(function (q) {\n          return q.active.source == a.source;\n        });\n      }) ? setTimeout(function () {\n        return _this.startUpdate();\n      }, DebounceTime) : -1;\n      if (this.composing != 0 /* CompositionState.None */) {\n        var _iterator5 = _createForOfIteratorHelper(_update.transactions),\n          _step5;\n        try {\n          for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n            var tr = _step5.value;\n            if (getUserEvent(tr) == \"input\") this.composing = 2 /* CompositionState.Changed */;else if (this.composing == 2 /* CompositionState.Changed */ && tr.selection) this.composing = 3 /* CompositionState.ChangedAndMoved */;\n          }\n        } catch (err) {\n          _iterator5.e(err);\n        } finally {\n          _iterator5.f();\n        }\n      }\n    }\n  }, {\n    key: \"startUpdate\",\n    value: function startUpdate() {\n      var _this2 = this;\n      this.debounceUpdate = -1;\n      var state = this.view.state,\n        cState = state.field(completionState);\n      var _iterator6 = _createForOfIteratorHelper(cState.active),\n        _step6;\n      try {\n        var _loop = function _loop() {\n          var active = _step6.value;\n          if (active.state == 1 /* State.Pending */ && !_this2.running.some(function (r) {\n            return r.active.source == active.source;\n          })) _this2.startQuery(active);\n        };\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          _loop();\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n    }\n  }, {\n    key: \"startQuery\",\n    value: function startQuery(active) {\n      var _this3 = this;\n      var state = this.view.state,\n        pos = cur(state);\n      var context = new CompletionContext(state, pos, active.explicitPos == pos);\n      var pending = new RunningQuery(active, context);\n      this.running.push(pending);\n      Promise.resolve(active.source(context)).then(function (result) {\n        if (!pending.context.aborted) {\n          pending.done = result || null;\n          _this3.scheduleAccept();\n        }\n      }, function (err) {\n        _this3.view.dispatch({\n          effects: closeCompletionEffect.of(null)\n        });\n        logException(_this3.view.state, err);\n      });\n    }\n  }, {\n    key: \"scheduleAccept\",\n    value: function scheduleAccept() {\n      var _this4 = this;\n      if (this.running.every(function (q) {\n        return q.done !== undefined;\n      })) this.accept();else if (this.debounceAccept < 0) this.debounceAccept = setTimeout(function () {\n        return _this4.accept();\n      }, DebounceTime);\n    }\n    // For each finished query in this.running, try to create a result\n    // or, if appropriate, restart the query.\n  }, {\n    key: \"accept\",\n    value: function accept() {\n      var _this5 = this;\n      var _a;\n      if (this.debounceAccept > -1) clearTimeout(this.debounceAccept);\n      this.debounceAccept = -1;\n      var updated = [];\n      var conf = this.view.state.facet(completionConfig);\n      var _loop2 = function _loop2(_i2) {\n        var query = _this5.running[_i2];\n        if (query.done === undefined) {\n          i = _i2;\n          return \"continue\";\n        }\n        _this5.running.splice(_i2--, 1);\n        if (query.done) {\n          var active = new ActiveResult(query.active.source, query.active.explicitPos, query.done, query.done.from, (_a = query.done.to) !== null && _a !== void 0 ? _a : cur(query.updates.length ? query.updates[0].startState : _this5.view.state));\n          // Replay the transactions that happened since the start of\n          // the request and see if that preserves the result\n          var _iterator7 = _createForOfIteratorHelper(query.updates),\n            _step7;\n          try {\n            for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n              var tr = _step7.value;\n              active = active.update(tr, conf);\n            }\n          } catch (err) {\n            _iterator7.e(err);\n          } finally {\n            _iterator7.f();\n          }\n          if (active.hasResult()) {\n            updated.push(active);\n            i = _i2;\n            return \"continue\";\n          }\n        }\n        var current = _this5.view.state.field(completionState).active.find(function (a) {\n          return a.source == query.active.source;\n        });\n        if (current && current.state == 1 /* State.Pending */) {\n          if (query.done == null) {\n            // Explicitly failed. Should clear the pending status if it\n            // hasn't been re-set in the meantime.\n            var _active = new ActiveSource(query.active.source, 0 /* State.Inactive */);\n            var _iterator8 = _createForOfIteratorHelper(query.updates),\n              _step8;\n            try {\n              for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n                var _tr = _step8.value;\n                _active = _active.update(_tr, conf);\n              }\n            } catch (err) {\n              _iterator8.e(err);\n            } finally {\n              _iterator8.f();\n            }\n            if (_active.state != 1 /* State.Pending */) updated.push(_active);\n          } else {\n            // Cleared by subsequent transactions. Restart.\n            _this5.startQuery(current);\n          }\n        }\n        i = _i2;\n      };\n      for (var i = 0; i < this.running.length; i++) {\n        var _ret = _loop2(i);\n        if (_ret === \"continue\") continue;\n      }\n      if (updated.length) this.view.dispatch({\n        effects: setActiveEffect.of(updated)\n      });\n    }\n  }]);\n  return _class;\n}(), {\n  eventHandlers: {\n    blur: function blur(event) {\n      var state = this.view.state.field(completionState, false);\n      if (state && state.tooltip && this.view.state.facet(completionConfig).closeOnBlur) {\n        var dialog = state.open && getTooltip(this.view, state.open.tooltip);\n        if (!dialog || !dialog.dom.contains(event.relatedTarget)) this.view.dispatch({\n          effects: closeCompletionEffect.of(null)\n        });\n      }\n    },\n    compositionstart: function compositionstart() {\n      this.composing = 1 /* CompositionState.Started */;\n    },\n    compositionend: function compositionend() {\n      var _this6 = this;\n      if (this.composing == 3 /* CompositionState.ChangedAndMoved */) {\n        // Safari fires compositionend events synchronously, possibly\n        // from inside an update, so dispatch asynchronously to avoid reentrancy\n        setTimeout(function () {\n          return _this6.view.dispatch({\n            effects: startCompletionEffect.of(false)\n          });\n        }, 20);\n      }\n      this.composing = 0 /* CompositionState.None */;\n    }\n  }\n});\n\nfunction applyCompletion(view, option) {\n  var apply = option.completion.apply || option.completion.label;\n  var result = view.state.field(completionState).active.find(function (a) {\n    return a.source == option.source;\n  });\n  if (!(result instanceof ActiveResult)) return false;\n  if (typeof apply == \"string\") view.dispatch(Object.assign(Object.assign({}, insertCompletionText(view.state, apply, result.from, result.to)), {\n    annotations: pickedCompletion.of(option.completion)\n  }));else apply(view, option.completion, result.from, result.to);\n  return true;\n}\nfunction optionContent(config) {\n  var content = config.addToOptions.slice();\n  if (config.icons) content.push({\n    render: function render(completion) {\n      var _icon$classList;\n      var icon = document.createElement(\"div\");\n      icon.classList.add(\"cm-completionIcon\");\n      if (completion.type) (_icon$classList = icon.classList).add.apply(_icon$classList, _toConsumableArray(completion.type.split(/\\s+/g).map(function (cls) {\n        return \"cm-completionIcon-\" + cls;\n      })));\n      icon.setAttribute(\"aria-hidden\", \"true\");\n      return icon;\n    },\n    position: 20\n  });\n  content.push({\n    render: function render(completion, _s, match) {\n      var labelElt = document.createElement(\"span\");\n      labelElt.className = \"cm-completionLabel\";\n      var label = completion.label,\n        off = 0;\n      for (var j = 1; j < match.length;) {\n        var from = match[j++],\n          to = match[j++];\n        if (from > off) labelElt.appendChild(document.createTextNode(label.slice(off, from)));\n        var span = labelElt.appendChild(document.createElement(\"span\"));\n        span.appendChild(document.createTextNode(label.slice(from, to)));\n        span.className = \"cm-completionMatchedText\";\n        off = to;\n      }\n      if (off < label.length) labelElt.appendChild(document.createTextNode(label.slice(off)));\n      return labelElt;\n    },\n    position: 50\n  }, {\n    render: function render(completion) {\n      if (!completion.detail) return null;\n      var detailElt = document.createElement(\"span\");\n      detailElt.className = \"cm-completionDetail\";\n      detailElt.textContent = completion.detail;\n      return detailElt;\n    },\n    position: 80\n  });\n  return content.sort(function (a, b) {\n    return a.position - b.position;\n  }).map(function (a) {\n    return a.render;\n  });\n}\nfunction rangeAroundSelected(total, selected, max) {\n  if (total <= max) return {\n    from: 0,\n    to: total\n  };\n  if (selected < 0) selected = 0;\n  if (selected <= total >> 1) {\n    var _off = Math.floor(selected / max);\n    return {\n      from: _off * max,\n      to: (_off + 1) * max\n    };\n  }\n  var off = Math.floor((total - selected) / max);\n  return {\n    from: total - (off + 1) * max,\n    to: total - off * max\n  };\n}\nvar CompletionTooltip = /*#__PURE__*/function () {\n  function CompletionTooltip(view, stateField) {\n    var _this7 = this;\n    _classCallCheck(this, CompletionTooltip);\n    this.view = view;\n    this.stateField = stateField;\n    this.info = null;\n    this.placeInfoReq = {\n      read: function read() {\n        return _this7.measureInfo();\n      },\n      write: function write(pos) {\n        return _this7.placeInfo(pos);\n      },\n      key: this\n    };\n    this.space = null;\n    this.currentClass = \"\";\n    var cState = view.state.field(stateField);\n    var _cState$open = cState.open,\n      options = _cState$open.options,\n      selected = _cState$open.selected;\n    var config = view.state.facet(completionConfig);\n    this.optionContent = optionContent(config);\n    this.optionClass = config.optionClass;\n    this.tooltipClass = config.tooltipClass;\n    this.range = rangeAroundSelected(options.length, selected, config.maxRenderedOptions);\n    this.dom = document.createElement(\"div\");\n    this.dom.className = \"cm-tooltip-autocomplete\";\n    this.updateTooltipClass(view.state);\n    this.dom.addEventListener(\"mousedown\", function (e) {\n      for (var dom = e.target, match; dom && dom != _this7.dom; dom = dom.parentNode) {\n        if (dom.nodeName == \"LI\" && (match = /-(\\d+)$/.exec(dom.id)) && +match[1] < options.length) {\n          applyCompletion(view, options[+match[1]]);\n          e.preventDefault();\n          return;\n        }\n      }\n    });\n    this.dom.addEventListener(\"focusout\", function (e) {\n      var state = view.state.field(_this7.stateField, false);\n      if (state && state.tooltip && view.state.facet(completionConfig).closeOnBlur && e.relatedTarget != view.contentDOM) view.dispatch({\n        effects: closeCompletionEffect.of(null)\n      });\n    });\n    this.list = this.dom.appendChild(this.createListBox(options, cState.id, this.range));\n    this.list.addEventListener(\"scroll\", function () {\n      if (_this7.info) _this7.view.requestMeasure(_this7.placeInfoReq);\n    });\n  }\n  _createClass(CompletionTooltip, [{\n    key: \"mount\",\n    value: function mount() {\n      this.updateSel();\n    }\n  }, {\n    key: \"update\",\n    value: function update(_update2) {\n      var _a, _b, _c;\n      var cState = _update2.state.field(this.stateField);\n      var prevState = _update2.startState.field(this.stateField);\n      this.updateTooltipClass(_update2.state);\n      if (cState != prevState) {\n        this.updateSel();\n        if (((_a = cState.open) === null || _a === void 0 ? void 0 : _a.disabled) != ((_b = prevState.open) === null || _b === void 0 ? void 0 : _b.disabled)) this.dom.classList.toggle(\"cm-tooltip-autocomplete-disabled\", !!((_c = cState.open) === null || _c === void 0 ? void 0 : _c.disabled));\n      }\n    }\n  }, {\n    key: \"updateTooltipClass\",\n    value: function updateTooltipClass(state) {\n      var cls = this.tooltipClass(state);\n      if (cls != this.currentClass) {\n        var _iterator9 = _createForOfIteratorHelper(this.currentClass.split(\" \")),\n          _step9;\n        try {\n          for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n            var c = _step9.value;\n            if (c) this.dom.classList.remove(c);\n          }\n        } catch (err) {\n          _iterator9.e(err);\n        } finally {\n          _iterator9.f();\n        }\n        var _iterator10 = _createForOfIteratorHelper(cls.split(\" \")),\n          _step10;\n        try {\n          for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n            var _c2 = _step10.value;\n            if (_c2) this.dom.classList.add(_c2);\n          }\n        } catch (err) {\n          _iterator10.e(err);\n        } finally {\n          _iterator10.f();\n        }\n        this.currentClass = cls;\n      }\n    }\n  }, {\n    key: \"positioned\",\n    value: function positioned(space) {\n      this.space = space;\n      if (this.info) this.view.requestMeasure(this.placeInfoReq);\n    }\n  }, {\n    key: \"updateSel\",\n    value: function updateSel() {\n      var _this8 = this;\n      var cState = this.view.state.field(this.stateField),\n        open = cState.open;\n      if (open.selected > -1 && open.selected < this.range.from || open.selected >= this.range.to) {\n        this.range = rangeAroundSelected(open.options.length, open.selected, this.view.state.facet(completionConfig).maxRenderedOptions);\n        this.list.remove();\n        this.list = this.dom.appendChild(this.createListBox(open.options, cState.id, this.range));\n        this.list.addEventListener(\"scroll\", function () {\n          if (_this8.info) _this8.view.requestMeasure(_this8.placeInfoReq);\n        });\n      }\n      if (this.updateSelectedOption(open.selected)) {\n        if (this.info) {\n          this.info.remove();\n          this.info = null;\n        }\n        var completion = open.options[open.selected].completion;\n        var info = completion.info;\n        if (!info) return;\n        var infoResult = typeof info === 'string' ? document.createTextNode(info) : info(completion);\n        if (!infoResult) return;\n        if ('then' in infoResult) {\n          infoResult.then(function (node) {\n            if (node && _this8.view.state.field(_this8.stateField, false) == cState) _this8.addInfoPane(node);\n          }).catch(function (e) {\n            return logException(_this8.view.state, e, \"completion info\");\n          });\n        } else {\n          this.addInfoPane(infoResult);\n        }\n      }\n    }\n  }, {\n    key: \"addInfoPane\",\n    value: function addInfoPane(content) {\n      var dom = this.info = document.createElement(\"div\");\n      dom.className = \"cm-tooltip cm-completionInfo\";\n      dom.appendChild(content);\n      this.dom.appendChild(dom);\n      this.view.requestMeasure(this.placeInfoReq);\n    }\n  }, {\n    key: \"updateSelectedOption\",\n    value: function updateSelectedOption(selected) {\n      var set = null;\n      for (var opt = this.list.firstChild, i = this.range.from; opt; opt = opt.nextSibling, i++) {\n        if (opt.nodeName != \"LI\" || !opt.id) {\n          i--; // A section header\n        } else if (i == selected) {\n          if (!opt.hasAttribute(\"aria-selected\")) {\n            opt.setAttribute(\"aria-selected\", \"true\");\n            set = opt;\n          }\n        } else {\n          if (opt.hasAttribute(\"aria-selected\")) opt.removeAttribute(\"aria-selected\");\n        }\n      }\n      if (set) scrollIntoView(this.list, set);\n      return set;\n    }\n  }, {\n    key: \"measureInfo\",\n    value: function measureInfo() {\n      var sel = this.dom.querySelector(\"[aria-selected]\");\n      if (!sel || !this.info) return null;\n      var listRect = this.dom.getBoundingClientRect();\n      var infoRect = this.info.getBoundingClientRect();\n      var selRect = sel.getBoundingClientRect();\n      var space = this.space;\n      if (!space) {\n        var win = this.dom.ownerDocument.defaultView || window;\n        space = {\n          left: 0,\n          top: 0,\n          right: win.innerWidth,\n          bottom: win.innerHeight\n        };\n      }\n      if (selRect.top > Math.min(space.bottom, listRect.bottom) - 10 || selRect.bottom < Math.max(space.top, listRect.top) + 10) return null;\n      return this.view.state.facet(completionConfig).positionInfo(this.view, listRect, selRect, infoRect, space);\n    }\n  }, {\n    key: \"placeInfo\",\n    value: function placeInfo(pos) {\n      if (this.info) {\n        if (pos) {\n          if (pos.style) this.info.style.cssText = pos.style;\n          this.info.className = \"cm-tooltip cm-completionInfo \" + (pos.class || \"\");\n        } else {\n          this.info.style.cssText = \"top: -1e6px\";\n        }\n      }\n    }\n  }, {\n    key: \"createListBox\",\n    value: function createListBox(options, id, range) {\n      var ul = document.createElement(\"ul\");\n      ul.id = id;\n      ul.setAttribute(\"role\", \"listbox\");\n      ul.setAttribute(\"aria-expanded\", \"true\");\n      ul.setAttribute(\"aria-label\", this.view.state.phrase(\"Completions\"));\n      var curSection = null;\n      for (var i = range.from; i < range.to; i++) {\n        var _options$i = options[i],\n          completion = _options$i.completion,\n          match = _options$i.match,\n          section = completion.section;\n        if (section) {\n          var name = typeof section == \"string\" ? section : section.name;\n          if (name != curSection && (i > range.from || range.from == 0)) {\n            curSection = name;\n            if (typeof section != \"string\" && section.header) {\n              ul.appendChild(section.header(section));\n            } else {\n              var header = ul.appendChild(document.createElement(\"completion-section\"));\n              header.textContent = name;\n            }\n          }\n        }\n        var li = ul.appendChild(document.createElement(\"li\"));\n        li.id = id + \"-\" + i;\n        li.setAttribute(\"role\", \"option\");\n        var cls = this.optionClass(completion);\n        if (cls) li.className = cls;\n        var _iterator11 = _createForOfIteratorHelper(this.optionContent),\n          _step11;\n        try {\n          for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n            var source = _step11.value;\n            var node = source(completion, this.view.state, match);\n            if (node) li.appendChild(node);\n          }\n        } catch (err) {\n          _iterator11.e(err);\n        } finally {\n          _iterator11.f();\n        }\n      }\n      if (range.from) ul.classList.add(\"cm-completionListIncompleteTop\");\n      if (range.to < options.length) ul.classList.add(\"cm-completionListIncompleteBottom\");\n      return ul;\n    }\n  }]);\n  return CompletionTooltip;\n}(); // We allocate a new function instance every time the completion\n// changes to force redrawing/repositioning of the tooltip\nfunction completionTooltip(stateField) {\n  return function (view) {\n    return new CompletionTooltip(view, stateField);\n  };\n}\nfunction scrollIntoView(container, element) {\n  var parent = container.getBoundingClientRect();\n  var self = element.getBoundingClientRect();\n  if (self.top < parent.top) container.scrollTop -= parent.top - self.top;else if (self.bottom > parent.bottom) container.scrollTop += self.bottom - parent.bottom;\n}\n\n// Used to pick a preferred option when two options with the same\n// label occur in the result.\nfunction score(option) {\n  return (option.boost || 0) * 100 + (option.apply ? 10 : 0) + (option.info ? 5 : 0) + (option.type ? 1 : 0);\n}\nfunction sortOptions(active, state) {\n  var options = [];\n  var sections = null;\n  var addOption = function addOption(option) {\n    options.push(option);\n    var section = option.completion.section;\n    if (section) {\n      if (!sections) sections = [];\n      var name = typeof section == \"string\" ? section : section.name;\n      if (!sections.some(function (s) {\n        return s.name == name;\n      })) sections.push(typeof section == \"string\" ? {\n        name: name\n      } : section);\n    }\n  };\n  var _iterator12 = _createForOfIteratorHelper(active),\n    _step12;\n  try {\n    for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n      var a = _step12.value;\n      if (a.hasResult()) {\n        if (a.result.filter === false) {\n          var getMatch = a.result.getMatch;\n          var _iterator16 = _createForOfIteratorHelper(a.result.options),\n            _step16;\n          try {\n            for (_iterator16.s(); !(_step16 = _iterator16.n()).done;) {\n              var _option = _step16.value;\n              var match = [1e9 - options.length];\n              if (getMatch) {\n                var _iterator17 = _createForOfIteratorHelper(getMatch(_option)),\n                  _step17;\n                try {\n                  for (_iterator17.s(); !(_step17 = _iterator17.n()).done;) {\n                    var n = _step17.value;\n                    match.push(n);\n                  }\n                } catch (err) {\n                  _iterator17.e(err);\n                } finally {\n                  _iterator17.f();\n                }\n              }\n              addOption(new Option(_option, a.source, match, match[0]));\n            }\n          } catch (err) {\n            _iterator16.e(err);\n          } finally {\n            _iterator16.f();\n          }\n        } else {\n          var matcher = new FuzzyMatcher(state.sliceDoc(a.from, a.to)),\n            _match = void 0;\n          var _iterator18 = _createForOfIteratorHelper(a.result.options),\n            _step18;\n          try {\n            for (_iterator18.s(); !(_step18 = _iterator18.n()).done;) {\n              var _option2 = _step18.value;\n              if (_match = matcher.match(_option2.label)) {\n                addOption(new Option(_option2, a.source, _match, _match[0] + (_option2.boost || 0)));\n              }\n            }\n          } catch (err) {\n            _iterator18.e(err);\n          } finally {\n            _iterator18.f();\n          }\n        }\n      }\n    }\n  } catch (err) {\n    _iterator12.e(err);\n  } finally {\n    _iterator12.f();\n  }\n  if (sections) {\n    var sectionOrder = Object.create(null),\n      pos = 0;\n    var cmp = function cmp(a, b) {\n      var _a, _b;\n      return ((_a = a.rank) !== null && _a !== void 0 ? _a : 1e9) - ((_b = b.rank) !== null && _b !== void 0 ? _b : 1e9) || (a.name < b.name ? -1 : 1);\n    };\n    var _iterator13 = _createForOfIteratorHelper(sections.sort(cmp)),\n      _step13;\n    try {\n      for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {\n        var s = _step13.value;\n        pos -= 1e5;\n        sectionOrder[s.name] = pos;\n      }\n    } catch (err) {\n      _iterator13.e(err);\n    } finally {\n      _iterator13.f();\n    }\n    var _iterator14 = _createForOfIteratorHelper(options),\n      _step14;\n    try {\n      for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {\n        var option = _step14.value;\n        var section = option.completion.section;\n        if (section) option.score += sectionOrder[typeof section == \"string\" ? section : section.name];\n      }\n    } catch (err) {\n      _iterator14.e(err);\n    } finally {\n      _iterator14.f();\n    }\n  }\n  var result = [],\n    prev = null;\n  var compare = state.facet(completionConfig).compareCompletions;\n  var _iterator15 = _createForOfIteratorHelper(options.sort(function (a, b) {\n      return b.score - a.score || compare(a.completion, b.completion);\n    })),\n    _step15;\n  try {\n    for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {\n      var opt = _step15.value;\n      if (!prev || prev.label != opt.completion.label || prev.detail != opt.completion.detail || prev.type != null && opt.completion.type != null && prev.type != opt.completion.type || prev.apply != opt.completion.apply) result.push(opt);else if (score(opt.completion) > score(prev)) result[result.length - 1] = opt;\n      prev = opt.completion;\n    }\n  } catch (err) {\n    _iterator15.e(err);\n  } finally {\n    _iterator15.f();\n  }\n  return result;\n}\nvar CompletionDialog = /*#__PURE__*/function () {\n  function CompletionDialog(options, attrs, tooltip, timestamp, selected, disabled) {\n    _classCallCheck(this, CompletionDialog);\n    this.options = options;\n    this.attrs = attrs;\n    this.tooltip = tooltip;\n    this.timestamp = timestamp;\n    this.selected = selected;\n    this.disabled = disabled;\n  }\n  _createClass(CompletionDialog, [{\n    key: \"setSelected\",\n    value: function setSelected(selected, id) {\n      return selected == this.selected || selected >= this.options.length ? this : new CompletionDialog(this.options, makeAttrs(id, selected), this.tooltip, this.timestamp, selected, this.disabled);\n    }\n  }, {\n    key: \"map\",\n    value: function map(changes) {\n      return new CompletionDialog(this.options, this.attrs, Object.assign(Object.assign({}, this.tooltip), {\n        pos: changes.mapPos(this.tooltip.pos)\n      }), this.timestamp, this.selected, this.disabled);\n    }\n  }], [{\n    key: \"build\",\n    value: function build(active, state, id, prev, conf) {\n      var options = sortOptions(active, state);\n      if (!options.length) {\n        return prev && active.some(function (a) {\n          return a.state == 1;\n        } /* State.Pending */) ? new CompletionDialog(prev.options, prev.attrs, prev.tooltip, prev.timestamp, prev.selected, true) : null;\n      }\n      var selected = state.facet(completionConfig).selectOnOpen ? 0 : -1;\n      if (prev && prev.selected != selected && prev.selected != -1) {\n        var selectedValue = prev.options[prev.selected].completion;\n        for (var i = 0; i < options.length; i++) if (options[i].completion == selectedValue) {\n          selected = i;\n          break;\n        }\n      }\n      return new CompletionDialog(options, makeAttrs(id, selected), {\n        pos: active.reduce(function (a, b) {\n          return b.hasResult() ? Math.min(a, b.from) : a;\n        }, 1e8),\n        create: completionTooltip(completionState),\n        above: conf.aboveCursor\n      }, prev ? prev.timestamp : Date.now(), selected, false);\n    }\n  }]);\n  return CompletionDialog;\n}();\nvar CompletionState = /*#__PURE__*/function () {\n  function CompletionState(active, id, open) {\n    _classCallCheck(this, CompletionState);\n    this.active = active;\n    this.id = id;\n    this.open = open;\n  }\n  _createClass(CompletionState, [{\n    key: \"update\",\n    value: function update(tr) {\n      var _this9 = this;\n      var state = tr.state,\n        conf = state.facet(completionConfig);\n      var sources = conf.override || state.languageDataAt(\"autocomplete\", cur(state)).map(asSource);\n      var active = sources.map(function (source) {\n        var value = _this9.active.find(function (s) {\n          return s.source == source;\n        }) || new ActiveSource(source, _this9.active.some(function (a) {\n          return a.state != 0;\n        } /* State.Inactive */) ? 1 /* State.Pending */ : 0 /* State.Inactive */);\n        return value.update(tr, conf);\n      });\n      if (active.length == this.active.length && active.every(function (a, i) {\n        return a == _this9.active[i];\n      })) active = this.active;\n      var open = this.open;\n      if (open && tr.docChanged) open = open.map(tr.changes);\n      if (tr.selection || active.some(function (a) {\n        return a.hasResult() && tr.changes.touchesRange(a.from, a.to);\n      }) || !sameResults(active, this.active)) open = CompletionDialog.build(active, state, this.id, open, conf);else if (open && open.disabled && !active.some(function (a) {\n        return a.state == 1;\n      } /* State.Pending */)) open = null;\n      if (!open && active.every(function (a) {\n        return a.state != 1;\n      } /* State.Pending */) && active.some(function (a) {\n        return a.hasResult();\n      })) active = active.map(function (a) {\n        return a.hasResult() ? new ActiveSource(a.source, 0 /* State.Inactive */) : a;\n      });\n      var _iterator19 = _createForOfIteratorHelper(tr.effects),\n        _step19;\n      try {\n        for (_iterator19.s(); !(_step19 = _iterator19.n()).done;) {\n          var effect = _step19.value;\n          if (effect.is(setSelectedEffect)) open = open && open.setSelected(effect.value, this.id);\n        }\n      } catch (err) {\n        _iterator19.e(err);\n      } finally {\n        _iterator19.f();\n      }\n      return active == this.active && open == this.open ? this : new CompletionState(active, this.id, open);\n    }\n  }, {\n    key: \"tooltip\",\n    get: function get() {\n      return this.open ? this.open.tooltip : null;\n    }\n  }, {\n    key: \"attrs\",\n    get: function get() {\n      return this.open ? this.open.attrs : baseAttrs;\n    }\n  }], [{\n    key: \"start\",\n    value: function start() {\n      return new CompletionState(none, \"cm-ac-\" + Math.floor(Math.random() * 2e6).toString(36), null);\n    }\n  }]);\n  return CompletionState;\n}();\nfunction sameResults(a, b) {\n  if (a == b) return true;\n  for (var iA = 0, iB = 0;;) {\n    while (iA < a.length && !a[iA].hasResult) iA++;\n    while (iB < b.length && !b[iB].hasResult) iB++;\n    var endA = iA == a.length,\n      endB = iB == b.length;\n    if (endA || endB) return endA == endB;\n    if (a[iA++].result != b[iB++].result) return false;\n  }\n}\nvar baseAttrs = {\n  \"aria-autocomplete\": \"list\"\n};\nfunction makeAttrs(id, selected) {\n  var result = {\n    \"aria-autocomplete\": \"list\",\n    \"aria-haspopup\": \"listbox\",\n    \"aria-controls\": id\n  };\n  if (selected > -1) result[\"aria-activedescendant\"] = id + \"-\" + selected;\n  return result;\n}\nvar none = [];\nfunction getUserEvent(tr) {\n  return tr.isUserEvent(\"input.type\") ? \"input\" : tr.isUserEvent(\"delete.backward\") ? \"delete\" : null;\n}\nvar ActiveSource = /*#__PURE__*/function () {\n  function ActiveSource(source, state) {\n    var explicitPos = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : -1;\n    _classCallCheck(this, ActiveSource);\n    this.source = source;\n    this.state = state;\n    this.explicitPos = explicitPos;\n  }\n  _createClass(ActiveSource, [{\n    key: \"hasResult\",\n    value: function hasResult() {\n      return false;\n    }\n  }, {\n    key: \"update\",\n    value: function update(tr, conf) {\n      var event = getUserEvent(tr),\n        value = this;\n      if (event) value = value.handleUserEvent(tr, event, conf);else if (tr.docChanged) value = value.handleChange(tr);else if (tr.selection && value.state != 0 /* State.Inactive */) value = new ActiveSource(value.source, 0 /* State.Inactive */);\n      var _iterator20 = _createForOfIteratorHelper(tr.effects),\n        _step20;\n      try {\n        for (_iterator20.s(); !(_step20 = _iterator20.n()).done;) {\n          var effect = _step20.value;\n          if (effect.is(startCompletionEffect)) value = new ActiveSource(value.source, 1 /* State.Pending */, effect.value ? cur(tr.state) : -1);else if (effect.is(closeCompletionEffect)) value = new ActiveSource(value.source, 0 /* State.Inactive */);else if (effect.is(setActiveEffect)) {\n            var _iterator21 = _createForOfIteratorHelper(effect.value),\n              _step21;\n            try {\n              for (_iterator21.s(); !(_step21 = _iterator21.n()).done;) {\n                var active = _step21.value;\n                if (active.source == value.source) value = active;\n              }\n            } catch (err) {\n              _iterator21.e(err);\n            } finally {\n              _iterator21.f();\n            }\n          }\n        }\n      } catch (err) {\n        _iterator20.e(err);\n      } finally {\n        _iterator20.f();\n      }\n      return value;\n    }\n  }, {\n    key: \"handleUserEvent\",\n    value: function handleUserEvent(tr, type, conf) {\n      return type == \"delete\" || !conf.activateOnTyping ? this.map(tr.changes) : new ActiveSource(this.source, 1 /* State.Pending */);\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(tr) {\n      return tr.changes.touchesRange(cur(tr.startState)) ? new ActiveSource(this.source, 0 /* State.Inactive */) : this.map(tr.changes);\n    }\n  }, {\n    key: \"map\",\n    value: function map(changes) {\n      return changes.empty || this.explicitPos < 0 ? this : new ActiveSource(this.source, this.state, changes.mapPos(this.explicitPos));\n    }\n  }]);\n  return ActiveSource;\n}();\nvar ActiveResult = /*#__PURE__*/function (_ActiveSource) {\n  _inherits(ActiveResult, _ActiveSource);\n  var _super = _createSuper(ActiveResult);\n  function ActiveResult(source, explicitPos, result, from, to) {\n    var _this10;\n    _classCallCheck(this, ActiveResult);\n    _this10 = _super.call(this, source, 2 /* State.Result */, explicitPos);\n    _this10.result = result;\n    _this10.from = from;\n    _this10.to = to;\n    return _this10;\n  }\n  _createClass(ActiveResult, [{\n    key: \"hasResult\",\n    value: function hasResult() {\n      return true;\n    }\n  }, {\n    key: \"handleUserEvent\",\n    value: function handleUserEvent(tr, type, conf) {\n      var _a;\n      var from = tr.changes.mapPos(this.from),\n        to = tr.changes.mapPos(this.to, 1);\n      var pos = cur(tr.state);\n      if ((this.explicitPos < 0 ? pos <= from : pos < this.from) || pos > to || type == \"delete\" && cur(tr.startState) == this.from) return new ActiveSource(this.source, type == \"input\" && conf.activateOnTyping ? 1 /* State.Pending */ : 0 /* State.Inactive */);\n      var explicitPos = this.explicitPos < 0 ? -1 : tr.changes.mapPos(this.explicitPos),\n        updated;\n      if (checkValid(this.result.validFor, tr.state, from, to)) return new ActiveResult(this.source, explicitPos, this.result, from, to);\n      if (this.result.update && (updated = this.result.update(this.result, from, to, new CompletionContext(tr.state, pos, explicitPos >= 0)))) return new ActiveResult(this.source, explicitPos, updated, updated.from, (_a = updated.to) !== null && _a !== void 0 ? _a : cur(tr.state));\n      return new ActiveSource(this.source, 1 /* State.Pending */, explicitPos);\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(tr) {\n      return tr.changes.touchesRange(this.from, this.to) ? new ActiveSource(this.source, 0 /* State.Inactive */) : this.map(tr.changes);\n    }\n  }, {\n    key: \"map\",\n    value: function map(mapping) {\n      return mapping.empty ? this : new ActiveResult(this.source, this.explicitPos < 0 ? -1 : mapping.mapPos(this.explicitPos), this.result, mapping.mapPos(this.from), mapping.mapPos(this.to, 1));\n    }\n  }]);\n  return ActiveResult;\n}(ActiveSource);\nfunction checkValid(validFor, state, from, to) {\n  if (!validFor) return false;\n  var text = state.sliceDoc(from, to);\n  return typeof validFor == \"function\" ? validFor(text, from, to, state) : ensureAnchor(validFor, true).test(text);\n}\nvar setActiveEffect = /*@__PURE__*/StateEffect.define({\n  map: function map(sources, mapping) {\n    return sources.map(function (s) {\n      return s.map(mapping);\n    });\n  }\n});\nvar setSelectedEffect = /*@__PURE__*/StateEffect.define();\nvar completionState = /*@__PURE__*/StateField.define({\n  create: function create() {\n    return CompletionState.start();\n  },\n  update: function update(value, tr) {\n    return value.update(tr);\n  },\n  provide: function provide(f) {\n    return [showTooltip.from(f, function (val) {\n      return val.tooltip;\n    }), EditorView.contentAttributes.from(f, function (state) {\n      return state.attrs;\n    })];\n  }\n});\nvar baseTheme = /*@__PURE__*/EditorView.baseTheme({\n  \".cm-tooltip.cm-tooltip-autocomplete\": {\n    \"& > ul\": {\n      fontFamily: \"monospace\",\n      whiteSpace: \"nowrap\",\n      overflow: \"hidden auto\",\n      maxWidth_fallback: \"700px\",\n      maxWidth: \"min(700px, 95vw)\",\n      minWidth: \"250px\",\n      maxHeight: \"10em\",\n      height: \"100%\",\n      listStyle: \"none\",\n      margin: 0,\n      padding: 0,\n      \"& > li, & > completion-section\": {\n        padding: \"1px 3px\",\n        lineHeight: 1.2\n      },\n      \"& > li\": {\n        overflowX: \"hidden\",\n        textOverflow: \"ellipsis\",\n        cursor: \"pointer\"\n      },\n      \"& > completion-section\": {\n        display: \"list-item\",\n        borderBottom: \"1px solid silver\",\n        paddingLeft: \"0.5em\",\n        opacity: 0.7\n      }\n    }\n  },\n  \"&light .cm-tooltip-autocomplete ul li[aria-selected]\": {\n    background: \"#17c\",\n    color: \"white\"\n  },\n  \"&light .cm-tooltip-autocomplete-disabled ul li[aria-selected]\": {\n    background: \"#777\"\n  },\n  \"&dark .cm-tooltip-autocomplete ul li[aria-selected]\": {\n    background: \"#347\",\n    color: \"white\"\n  },\n  \"&dark .cm-tooltip-autocomplete-disabled ul li[aria-selected]\": {\n    background: \"#444\"\n  },\n  \".cm-completionListIncompleteTop:before, .cm-completionListIncompleteBottom:after\": {\n    content: '\"···\"',\n    opacity: 0.5,\n    display: \"block\",\n    textAlign: \"center\"\n  },\n  \".cm-tooltip.cm-completionInfo\": {\n    position: \"absolute\",\n    padding: \"3px 9px\",\n    width: \"max-content\",\n    maxWidth: \"\".concat(400 /* Info.Width */, \"px\"),\n    boxSizing: \"border-box\"\n  },\n  \".cm-completionInfo.cm-completionInfo-left\": {\n    right: \"100%\"\n  },\n  \".cm-completionInfo.cm-completionInfo-right\": {\n    left: \"100%\"\n  },\n  \".cm-completionInfo.cm-completionInfo-left-narrow\": {\n    right: \"\".concat(30 /* Info.Margin */, \"px\")\n  },\n  \".cm-completionInfo.cm-completionInfo-right-narrow\": {\n    left: \"\".concat(30 /* Info.Margin */, \"px\")\n  },\n  \"&light .cm-snippetField\": {\n    backgroundColor: \"#00000022\"\n  },\n  \"&dark .cm-snippetField\": {\n    backgroundColor: \"#ffffff22\"\n  },\n  \".cm-snippetFieldPosition\": {\n    verticalAlign: \"text-top\",\n    width: 0,\n    height: \"1.15em\",\n    display: \"inline-block\",\n    margin: \"0 -0.7px -.7em\",\n    borderLeft: \"1.4px dotted #888\"\n  },\n  \".cm-completionMatchedText\": {\n    textDecoration: \"underline\"\n  },\n  \".cm-completionDetail\": {\n    marginLeft: \"0.5em\",\n    fontStyle: \"italic\"\n  },\n  \".cm-completionIcon\": {\n    fontSize: \"90%\",\n    width: \".8em\",\n    display: \"inline-block\",\n    textAlign: \"center\",\n    paddingRight: \".6em\",\n    opacity: \"0.6\",\n    boxSizing: \"content-box\"\n  },\n  \".cm-completionIcon-function, .cm-completionIcon-method\": {\n    \"&:after\": {\n      content: \"'ƒ'\"\n    }\n  },\n  \".cm-completionIcon-class\": {\n    \"&:after\": {\n      content: \"'○'\"\n    }\n  },\n  \".cm-completionIcon-interface\": {\n    \"&:after\": {\n      content: \"'◌'\"\n    }\n  },\n  \".cm-completionIcon-variable\": {\n    \"&:after\": {\n      content: \"'𝑥'\"\n    }\n  },\n  \".cm-completionIcon-constant\": {\n    \"&:after\": {\n      content: \"'𝐶'\"\n    }\n  },\n  \".cm-completionIcon-type\": {\n    \"&:after\": {\n      content: \"'𝑡'\"\n    }\n  },\n  \".cm-completionIcon-enum\": {\n    \"&:after\": {\n      content: \"'∪'\"\n    }\n  },\n  \".cm-completionIcon-property\": {\n    \"&:after\": {\n      content: \"'□'\"\n    }\n  },\n  \".cm-completionIcon-keyword\": {\n    \"&:after\": {\n      content: \"'\\uD83D\\uDD11\\uFE0E'\"\n    } // Disable emoji rendering\n  },\n\n  \".cm-completionIcon-namespace\": {\n    \"&:after\": {\n      content: \"'▢'\"\n    }\n  },\n  \".cm-completionIcon-text\": {\n    \"&:after\": {\n      content: \"'abc'\",\n      fontSize: \"50%\",\n      verticalAlign: \"middle\"\n    }\n  }\n});\nvar FieldPos = /*#__PURE__*/_createClass(function FieldPos(field, line, from, to) {\n  _classCallCheck(this, FieldPos);\n  this.field = field;\n  this.line = line;\n  this.from = from;\n  this.to = to;\n});\nvar FieldRange = /*#__PURE__*/function () {\n  function FieldRange(field, from, to) {\n    _classCallCheck(this, FieldRange);\n    this.field = field;\n    this.from = from;\n    this.to = to;\n  }\n  _createClass(FieldRange, [{\n    key: \"map\",\n    value: function map(changes) {\n      var from = changes.mapPos(this.from, -1, MapMode.TrackDel);\n      var to = changes.mapPos(this.to, 1, MapMode.TrackDel);\n      return from == null || to == null ? null : new FieldRange(this.field, from, to);\n    }\n  }]);\n  return FieldRange;\n}();\nvar Snippet = /*#__PURE__*/function () {\n  function Snippet(lines, fieldPositions) {\n    _classCallCheck(this, Snippet);\n    this.lines = lines;\n    this.fieldPositions = fieldPositions;\n  }\n  _createClass(Snippet, [{\n    key: \"instantiate\",\n    value: function instantiate(state, pos) {\n      var text = [],\n        lineStart = [pos];\n      var lineObj = state.doc.lineAt(pos),\n        baseIndent = /^\\s*/.exec(lineObj.text)[0];\n      var _iterator22 = _createForOfIteratorHelper(this.lines),\n        _step22;\n      try {\n        for (_iterator22.s(); !(_step22 = _iterator22.n()).done;) {\n          var line = _step22.value;\n          if (text.length) {\n            var indent = baseIndent,\n              tabs = /^\\t*/.exec(line)[0].length;\n            for (var i = 0; i < tabs; i++) indent += state.facet(indentUnit);\n            lineStart.push(pos + indent.length - tabs);\n            line = indent + line.slice(tabs);\n          }\n          text.push(line);\n          pos += line.length + 1;\n        }\n      } catch (err) {\n        _iterator22.e(err);\n      } finally {\n        _iterator22.f();\n      }\n      var ranges = this.fieldPositions.map(function (pos) {\n        return new FieldRange(pos.field, lineStart[pos.line] + pos.from, lineStart[pos.line] + pos.to);\n      });\n      return {\n        text: text,\n        ranges: ranges\n      };\n    }\n  }], [{\n    key: \"parse\",\n    value: function parse(template) {\n      var fields = [];\n      var lines = [],\n        positions = [],\n        m;\n      var _iterator23 = _createForOfIteratorHelper(template.split(/\\r\\n?|\\n/)),\n        _step23;\n      try {\n        for (_iterator23.s(); !(_step23 = _iterator23.n()).done;) {\n          var line = _step23.value;\n          while (m = /[#$]\\{(?:(\\d+)(?::([^}]*))?|([^}]*))\\}/.exec(line)) {\n            var seq = m[1] ? +m[1] : null,\n              name = m[2] || m[3] || \"\",\n              found = -1;\n            for (var i = 0; i < fields.length; i++) {\n              if (seq != null ? fields[i].seq == seq : name ? fields[i].name == name : false) found = i;\n            }\n            if (found < 0) {\n              var _i3 = 0;\n              while (_i3 < fields.length && (seq == null || fields[_i3].seq != null && fields[_i3].seq < seq)) _i3++;\n              fields.splice(_i3, 0, {\n                seq: seq,\n                name: name\n              });\n              found = _i3;\n              var _iterator24 = _createForOfIteratorHelper(positions),\n                _step24;\n              try {\n                for (_iterator24.s(); !(_step24 = _iterator24.n()).done;) {\n                  var pos = _step24.value;\n                  if (pos.field >= found) pos.field++;\n                }\n              } catch (err) {\n                _iterator24.e(err);\n              } finally {\n                _iterator24.f();\n              }\n            }\n            positions.push(new FieldPos(found, lines.length, m.index, m.index + name.length));\n            line = line.slice(0, m.index) + name + line.slice(m.index + m[0].length);\n          }\n          for (var esc; esc = /\\\\([{}])/.exec(line);) {\n            line = line.slice(0, esc.index) + esc[1] + line.slice(esc.index + esc[0].length);\n            var _iterator25 = _createForOfIteratorHelper(positions),\n              _step25;\n            try {\n              for (_iterator25.s(); !(_step25 = _iterator25.n()).done;) {\n                var _pos = _step25.value;\n                if (_pos.line == lines.length && _pos.from > esc.index) {\n                  _pos.from--;\n                  _pos.to--;\n                }\n              }\n            } catch (err) {\n              _iterator25.e(err);\n            } finally {\n              _iterator25.f();\n            }\n          }\n          lines.push(line);\n        }\n      } catch (err) {\n        _iterator23.e(err);\n      } finally {\n        _iterator23.f();\n      }\n      return new Snippet(lines, positions);\n    }\n  }]);\n  return Snippet;\n}();\nvar fieldMarker = /*@__PURE__*/Decoration.widget({\n  widget: /*@__PURE__*/new ( /*#__PURE__*/function (_WidgetType) {\n    _inherits(_class2, _WidgetType);\n    var _super2 = _createSuper(_class2);\n    function _class2() {\n      _classCallCheck(this, _class2);\n      return _super2.apply(this, arguments);\n    }\n    _createClass(_class2, [{\n      key: \"toDOM\",\n      value: function toDOM() {\n        var span = document.createElement(\"span\");\n        span.className = \"cm-snippetFieldPosition\";\n        return span;\n      }\n    }, {\n      key: \"ignoreEvent\",\n      value: function ignoreEvent() {\n        return false;\n      }\n    }]);\n    return _class2;\n  }(WidgetType))()\n});\nvar fieldRange = /*@__PURE__*/Decoration.mark({\n  class: \"cm-snippetField\"\n});\nvar ActiveSnippet = /*#__PURE__*/function () {\n  function ActiveSnippet(ranges, active) {\n    _classCallCheck(this, ActiveSnippet);\n    this.ranges = ranges;\n    this.active = active;\n    this.deco = Decoration.set(ranges.map(function (r) {\n      return (r.from == r.to ? fieldMarker : fieldRange).range(r.from, r.to);\n    }));\n  }\n  _createClass(ActiveSnippet, [{\n    key: \"map\",\n    value: function map(changes) {\n      var ranges = [];\n      var _iterator26 = _createForOfIteratorHelper(this.ranges),\n        _step26;\n      try {\n        for (_iterator26.s(); !(_step26 = _iterator26.n()).done;) {\n          var r = _step26.value;\n          var mapped = r.map(changes);\n          if (!mapped) return null;\n          ranges.push(mapped);\n        }\n      } catch (err) {\n        _iterator26.e(err);\n      } finally {\n        _iterator26.f();\n      }\n      return new ActiveSnippet(ranges, this.active);\n    }\n  }, {\n    key: \"selectionInsideField\",\n    value: function selectionInsideField(sel) {\n      var _this11 = this;\n      return sel.ranges.every(function (range) {\n        return _this11.ranges.some(function (r) {\n          return r.field == _this11.active && r.from <= range.from && r.to >= range.to;\n        });\n      });\n    }\n  }]);\n  return ActiveSnippet;\n}();\nvar setActive = /*@__PURE__*/StateEffect.define({\n  map: function map(value, changes) {\n    return value && value.map(changes);\n  }\n});\nvar moveToField = /*@__PURE__*/StateEffect.define();\nvar snippetState = /*@__PURE__*/StateField.define({\n  create: function create() {\n    return null;\n  },\n  update: function update(value, tr) {\n    var _iterator27 = _createForOfIteratorHelper(tr.effects),\n      _step27;\n    try {\n      for (_iterator27.s(); !(_step27 = _iterator27.n()).done;) {\n        var effect = _step27.value;\n        if (effect.is(setActive)) return effect.value;\n        if (effect.is(moveToField) && value) return new ActiveSnippet(value.ranges, effect.value);\n      }\n    } catch (err) {\n      _iterator27.e(err);\n    } finally {\n      _iterator27.f();\n    }\n    if (value && tr.docChanged) value = value.map(tr.changes);\n    if (value && tr.selection && !value.selectionInsideField(tr.selection)) value = null;\n    return value;\n  },\n  provide: function provide(f) {\n    return EditorView.decorations.from(f, function (val) {\n      return val ? val.deco : Decoration.none;\n    });\n  }\n});\nfunction fieldSelection(ranges, field) {\n  return EditorSelection.create(ranges.filter(function (r) {\n    return r.field == field;\n  }).map(function (r) {\n    return EditorSelection.range(r.from, r.to);\n  }));\n}\n/**\nConvert a snippet template to a function that can\n[apply](https://codemirror.net/6/docs/ref/#autocomplete.Completion.apply) it. Snippets are written\nusing syntax like this:\n\n    \"for (let ${index} = 0; ${index} < ${end}; ${index}++) {\\n\\t${}\\n}\"\n\nEach `${}` placeholder (you may also use `#{}`) indicates a field\nthat the user can fill in. Its name, if any, will be the default\ncontent for the field.\n\nWhen the snippet is activated by calling the returned function,\nthe code is inserted at the given position. Newlines in the\ntemplate are indented by the indentation of the start line, plus\none [indent unit](https://codemirror.net/6/docs/ref/#language.indentUnit) per tab character after\nthe newline.\n\nOn activation, (all instances of) the first field are selected.\nThe user can move between fields with Tab and Shift-Tab as long as\nthe fields are active. Moving to the last field or moving the\ncursor out of the current field deactivates the fields.\n\nThe order of fields defaults to textual order, but you can add\nnumbers to placeholders (`${1}` or `${1:defaultText}`) to provide\na custom order.\n\nTo include a literal `{` or `}` in your template, put a backslash\nin front of it. This will be removed and the brace will not be\ninterpreted as indicating a placeholder.\n*/\nfunction snippet(template) {\n  var snippet = Snippet.parse(template);\n  return function (editor, completion, from, to) {\n    var _snippet$instantiate = snippet.instantiate(editor.state, from),\n      text = _snippet$instantiate.text,\n      ranges = _snippet$instantiate.ranges;\n    var spec = {\n      changes: {\n        from: from,\n        to: to,\n        insert: Text.of(text)\n      },\n      scrollIntoView: true,\n      annotations: completion ? pickedCompletion.of(completion) : undefined\n    };\n    if (ranges.length) spec.selection = fieldSelection(ranges, 0);\n    if (ranges.length > 1) {\n      var active = new ActiveSnippet(ranges, 0);\n      var effects = spec.effects = [setActive.of(active)];\n      if (editor.state.field(snippetState, false) === undefined) effects.push(StateEffect.appendConfig.of([snippetState, addSnippetKeymap, snippetPointerHandler, baseTheme]));\n    }\n    editor.dispatch(editor.state.update(spec));\n  };\n}\nfunction moveField(dir) {\n  return function (_ref3) {\n    var state = _ref3.state,\n      dispatch = _ref3.dispatch;\n    var active = state.field(snippetState, false);\n    if (!active || dir < 0 && active.active == 0) return false;\n    var next = active.active + dir,\n      last = dir > 0 && !active.ranges.some(function (r) {\n        return r.field == next + dir;\n      });\n    dispatch(state.update({\n      selection: fieldSelection(active.ranges, next),\n      effects: setActive.of(last ? null : new ActiveSnippet(active.ranges, next))\n    }));\n    return true;\n  };\n}\n/**\nA command that clears the active snippet, if any.\n*/\nvar clearSnippet = function clearSnippet(_ref4) {\n  var state = _ref4.state,\n    dispatch = _ref4.dispatch;\n  var active = state.field(snippetState, false);\n  if (!active) return false;\n  dispatch(state.update({\n    effects: setActive.of(null)\n  }));\n  return true;\n};\n/**\nMove to the next snippet field, if available.\n*/\nvar nextSnippetField = /*@__PURE__*/moveField(1);\n/**\nMove to the previous snippet field, if available.\n*/\nvar prevSnippetField = /*@__PURE__*/moveField(-1);\n/**\nCheck if there is an active snippet with a next field for\n`nextSnippetField` to move to.\n*/\nfunction hasNextSnippetField(state) {\n  var active = state.field(snippetState, false);\n  return !!(active && active.ranges.some(function (r) {\n    return r.field == active.active + 1;\n  }));\n}\n/**\nReturns true if there is an active snippet and a previous field\nfor `prevSnippetField` to move to.\n*/\nfunction hasPrevSnippetField(state) {\n  var active = state.field(snippetState, false);\n  return !!(active && active.active > 0);\n}\nvar defaultSnippetKeymap = [{\n  key: \"Tab\",\n  run: nextSnippetField,\n  shift: prevSnippetField\n}, {\n  key: \"Escape\",\n  run: clearSnippet\n}];\n/**\nA facet that can be used to configure the key bindings used by\nsnippets. The default binds Tab to\n[`nextSnippetField`](https://codemirror.net/6/docs/ref/#autocomplete.nextSnippetField), Shift-Tab to\n[`prevSnippetField`](https://codemirror.net/6/docs/ref/#autocomplete.prevSnippetField), and Escape\nto [`clearSnippet`](https://codemirror.net/6/docs/ref/#autocomplete.clearSnippet).\n*/\nvar snippetKeymap = /*@__PURE__*/Facet.define({\n  combine: function combine(maps) {\n    return maps.length ? maps[0] : defaultSnippetKeymap;\n  }\n});\nvar addSnippetKeymap = /*@__PURE__*/Prec.highest( /*@__PURE__*/keymap.compute([snippetKeymap], function (state) {\n  return state.facet(snippetKeymap);\n}));\n/**\nCreate a completion from a snippet. Returns an object with the\nproperties from `completion`, plus an `apply` function that\napplies the snippet.\n*/\nfunction snippetCompletion(template, completion) {\n  return Object.assign(Object.assign({}, completion), {\n    apply: snippet(template)\n  });\n}\nvar snippetPointerHandler = /*@__PURE__*/EditorView.domEventHandlers({\n  mousedown: function mousedown(event, view) {\n    var active = view.state.field(snippetState, false),\n      pos;\n    if (!active || (pos = view.posAtCoords({\n      x: event.clientX,\n      y: event.clientY\n    })) == null) return false;\n    var match = active.ranges.find(function (r) {\n      return r.from <= pos && r.to >= pos;\n    });\n    if (!match || match.field == active.active) return false;\n    view.dispatch({\n      selection: fieldSelection(active.ranges, match.field),\n      effects: setActive.of(active.ranges.some(function (r) {\n        return r.field > match.field;\n      }) ? new ActiveSnippet(active.ranges, match.field) : null)\n    });\n    return true;\n  }\n});\nfunction wordRE(wordChars) {\n  var escaped = wordChars.replace(/[\\\\[.+*?(){|^$]/g, \"\\\\$&\");\n  try {\n    return new RegExp(\"[\\\\p{Alphabetic}\\\\p{Number}_\".concat(escaped, \"]+\"), \"ug\");\n  } catch (_a) {\n    return new RegExp(\"[w\".concat(escaped, \"]\"), \"g\");\n  }\n}\nfunction mapRE(re, f) {\n  return new RegExp(f(re.source), re.unicode ? \"u\" : \"\");\n}\nvar wordCaches = /*@__PURE__*/Object.create(null);\nfunction wordCache(wordChars) {\n  return wordCaches[wordChars] || (wordCaches[wordChars] = new WeakMap());\n}\nfunction storeWords(doc, wordRE, result, seen, ignoreAt) {\n  for (var lines = doc.iterLines(), pos = 0; !lines.next().done;) {\n    var value = lines.value,\n      m = void 0;\n    wordRE.lastIndex = 0;\n    while (m = wordRE.exec(value)) {\n      if (!seen[m[0]] && pos + m.index != ignoreAt) {\n        result.push({\n          type: \"text\",\n          label: m[0]\n        });\n        seen[m[0]] = true;\n        if (result.length >= 2000 /* C.MaxList */) return;\n      }\n    }\n    pos += value.length + 1;\n  }\n}\nfunction collectWords(doc, cache, wordRE, to, ignoreAt) {\n  var big = doc.length >= 1000 /* C.MinCacheLen */;\n  var cached = big && cache.get(doc);\n  if (cached) return cached;\n  var result = [],\n    seen = Object.create(null);\n  if (doc.children) {\n    var pos = 0;\n    var _iterator28 = _createForOfIteratorHelper(doc.children),\n      _step28;\n    try {\n      for (_iterator28.s(); !(_step28 = _iterator28.n()).done;) {\n        var ch = _step28.value;\n        if (ch.length >= 1000 /* C.MinCacheLen */) {\n          var _iterator29 = _createForOfIteratorHelper(collectWords(ch, cache, wordRE, to - pos, ignoreAt - pos)),\n            _step29;\n          try {\n            for (_iterator29.s(); !(_step29 = _iterator29.n()).done;) {\n              var c = _step29.value;\n              if (!seen[c.label]) {\n                seen[c.label] = true;\n                result.push(c);\n              }\n            }\n          } catch (err) {\n            _iterator29.e(err);\n          } finally {\n            _iterator29.f();\n          }\n        } else {\n          storeWords(ch, wordRE, result, seen, ignoreAt - pos);\n        }\n        pos += ch.length + 1;\n      }\n    } catch (err) {\n      _iterator28.e(err);\n    } finally {\n      _iterator28.f();\n    }\n  } else {\n    storeWords(doc, wordRE, result, seen, ignoreAt);\n  }\n  if (big && result.length < 2000 /* C.MaxList */) cache.set(doc, result);\n  return result;\n}\n/**\nA completion source that will scan the document for words (using a\n[character categorizer](https://codemirror.net/6/docs/ref/#state.EditorState.charCategorizer)), and\nreturn those as completions.\n*/\nvar completeAnyWord = function completeAnyWord(context) {\n  var wordChars = context.state.languageDataAt(\"wordChars\", context.pos).join(\"\");\n  var re = wordRE(wordChars);\n  var token = context.matchBefore(mapRE(re, function (s) {\n    return s + \"$\";\n  }));\n  if (!token && !context.explicit) return null;\n  var from = token ? token.from : context.pos;\n  var options = collectWords(context.state.doc, wordCache(wordChars), re, 50000 /* C.Range */, from);\n  return {\n    from: from,\n    options: options,\n    validFor: mapRE(re, function (s) {\n      return \"^\" + s;\n    })\n  };\n};\nvar defaults = {\n  brackets: [\"(\", \"[\", \"{\", \"'\", '\"'],\n  before: \")]}:;>\",\n  stringPrefixes: []\n};\nvar closeBracketEffect = /*@__PURE__*/StateEffect.define({\n  map: function map(value, mapping) {\n    var mapped = mapping.mapPos(value, -1, MapMode.TrackAfter);\n    return mapped == null ? undefined : mapped;\n  }\n});\nvar closedBracket = /*@__PURE__*/new ( /*#__PURE__*/function (_RangeValue) {\n  _inherits(_class3, _RangeValue);\n  var _super3 = _createSuper(_class3);\n  function _class3() {\n    _classCallCheck(this, _class3);\n    return _super3.apply(this, arguments);\n  }\n  return _createClass(_class3);\n}(RangeValue))();\nclosedBracket.startSide = 1;\nclosedBracket.endSide = -1;\nvar bracketState = /*@__PURE__*/StateField.define({\n  create: function create() {\n    return RangeSet.empty;\n  },\n  update: function update(value, tr) {\n    if (tr.selection) {\n      var lineStart = tr.state.doc.lineAt(tr.selection.main.head).from;\n      var prevLineStart = tr.startState.doc.lineAt(tr.startState.selection.main.head).from;\n      if (lineStart != tr.changes.mapPos(prevLineStart, -1)) value = RangeSet.empty;\n    }\n    value = value.map(tr.changes);\n    var _iterator30 = _createForOfIteratorHelper(tr.effects),\n      _step30;\n    try {\n      for (_iterator30.s(); !(_step30 = _iterator30.n()).done;) {\n        var effect = _step30.value;\n        if (effect.is(closeBracketEffect)) value = value.update({\n          add: [closedBracket.range(effect.value, effect.value + 1)]\n        });\n      }\n    } catch (err) {\n      _iterator30.e(err);\n    } finally {\n      _iterator30.f();\n    }\n    return value;\n  }\n});\n/**\nExtension to enable bracket-closing behavior. When a closeable\nbracket is typed, its closing bracket is immediately inserted\nafter the cursor. When closing a bracket directly in front of a\nclosing bracket inserted by the extension, the cursor moves over\nthat bracket.\n*/\nfunction closeBrackets() {\n  return [inputHandler, bracketState];\n}\nvar definedClosing = \"()[]{}<>\";\nfunction closing(ch) {\n  for (var i = 0; i < definedClosing.length; i += 2) if (definedClosing.charCodeAt(i) == ch) return definedClosing.charAt(i + 1);\n  return fromCodePoint(ch < 128 ? ch : ch + 1);\n}\nfunction config(state, pos) {\n  return state.languageDataAt(\"closeBrackets\", pos)[0] || defaults;\n}\nvar android = typeof navigator == \"object\" && /*@__PURE__*/ /Android\\b/.test(navigator.userAgent);\nvar inputHandler = /*@__PURE__*/EditorView.inputHandler.of(function (view, from, to, insert) {\n  if ((android ? view.composing : view.compositionStarted) || view.state.readOnly) return false;\n  var sel = view.state.selection.main;\n  if (insert.length > 2 || insert.length == 2 && codePointSize(codePointAt(insert, 0)) == 1 || from != sel.from || to != sel.to) return false;\n  var tr = insertBracket(view.state, insert);\n  if (!tr) return false;\n  view.dispatch(tr);\n  return true;\n});\n/**\nCommand that implements deleting a pair of matching brackets when\nthe cursor is between them.\n*/\nvar deleteBracketPair = function deleteBracketPair(_ref5) {\n  var state = _ref5.state,\n    dispatch = _ref5.dispatch;\n  if (state.readOnly) return false;\n  var conf = config(state, state.selection.main.head);\n  var tokens = conf.brackets || defaults.brackets;\n  var dont = null,\n    changes = state.changeByRange(function (range) {\n      if (range.empty) {\n        var before = prevChar(state.doc, range.head);\n        var _iterator31 = _createForOfIteratorHelper(tokens),\n          _step31;\n        try {\n          for (_iterator31.s(); !(_step31 = _iterator31.n()).done;) {\n            var token = _step31.value;\n            if (token == before && nextChar(state.doc, range.head) == closing(codePointAt(token, 0))) return {\n              changes: {\n                from: range.head - token.length,\n                to: range.head + token.length\n              },\n              range: EditorSelection.cursor(range.head - token.length)\n            };\n          }\n        } catch (err) {\n          _iterator31.e(err);\n        } finally {\n          _iterator31.f();\n        }\n      }\n      return {\n        range: dont = range\n      };\n    });\n  if (!dont) dispatch(state.update(changes, {\n    scrollIntoView: true,\n    userEvent: \"delete.backward\"\n  }));\n  return !dont;\n};\n/**\nClose-brackets related key bindings. Binds Backspace to\n[`deleteBracketPair`](https://codemirror.net/6/docs/ref/#autocomplete.deleteBracketPair).\n*/\nvar closeBracketsKeymap = [{\n  key: \"Backspace\",\n  run: deleteBracketPair\n}];\n/**\nImplements the extension's behavior on text insertion. If the\ngiven string counts as a bracket in the language around the\nselection, and replacing the selection with it requires custom\nbehavior (inserting a closing version or skipping past a\npreviously-closed bracket), this function returns a transaction\nrepresenting that custom behavior. (You only need this if you want\nto programmatically insert brackets—the\n[`closeBrackets`](https://codemirror.net/6/docs/ref/#autocomplete.closeBrackets) extension will\ntake care of running this for user input.)\n*/\nfunction insertBracket(state, bracket) {\n  var conf = config(state, state.selection.main.head);\n  var tokens = conf.brackets || defaults.brackets;\n  var _iterator32 = _createForOfIteratorHelper(tokens),\n    _step32;\n  try {\n    for (_iterator32.s(); !(_step32 = _iterator32.n()).done;) {\n      var tok = _step32.value;\n      var closed = closing(codePointAt(tok, 0));\n      if (bracket == tok) return closed == tok ? handleSame(state, tok, tokens.indexOf(tok + tok + tok) > -1, conf) : handleOpen(state, tok, closed, conf.before || defaults.before);\n      if (bracket == closed && closedBracketAt(state, state.selection.main.from)) return handleClose(state, tok, closed);\n    }\n  } catch (err) {\n    _iterator32.e(err);\n  } finally {\n    _iterator32.f();\n  }\n  return null;\n}\nfunction closedBracketAt(state, pos) {\n  var found = false;\n  state.field(bracketState).between(0, state.doc.length, function (from) {\n    if (from == pos) found = true;\n  });\n  return found;\n}\nfunction nextChar(doc, pos) {\n  var next = doc.sliceString(pos, pos + 2);\n  return next.slice(0, codePointSize(codePointAt(next, 0)));\n}\nfunction prevChar(doc, pos) {\n  var prev = doc.sliceString(pos - 2, pos);\n  return codePointSize(codePointAt(prev, 0)) == prev.length ? prev : prev.slice(1);\n}\nfunction handleOpen(state, open, close, closeBefore) {\n  var dont = null,\n    changes = state.changeByRange(function (range) {\n      if (!range.empty) return {\n        changes: [{\n          insert: open,\n          from: range.from\n        }, {\n          insert: close,\n          from: range.to\n        }],\n        effects: closeBracketEffect.of(range.to + open.length),\n        range: EditorSelection.range(range.anchor + open.length, range.head + open.length)\n      };\n      var next = nextChar(state.doc, range.head);\n      if (!next || /\\s/.test(next) || closeBefore.indexOf(next) > -1) return {\n        changes: {\n          insert: open + close,\n          from: range.head\n        },\n        effects: closeBracketEffect.of(range.head + open.length),\n        range: EditorSelection.cursor(range.head + open.length)\n      };\n      return {\n        range: dont = range\n      };\n    });\n  return dont ? null : state.update(changes, {\n    scrollIntoView: true,\n    userEvent: \"input.type\"\n  });\n}\nfunction handleClose(state, _open, close) {\n  var dont = null,\n    changes = state.changeByRange(function (range) {\n      if (range.empty && nextChar(state.doc, range.head) == close) return {\n        changes: {\n          from: range.head,\n          to: range.head + close.length,\n          insert: close\n        },\n        range: EditorSelection.cursor(range.head + close.length)\n      };\n      return dont = {\n        range: range\n      };\n    });\n  return dont ? null : state.update(changes, {\n    scrollIntoView: true,\n    userEvent: \"input.type\"\n  });\n}\n// Handles cases where the open and close token are the same, and\n// possibly triple quotes (as in `\"\"\"abc\"\"\"`-style quoting).\nfunction handleSame(state, token, allowTriple, config) {\n  var stringPrefixes = config.stringPrefixes || defaults.stringPrefixes;\n  var dont = null,\n    changes = state.changeByRange(function (range) {\n      if (!range.empty) return {\n        changes: [{\n          insert: token,\n          from: range.from\n        }, {\n          insert: token,\n          from: range.to\n        }],\n        effects: closeBracketEffect.of(range.to + token.length),\n        range: EditorSelection.range(range.anchor + token.length, range.head + token.length)\n      };\n      var pos = range.head,\n        next = nextChar(state.doc, pos),\n        start;\n      if (next == token) {\n        if (nodeStart(state, pos)) {\n          return {\n            changes: {\n              insert: token + token,\n              from: pos\n            },\n            effects: closeBracketEffect.of(pos + token.length),\n            range: EditorSelection.cursor(pos + token.length)\n          };\n        } else if (closedBracketAt(state, pos)) {\n          var isTriple = allowTriple && state.sliceDoc(pos, pos + token.length * 3) == token + token + token;\n          var content = isTriple ? token + token + token : token;\n          return {\n            changes: {\n              from: pos,\n              to: pos + content.length,\n              insert: content\n            },\n            range: EditorSelection.cursor(pos + content.length)\n          };\n        }\n      } else if (allowTriple && state.sliceDoc(pos - 2 * token.length, pos) == token + token && (start = canStartStringAt(state, pos - 2 * token.length, stringPrefixes)) > -1 && nodeStart(state, start)) {\n        return {\n          changes: {\n            insert: token + token + token + token,\n            from: pos\n          },\n          effects: closeBracketEffect.of(pos + token.length),\n          range: EditorSelection.cursor(pos + token.length)\n        };\n      } else if (state.charCategorizer(pos)(next) != CharCategory.Word) {\n        if (canStartStringAt(state, pos, stringPrefixes) > -1 && !probablyInString(state, pos, token, stringPrefixes)) return {\n          changes: {\n            insert: token + token,\n            from: pos\n          },\n          effects: closeBracketEffect.of(pos + token.length),\n          range: EditorSelection.cursor(pos + token.length)\n        };\n      }\n      return {\n        range: dont = range\n      };\n    });\n  return dont ? null : state.update(changes, {\n    scrollIntoView: true,\n    userEvent: \"input.type\"\n  });\n}\nfunction nodeStart(state, pos) {\n  var tree = syntaxTree(state).resolveInner(pos + 1);\n  return tree.parent && tree.from == pos;\n}\nfunction probablyInString(state, pos, quoteToken, prefixes) {\n  var node = syntaxTree(state).resolveInner(pos, -1);\n  var maxPrefix = prefixes.reduce(function (m, p) {\n    return Math.max(m, p.length);\n  }, 0);\n  for (var i = 0; i < 5; i++) {\n    var start = state.sliceDoc(node.from, Math.min(node.to, node.from + quoteToken.length + maxPrefix));\n    var quotePos = start.indexOf(quoteToken);\n    if (!quotePos || quotePos > -1 && prefixes.indexOf(start.slice(0, quotePos)) > -1) {\n      var first = node.firstChild;\n      while (first && first.from == node.from && first.to - first.from > quoteToken.length + quotePos) {\n        if (state.sliceDoc(first.to - quoteToken.length, first.to) == quoteToken) return false;\n        first = first.firstChild;\n      }\n      return true;\n    }\n    var parent = node.to == pos && node.parent;\n    if (!parent) break;\n    node = parent;\n  }\n  return false;\n}\nfunction canStartStringAt(state, pos, prefixes) {\n  var charCat = state.charCategorizer(pos);\n  if (charCat(state.sliceDoc(pos - 1, pos)) != CharCategory.Word) return pos;\n  var _iterator33 = _createForOfIteratorHelper(prefixes),\n    _step33;\n  try {\n    for (_iterator33.s(); !(_step33 = _iterator33.n()).done;) {\n      var prefix = _step33.value;\n      var start = pos - prefix.length;\n      if (state.sliceDoc(start, pos) == prefix && charCat(state.sliceDoc(start - 1, start)) != CharCategory.Word) return start;\n    }\n  } catch (err) {\n    _iterator33.e(err);\n  } finally {\n    _iterator33.f();\n  }\n  return -1;\n}\n\n/**\nReturns an extension that enables autocompletion.\n*/\nfunction autocompletion() {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return [completionState, completionConfig.of(config), completionPlugin, completionKeymapExt, baseTheme];\n}\n/**\nBasic keybindings for autocompletion.\n\n - Ctrl-Space: [`startCompletion`](https://codemirror.net/6/docs/ref/#autocomplete.startCompletion)\n - Escape: [`closeCompletion`](https://codemirror.net/6/docs/ref/#autocomplete.closeCompletion)\n - ArrowDown: [`moveCompletionSelection`](https://codemirror.net/6/docs/ref/#autocomplete.moveCompletionSelection)`(true)`\n - ArrowUp: [`moveCompletionSelection`](https://codemirror.net/6/docs/ref/#autocomplete.moveCompletionSelection)`(false)`\n - PageDown: [`moveCompletionSelection`](https://codemirror.net/6/docs/ref/#autocomplete.moveCompletionSelection)`(true, \"page\")`\n - PageDown: [`moveCompletionSelection`](https://codemirror.net/6/docs/ref/#autocomplete.moveCompletionSelection)`(true, \"page\")`\n - Enter: [`acceptCompletion`](https://codemirror.net/6/docs/ref/#autocomplete.acceptCompletion)\n*/\nvar completionKeymap = [{\n  key: \"Ctrl-Space\",\n  run: startCompletion\n}, {\n  key: \"Escape\",\n  run: closeCompletion\n}, {\n  key: \"ArrowDown\",\n  run: /*@__PURE__*/moveCompletionSelection(true)\n}, {\n  key: \"ArrowUp\",\n  run: /*@__PURE__*/moveCompletionSelection(false)\n}, {\n  key: \"PageDown\",\n  run: /*@__PURE__*/moveCompletionSelection(true, \"page\")\n}, {\n  key: \"PageUp\",\n  run: /*@__PURE__*/moveCompletionSelection(false, \"page\")\n}, {\n  key: \"Enter\",\n  run: acceptCompletion\n}];\nvar completionKeymapExt = /*@__PURE__*/Prec.highest( /*@__PURE__*/keymap.computeN([completionConfig], function (state) {\n  return state.facet(completionConfig).defaultKeymap ? [completionKeymap] : [];\n}));\n/**\nGet the current completion status. When completions are available,\nthis will return `\"active\"`. When completions are pending (in the\nprocess of being queried), this returns `\"pending\"`. Otherwise, it\nreturns `null`.\n*/\nfunction completionStatus(state) {\n  var cState = state.field(completionState, false);\n  return cState && cState.active.some(function (a) {\n    return a.state == 1;\n  } /* State.Pending */) ? \"pending\" : cState && cState.active.some(function (a) {\n    return a.state != 0;\n  } /* State.Inactive */) ? \"active\" : null;\n}\nvar completionArrayCache = /*@__PURE__*/new WeakMap();\n/**\nReturns the available completions as an array.\n*/\nfunction currentCompletions(state) {\n  var _a;\n  var open = (_a = state.field(completionState, false)) === null || _a === void 0 ? void 0 : _a.open;\n  if (!open || open.disabled) return [];\n  var completions = completionArrayCache.get(open.options);\n  if (!completions) completionArrayCache.set(open.options, completions = open.options.map(function (o) {\n    return o.completion;\n  }));\n  return completions;\n}\n/**\nReturn the currently selected completion, if any.\n*/\nfunction selectedCompletion(state) {\n  var _a;\n  var open = (_a = state.field(completionState, false)) === null || _a === void 0 ? void 0 : _a.open;\n  return open && !open.disabled && open.selected >= 0 ? open.options[open.selected].completion : null;\n}\n/**\nReturns the currently selected position in the active completion\nlist, or null if no completions are active.\n*/\nfunction selectedCompletionIndex(state) {\n  var _a;\n  var open = (_a = state.field(completionState, false)) === null || _a === void 0 ? void 0 : _a.open;\n  return open && !open.disabled && open.selected >= 0 ? open.selected : null;\n}\n/**\nCreate an effect that can be attached to a transaction to change\nthe currently selected completion.\n*/\nfunction setSelectedCompletion(index) {\n  return setSelectedEffect.of(index);\n}\nexport { CompletionContext, acceptCompletion, autocompletion, clearSnippet, closeBrackets, closeBracketsKeymap, closeCompletion, completeAnyWord, completeFromList, completionKeymap, completionStatus, currentCompletions, deleteBracketPair, hasNextSnippetField, hasPrevSnippetField, ifIn, ifNotIn, insertBracket, insertCompletionText, moveCompletionSelection, nextSnippetField, pickedCompletion, prevSnippetField, selectedCompletion, selectedCompletionIndex, setSelectedCompletion, snippet, snippetCompletion, snippetKeymap, startCompletion };","map":{"version":3,"names":["Annotation","StateEffect","EditorSelection","codePointAt","codePointSize","fromCodePoint","Facet","combineConfig","StateField","Prec","Text","MapMode","RangeValue","RangeSet","CharCategory","Direction","ViewPlugin","logException","getTooltip","showTooltip","EditorView","Decoration","WidgetType","keymap","syntaxTree","indentUnit","CompletionContext","state","pos","explicit","_classCallCheck","abortListeners","_createClass","key","value","tokenBefore","types","token","resolveInner","indexOf","name","parent","from","to","text","sliceDoc","type","matchBefore","expr","line","doc","lineAt","start","Math","max","str","slice","found","search","ensureAnchor","get","addEventListener","listener","push","toSet","chars","flat","Object","keys","join","words","test","replace","concat","prefixMatch","options","first","create","rest","_iterator","_createForOfIteratorHelper","_step","s","n","done","label","i","length","err","e","f","source","RegExp","completeFromList","list","map","o","_ref","every","_ref2","_slicedToArray","validFor","match","context","ifIn","nodes","isTop","ifNotIn","Option","completion","score","cur","selection","main","_a","addStart","addEnd","flags","ignoreCase","pickedCompletion","define","insertCompletionText","fromOff","toOff","assign","changeByRange","range","changes","insert","cursor","userEvent","SourceCache","WeakMap","asSource","Array","isArray","known","set","startCompletionEffect","closeCompletionEffect","FuzzyMatcher","pattern","folded","any","precise","byWord","p","char","size","part","upper","toUpperCase","toLowerCase","astral","word","firstSize","direct","len","anyTo","min","next","preciseTo","byWordTo","byWordFolded","adjacentTo","adjacentStart","adjacentEnd","hasLower","wordAdjacent","prevType","ch","result","positions","_iterator2","_step2","completionConfig","combine","configs","activateOnTyping","selectOnOpen","override","closeOnBlur","maxRenderedOptions","defaultKeymap","tooltipClass","optionClass","aboveCursor","icons","addToOptions","positionInfo","defaultPositionInfo","compareCompletions","a","b","localeCompare","interactionDelay","c","joinClass","view","option","info","space","rtl","textDirection","RTL","left","narrow","side","offset","maxWidth","spaceLeft","spaceRight","right","infoWidth","infoHeight","bottom","top","spaceBelow","style","class","moveCompletionSelection","forward","by","arguments","undefined","cState","field","completionState","open","disabled","Date","now","timestamp","facet","step","tooltip","floor","dom","offsetHeight","querySelector","selected","dispatch","effects","setSelectedEffect","of","acceptCompletion","readOnly","applyCompletion","startCompletion","closeCompletion","active","some","RunningQuery","time","updates","DebounceTime","MaxUpdateCount","MinAbortTime","completionPlugin","fromClass","_class","debounceUpdate","running","debounceAccept","composing","_iterator3","_step3","startQuery","update","_this","selectionSet","docChanged","startState","doesReset","transactions","tr","getUserEvent","query","_iterator4","_step4","handler","splice","_query$updates","apply","_toConsumableArray","clearTimeout","q","setTimeout","startUpdate","_iterator5","_step5","_this2","_iterator6","_step6","_loop","r","_this3","explicitPos","pending","Promise","resolve","then","aborted","scheduleAccept","_this4","accept","_this5","updated","conf","_loop2","_i2","ActiveResult","_iterator7","_step7","hasResult","current","find","ActiveSource","_iterator8","_step8","_ret","setActiveEffect","eventHandlers","blur","event","dialog","contains","relatedTarget","compositionstart","compositionend","_this6","annotations","optionContent","config","content","render","_icon$classList","icon","document","createElement","classList","add","split","cls","setAttribute","position","_s","labelElt","className","off","j","appendChild","createTextNode","span","detail","detailElt","textContent","sort","rangeAroundSelected","total","CompletionTooltip","stateField","_this7","placeInfoReq","read","measureInfo","write","placeInfo","currentClass","_cState$open","updateTooltipClass","target","parentNode","nodeName","exec","id","preventDefault","contentDOM","createListBox","requestMeasure","mount","updateSel","_b","_c","prevState","toggle","_iterator9","_step9","remove","_iterator10","_step10","positioned","_this8","updateSelectedOption","infoResult","node","addInfoPane","catch","opt","firstChild","nextSibling","hasAttribute","removeAttribute","scrollIntoView","sel","listRect","getBoundingClientRect","infoRect","selRect","win","ownerDocument","defaultView","window","innerWidth","innerHeight","cssText","ul","phrase","curSection","_options$i","section","header","li","_iterator11","_step11","completionTooltip","container","element","self","scrollTop","boost","sortOptions","sections","addOption","_iterator12","_step12","filter","getMatch","_iterator16","_step16","_iterator17","_step17","matcher","_iterator18","_step18","sectionOrder","cmp","rank","_iterator13","_step13","_iterator14","_step14","prev","compare","_iterator15","_step15","CompletionDialog","attrs","setSelected","makeAttrs","mapPos","build","selectedValue","reduce","above","CompletionState","_this9","sources","languageDataAt","touchesRange","sameResults","_iterator19","_step19","effect","is","baseAttrs","none","random","toString","iA","iB","endA","endB","isUserEvent","handleUserEvent","handleChange","_iterator20","_step20","_iterator21","_step21","empty","_ActiveSource","_inherits","_super","_createSuper","_this10","call","checkValid","mapping","provide","val","contentAttributes","baseTheme","fontFamily","whiteSpace","overflow","maxWidth_fallback","minWidth","maxHeight","height","listStyle","margin","padding","lineHeight","overflowX","textOverflow","display","borderBottom","paddingLeft","opacity","background","color","textAlign","width","boxSizing","backgroundColor","verticalAlign","borderLeft","textDecoration","marginLeft","fontStyle","fontSize","paddingRight","FieldPos","FieldRange","TrackDel","Snippet","lines","fieldPositions","instantiate","lineStart","lineObj","baseIndent","_iterator22","_step22","indent","tabs","ranges","parse","template","fields","m","_iterator23","_step23","seq","_iterator24","_step24","index","esc","_iterator25","_step25","fieldMarker","widget","_WidgetType","_class2","_super2","toDOM","ignoreEvent","fieldRange","mark","ActiveSnippet","deco","_iterator26","_step26","mapped","selectionInsideField","_this11","setActive","moveToField","snippetState","_iterator27","_step27","decorations","fieldSelection","snippet","editor","_snippet$instantiate","spec","appendConfig","addSnippetKeymap","snippetPointerHandler","moveField","dir","_ref3","last","clearSnippet","_ref4","nextSnippetField","prevSnippetField","hasNextSnippetField","hasPrevSnippetField","defaultSnippetKeymap","run","shift","snippetKeymap","maps","highest","compute","snippetCompletion","domEventHandlers","mousedown","posAtCoords","x","clientX","y","clientY","wordRE","wordChars","escaped","mapRE","re","unicode","wordCaches","wordCache","storeWords","seen","ignoreAt","iterLines","lastIndex","collectWords","cache","big","cached","children","_iterator28","_step28","_iterator29","_step29","completeAnyWord","defaults","brackets","before","stringPrefixes","closeBracketEffect","TrackAfter","closedBracket","_RangeValue","_class3","_super3","startSide","endSide","bracketState","head","prevLineStart","_iterator30","_step30","closeBrackets","inputHandler","definedClosing","closing","charCodeAt","charAt","android","navigator","userAgent","compositionStarted","insertBracket","deleteBracketPair","_ref5","tokens","dont","prevChar","_iterator31","_step31","nextChar","closeBracketsKeymap","bracket","_iterator32","_step32","tok","closed","handleSame","handleOpen","closedBracketAt","handleClose","between","sliceString","close","closeBefore","anchor","_open","allowTriple","nodeStart","isTriple","canStartStringAt","charCategorizer","Word","probablyInString","tree","quoteToken","prefixes","maxPrefix","quotePos","charCat","_iterator33","_step33","prefix","autocompletion","completionKeymapExt","completionKeymap","computeN","completionStatus","completionArrayCache","currentCompletions","completions","selectedCompletion","selectedCompletionIndex","setSelectedCompletion"],"sources":["/Users/adityapethe/Developer/ui-chat/ui-chat/client/node_modules/@codemirror/autocomplete/dist/index.js"],"sourcesContent":["import { Annotation, StateEffect, EditorSelection, codePointAt, codePointSize, fromCodePoint, Facet, combineConfig, StateField, Prec, Text, MapMode, RangeValue, RangeSet, CharCategory } from '@codemirror/state';\nimport { Direction, ViewPlugin, logException, getTooltip, showTooltip, EditorView, Decoration, WidgetType, keymap } from '@codemirror/view';\nimport { syntaxTree, indentUnit } from '@codemirror/language';\n\n/**\nAn instance of this is passed to completion source functions.\n*/\nclass CompletionContext {\n    /**\n    Create a new completion context. (Mostly useful for testing\n    completion sources—in the editor, the extension will create\n    these for you.)\n    */\n    constructor(\n    /**\n    The editor state that the completion happens in.\n    */\n    state, \n    /**\n    The position at which the completion is happening.\n    */\n    pos, \n    /**\n    Indicates whether completion was activated explicitly, or\n    implicitly by typing. The usual way to respond to this is to\n    only return completions when either there is part of a\n    completable entity before the cursor, or `explicit` is true.\n    */\n    explicit) {\n        this.state = state;\n        this.pos = pos;\n        this.explicit = explicit;\n        /**\n        @internal\n        */\n        this.abortListeners = [];\n    }\n    /**\n    Get the extent, content, and (if there is a token) type of the\n    token before `this.pos`.\n    */\n    tokenBefore(types) {\n        let token = syntaxTree(this.state).resolveInner(this.pos, -1);\n        while (token && types.indexOf(token.name) < 0)\n            token = token.parent;\n        return token ? { from: token.from, to: this.pos,\n            text: this.state.sliceDoc(token.from, this.pos),\n            type: token.type } : null;\n    }\n    /**\n    Get the match of the given expression directly before the\n    cursor.\n    */\n    matchBefore(expr) {\n        let line = this.state.doc.lineAt(this.pos);\n        let start = Math.max(line.from, this.pos - 250);\n        let str = line.text.slice(start - line.from, this.pos - line.from);\n        let found = str.search(ensureAnchor(expr, false));\n        return found < 0 ? null : { from: start + found, to: this.pos, text: str.slice(found) };\n    }\n    /**\n    Yields true when the query has been aborted. Can be useful in\n    asynchronous queries to avoid doing work that will be ignored.\n    */\n    get aborted() { return this.abortListeners == null; }\n    /**\n    Allows you to register abort handlers, which will be called when\n    the query is\n    [aborted](https://codemirror.net/6/docs/ref/#autocomplete.CompletionContext.aborted).\n    */\n    addEventListener(type, listener) {\n        if (type == \"abort\" && this.abortListeners)\n            this.abortListeners.push(listener);\n    }\n}\nfunction toSet(chars) {\n    let flat = Object.keys(chars).join(\"\");\n    let words = /\\w/.test(flat);\n    if (words)\n        flat = flat.replace(/\\w/g, \"\");\n    return `[${words ? \"\\\\w\" : \"\"}${flat.replace(/[^\\w\\s]/g, \"\\\\$&\")}]`;\n}\nfunction prefixMatch(options) {\n    let first = Object.create(null), rest = Object.create(null);\n    for (let { label } of options) {\n        first[label[0]] = true;\n        for (let i = 1; i < label.length; i++)\n            rest[label[i]] = true;\n    }\n    let source = toSet(first) + toSet(rest) + \"*$\";\n    return [new RegExp(\"^\" + source), new RegExp(source)];\n}\n/**\nGiven a a fixed array of options, return an autocompleter that\ncompletes them.\n*/\nfunction completeFromList(list) {\n    let options = list.map(o => typeof o == \"string\" ? { label: o } : o);\n    let [validFor, match] = options.every(o => /^\\w+$/.test(o.label)) ? [/\\w*$/, /\\w+$/] : prefixMatch(options);\n    return (context) => {\n        let token = context.matchBefore(match);\n        return token || context.explicit ? { from: token ? token.from : context.pos, options, validFor } : null;\n    };\n}\n/**\nWrap the given completion source so that it will only fire when the\ncursor is in a syntax node with one of the given names.\n*/\nfunction ifIn(nodes, source) {\n    return (context) => {\n        for (let pos = syntaxTree(context.state).resolveInner(context.pos, -1); pos; pos = pos.parent) {\n            if (nodes.indexOf(pos.name) > -1)\n                return source(context);\n            if (pos.type.isTop)\n                break;\n        }\n        return null;\n    };\n}\n/**\nWrap the given completion source so that it will not fire when the\ncursor is in a syntax node with one of the given names.\n*/\nfunction ifNotIn(nodes, source) {\n    return (context) => {\n        for (let pos = syntaxTree(context.state).resolveInner(context.pos, -1); pos; pos = pos.parent) {\n            if (nodes.indexOf(pos.name) > -1)\n                return null;\n            if (pos.type.isTop)\n                break;\n        }\n        return source(context);\n    };\n}\nclass Option {\n    constructor(completion, source, match, score) {\n        this.completion = completion;\n        this.source = source;\n        this.match = match;\n        this.score = score;\n    }\n}\nfunction cur(state) { return state.selection.main.from; }\n// Make sure the given regexp has a $ at its end and, if `start` is\n// true, a ^ at its start.\nfunction ensureAnchor(expr, start) {\n    var _a;\n    let { source } = expr;\n    let addStart = start && source[0] != \"^\", addEnd = source[source.length - 1] != \"$\";\n    if (!addStart && !addEnd)\n        return expr;\n    return new RegExp(`${addStart ? \"^\" : \"\"}(?:${source})${addEnd ? \"$\" : \"\"}`, (_a = expr.flags) !== null && _a !== void 0 ? _a : (expr.ignoreCase ? \"i\" : \"\"));\n}\n/**\nThis annotation is added to transactions that are produced by\npicking a completion.\n*/\nconst pickedCompletion = /*@__PURE__*/Annotation.define();\n/**\nHelper function that returns a transaction spec which inserts a\ncompletion's text in the main selection range, and any other\nselection range that has the same text in front of it.\n*/\nfunction insertCompletionText(state, text, from, to) {\n    let { main } = state.selection, fromOff = from - main.from, toOff = to - main.from;\n    return Object.assign(Object.assign({}, state.changeByRange(range => {\n        if (range != main && from != to &&\n            state.sliceDoc(range.from + fromOff, range.from + toOff) != state.sliceDoc(from, to))\n            return { range };\n        return {\n            changes: { from: range.from + fromOff, to: to == main.from ? range.to : range.from + toOff, insert: text },\n            range: EditorSelection.cursor(range.from + fromOff + text.length)\n        };\n    })), { userEvent: \"input.complete\" });\n}\nconst SourceCache = /*@__PURE__*/new WeakMap();\nfunction asSource(source) {\n    if (!Array.isArray(source))\n        return source;\n    let known = SourceCache.get(source);\n    if (!known)\n        SourceCache.set(source, known = completeFromList(source));\n    return known;\n}\nconst startCompletionEffect = /*@__PURE__*/StateEffect.define();\nconst closeCompletionEffect = /*@__PURE__*/StateEffect.define();\n\n// A pattern matcher for fuzzy completion matching. Create an instance\n// once for a pattern, and then use that to match any number of\n// completions.\nclass FuzzyMatcher {\n    constructor(pattern) {\n        this.pattern = pattern;\n        this.chars = [];\n        this.folded = [];\n        // Buffers reused by calls to `match` to track matched character\n        // positions.\n        this.any = [];\n        this.precise = [];\n        this.byWord = [];\n        for (let p = 0; p < pattern.length;) {\n            let char = codePointAt(pattern, p), size = codePointSize(char);\n            this.chars.push(char);\n            let part = pattern.slice(p, p + size), upper = part.toUpperCase();\n            this.folded.push(codePointAt(upper == part ? part.toLowerCase() : upper, 0));\n            p += size;\n        }\n        this.astral = pattern.length != this.chars.length;\n    }\n    // Matches a given word (completion) against the pattern (input).\n    // Will return null for no match, and otherwise an array that starts\n    // with the match score, followed by any number of `from, to` pairs\n    // indicating the matched parts of `word`.\n    //\n    // The score is a number that is more negative the worse the match\n    // is. See `Penalty` above.\n    match(word) {\n        if (this.pattern.length == 0)\n            return [-100 /* Penalty.NotFull */];\n        if (word.length < this.pattern.length)\n            return null;\n        let { chars, folded, any, precise, byWord } = this;\n        // For single-character queries, only match when they occur right\n        // at the start\n        if (chars.length == 1) {\n            let first = codePointAt(word, 0), firstSize = codePointSize(first);\n            let score = firstSize == word.length ? 0 : -100 /* Penalty.NotFull */;\n            if (first == chars[0]) ;\n            else if (first == folded[0])\n                score += -200 /* Penalty.CaseFold */;\n            else\n                return null;\n            return [score, 0, firstSize];\n        }\n        let direct = word.indexOf(this.pattern);\n        if (direct == 0)\n            return [word.length == this.pattern.length ? 0 : -100 /* Penalty.NotFull */, 0, this.pattern.length];\n        let len = chars.length, anyTo = 0;\n        if (direct < 0) {\n            for (let i = 0, e = Math.min(word.length, 200); i < e && anyTo < len;) {\n                let next = codePointAt(word, i);\n                if (next == chars[anyTo] || next == folded[anyTo])\n                    any[anyTo++] = i;\n                i += codePointSize(next);\n            }\n            // No match, exit immediately\n            if (anyTo < len)\n                return null;\n        }\n        // This tracks the extent of the precise (non-folded, not\n        // necessarily adjacent) match\n        let preciseTo = 0;\n        // Tracks whether there is a match that hits only characters that\n        // appear to be starting words. `byWordFolded` is set to true when\n        // a case folded character is encountered in such a match\n        let byWordTo = 0, byWordFolded = false;\n        // If we've found a partial adjacent match, these track its state\n        let adjacentTo = 0, adjacentStart = -1, adjacentEnd = -1;\n        let hasLower = /[a-z]/.test(word), wordAdjacent = true;\n        // Go over the option's text, scanning for the various kinds of matches\n        for (let i = 0, e = Math.min(word.length, 200), prevType = 0 /* Tp.NonWord */; i < e && byWordTo < len;) {\n            let next = codePointAt(word, i);\n            if (direct < 0) {\n                if (preciseTo < len && next == chars[preciseTo])\n                    precise[preciseTo++] = i;\n                if (adjacentTo < len) {\n                    if (next == chars[adjacentTo] || next == folded[adjacentTo]) {\n                        if (adjacentTo == 0)\n                            adjacentStart = i;\n                        adjacentEnd = i + 1;\n                        adjacentTo++;\n                    }\n                    else {\n                        adjacentTo = 0;\n                    }\n                }\n            }\n            let ch, type = next < 0xff\n                ? (next >= 48 && next <= 57 || next >= 97 && next <= 122 ? 2 /* Tp.Lower */ : next >= 65 && next <= 90 ? 1 /* Tp.Upper */ : 0 /* Tp.NonWord */)\n                : ((ch = fromCodePoint(next)) != ch.toLowerCase() ? 1 /* Tp.Upper */ : ch != ch.toUpperCase() ? 2 /* Tp.Lower */ : 0 /* Tp.NonWord */);\n            if (!i || type == 1 /* Tp.Upper */ && hasLower || prevType == 0 /* Tp.NonWord */ && type != 0 /* Tp.NonWord */) {\n                if (chars[byWordTo] == next || (folded[byWordTo] == next && (byWordFolded = true)))\n                    byWord[byWordTo++] = i;\n                else if (byWord.length)\n                    wordAdjacent = false;\n            }\n            prevType = type;\n            i += codePointSize(next);\n        }\n        if (byWordTo == len && byWord[0] == 0 && wordAdjacent)\n            return this.result(-100 /* Penalty.ByWord */ + (byWordFolded ? -200 /* Penalty.CaseFold */ : 0), byWord, word);\n        if (adjacentTo == len && adjacentStart == 0)\n            return [-200 /* Penalty.CaseFold */ - word.length + (adjacentEnd == word.length ? 0 : -100 /* Penalty.NotFull */), 0, adjacentEnd];\n        if (direct > -1)\n            return [-700 /* Penalty.NotStart */ - word.length, direct, direct + this.pattern.length];\n        if (adjacentTo == len)\n            return [-200 /* Penalty.CaseFold */ + -700 /* Penalty.NotStart */ - word.length, adjacentStart, adjacentEnd];\n        if (byWordTo == len)\n            return this.result(-100 /* Penalty.ByWord */ + (byWordFolded ? -200 /* Penalty.CaseFold */ : 0) + -700 /* Penalty.NotStart */ +\n                (wordAdjacent ? 0 : -1100 /* Penalty.Gap */), byWord, word);\n        return chars.length == 2 ? null : this.result((any[0] ? -700 /* Penalty.NotStart */ : 0) + -200 /* Penalty.CaseFold */ + -1100 /* Penalty.Gap */, any, word);\n    }\n    result(score, positions, word) {\n        let result = [score - word.length], i = 1;\n        for (let pos of positions) {\n            let to = pos + (this.astral ? codePointSize(codePointAt(word, pos)) : 1);\n            if (i > 1 && result[i - 1] == pos)\n                result[i - 1] = to;\n            else {\n                result[i++] = pos;\n                result[i++] = to;\n            }\n        }\n        return result;\n    }\n}\n\nconst completionConfig = /*@__PURE__*/Facet.define({\n    combine(configs) {\n        return combineConfig(configs, {\n            activateOnTyping: true,\n            selectOnOpen: true,\n            override: null,\n            closeOnBlur: true,\n            maxRenderedOptions: 100,\n            defaultKeymap: true,\n            tooltipClass: () => \"\",\n            optionClass: () => \"\",\n            aboveCursor: false,\n            icons: true,\n            addToOptions: [],\n            positionInfo: defaultPositionInfo,\n            compareCompletions: (a, b) => a.label.localeCompare(b.label),\n            interactionDelay: 75\n        }, {\n            defaultKeymap: (a, b) => a && b,\n            closeOnBlur: (a, b) => a && b,\n            icons: (a, b) => a && b,\n            tooltipClass: (a, b) => c => joinClass(a(c), b(c)),\n            optionClass: (a, b) => c => joinClass(a(c), b(c)),\n            addToOptions: (a, b) => a.concat(b)\n        });\n    }\n});\nfunction joinClass(a, b) {\n    return a ? b ? a + \" \" + b : a : b;\n}\nfunction defaultPositionInfo(view, list, option, info, space) {\n    let rtl = view.textDirection == Direction.RTL, left = rtl, narrow = false;\n    let side = \"top\", offset, maxWidth;\n    let spaceLeft = list.left - space.left, spaceRight = space.right - list.right;\n    let infoWidth = info.right - info.left, infoHeight = info.bottom - info.top;\n    if (left && spaceLeft < Math.min(infoWidth, spaceRight))\n        left = false;\n    else if (!left && spaceRight < Math.min(infoWidth, spaceLeft))\n        left = true;\n    if (infoWidth <= (left ? spaceLeft : spaceRight)) {\n        offset = Math.max(space.top, Math.min(option.top, space.bottom - infoHeight)) - list.top;\n        maxWidth = Math.min(400 /* Info.Width */, left ? spaceLeft : spaceRight);\n    }\n    else {\n        narrow = true;\n        maxWidth = Math.min(400 /* Info.Width */, (rtl ? list.right : space.right - list.left) - 30 /* Info.Margin */);\n        let spaceBelow = space.bottom - list.bottom;\n        if (spaceBelow >= infoHeight || spaceBelow > list.top) { // Below the completion\n            offset = option.bottom - list.top;\n        }\n        else { // Above it\n            side = \"bottom\";\n            offset = list.bottom - option.top;\n        }\n    }\n    return {\n        style: `${side}: ${offset}px; max-width: ${maxWidth}px`,\n        class: \"cm-completionInfo-\" + (narrow ? (rtl ? \"left-narrow\" : \"right-narrow\") : left ? \"left\" : \"right\")\n    };\n}\n\n/**\nReturns a command that moves the completion selection forward or\nbackward by the given amount.\n*/\nfunction moveCompletionSelection(forward, by = \"option\") {\n    return (view) => {\n        let cState = view.state.field(completionState, false);\n        if (!cState || !cState.open || cState.open.disabled ||\n            Date.now() - cState.open.timestamp < view.state.facet(completionConfig).interactionDelay)\n            return false;\n        let step = 1, tooltip;\n        if (by == \"page\" && (tooltip = getTooltip(view, cState.open.tooltip)))\n            step = Math.max(2, Math.floor(tooltip.dom.offsetHeight /\n                tooltip.dom.querySelector(\"li\").offsetHeight) - 1);\n        let { length } = cState.open.options;\n        let selected = cState.open.selected > -1 ? cState.open.selected + step * (forward ? 1 : -1) : forward ? 0 : length - 1;\n        if (selected < 0)\n            selected = by == \"page\" ? 0 : length - 1;\n        else if (selected >= length)\n            selected = by == \"page\" ? length - 1 : 0;\n        view.dispatch({ effects: setSelectedEffect.of(selected) });\n        return true;\n    };\n}\n/**\nAccept the current completion.\n*/\nconst acceptCompletion = (view) => {\n    let cState = view.state.field(completionState, false);\n    if (view.state.readOnly || !cState || !cState.open || cState.open.selected < 0 ||\n        Date.now() - cState.open.timestamp < view.state.facet(completionConfig).interactionDelay)\n        return false;\n    if (!cState.open.disabled)\n        return applyCompletion(view, cState.open.options[cState.open.selected]);\n    return true;\n};\n/**\nExplicitly start autocompletion.\n*/\nconst startCompletion = (view) => {\n    let cState = view.state.field(completionState, false);\n    if (!cState)\n        return false;\n    view.dispatch({ effects: startCompletionEffect.of(true) });\n    return true;\n};\n/**\nClose the currently active completion.\n*/\nconst closeCompletion = (view) => {\n    let cState = view.state.field(completionState, false);\n    if (!cState || !cState.active.some(a => a.state != 0 /* State.Inactive */))\n        return false;\n    view.dispatch({ effects: closeCompletionEffect.of(null) });\n    return true;\n};\nclass RunningQuery {\n    constructor(active, context) {\n        this.active = active;\n        this.context = context;\n        this.time = Date.now();\n        this.updates = [];\n        // Note that 'undefined' means 'not done yet', whereas 'null' means\n        // 'query returned null'.\n        this.done = undefined;\n    }\n}\nconst DebounceTime = 50, MaxUpdateCount = 50, MinAbortTime = 1000;\nconst completionPlugin = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.view = view;\n        this.debounceUpdate = -1;\n        this.running = [];\n        this.debounceAccept = -1;\n        this.composing = 0 /* CompositionState.None */;\n        for (let active of view.state.field(completionState).active)\n            if (active.state == 1 /* State.Pending */)\n                this.startQuery(active);\n    }\n    update(update) {\n        let cState = update.state.field(completionState);\n        if (!update.selectionSet && !update.docChanged && update.startState.field(completionState) == cState)\n            return;\n        let doesReset = update.transactions.some(tr => {\n            return (tr.selection || tr.docChanged) && !getUserEvent(tr);\n        });\n        for (let i = 0; i < this.running.length; i++) {\n            let query = this.running[i];\n            if (doesReset ||\n                query.updates.length + update.transactions.length > MaxUpdateCount && Date.now() - query.time > MinAbortTime) {\n                for (let handler of query.context.abortListeners) {\n                    try {\n                        handler();\n                    }\n                    catch (e) {\n                        logException(this.view.state, e);\n                    }\n                }\n                query.context.abortListeners = null;\n                this.running.splice(i--, 1);\n            }\n            else {\n                query.updates.push(...update.transactions);\n            }\n        }\n        if (this.debounceUpdate > -1)\n            clearTimeout(this.debounceUpdate);\n        this.debounceUpdate = cState.active.some(a => a.state == 1 /* State.Pending */ && !this.running.some(q => q.active.source == a.source))\n            ? setTimeout(() => this.startUpdate(), DebounceTime) : -1;\n        if (this.composing != 0 /* CompositionState.None */)\n            for (let tr of update.transactions) {\n                if (getUserEvent(tr) == \"input\")\n                    this.composing = 2 /* CompositionState.Changed */;\n                else if (this.composing == 2 /* CompositionState.Changed */ && tr.selection)\n                    this.composing = 3 /* CompositionState.ChangedAndMoved */;\n            }\n    }\n    startUpdate() {\n        this.debounceUpdate = -1;\n        let { state } = this.view, cState = state.field(completionState);\n        for (let active of cState.active) {\n            if (active.state == 1 /* State.Pending */ && !this.running.some(r => r.active.source == active.source))\n                this.startQuery(active);\n        }\n    }\n    startQuery(active) {\n        let { state } = this.view, pos = cur(state);\n        let context = new CompletionContext(state, pos, active.explicitPos == pos);\n        let pending = new RunningQuery(active, context);\n        this.running.push(pending);\n        Promise.resolve(active.source(context)).then(result => {\n            if (!pending.context.aborted) {\n                pending.done = result || null;\n                this.scheduleAccept();\n            }\n        }, err => {\n            this.view.dispatch({ effects: closeCompletionEffect.of(null) });\n            logException(this.view.state, err);\n        });\n    }\n    scheduleAccept() {\n        if (this.running.every(q => q.done !== undefined))\n            this.accept();\n        else if (this.debounceAccept < 0)\n            this.debounceAccept = setTimeout(() => this.accept(), DebounceTime);\n    }\n    // For each finished query in this.running, try to create a result\n    // or, if appropriate, restart the query.\n    accept() {\n        var _a;\n        if (this.debounceAccept > -1)\n            clearTimeout(this.debounceAccept);\n        this.debounceAccept = -1;\n        let updated = [];\n        let conf = this.view.state.facet(completionConfig);\n        for (let i = 0; i < this.running.length; i++) {\n            let query = this.running[i];\n            if (query.done === undefined)\n                continue;\n            this.running.splice(i--, 1);\n            if (query.done) {\n                let active = new ActiveResult(query.active.source, query.active.explicitPos, query.done, query.done.from, (_a = query.done.to) !== null && _a !== void 0 ? _a : cur(query.updates.length ? query.updates[0].startState : this.view.state));\n                // Replay the transactions that happened since the start of\n                // the request and see if that preserves the result\n                for (let tr of query.updates)\n                    active = active.update(tr, conf);\n                if (active.hasResult()) {\n                    updated.push(active);\n                    continue;\n                }\n            }\n            let current = this.view.state.field(completionState).active.find(a => a.source == query.active.source);\n            if (current && current.state == 1 /* State.Pending */) {\n                if (query.done == null) {\n                    // Explicitly failed. Should clear the pending status if it\n                    // hasn't been re-set in the meantime.\n                    let active = new ActiveSource(query.active.source, 0 /* State.Inactive */);\n                    for (let tr of query.updates)\n                        active = active.update(tr, conf);\n                    if (active.state != 1 /* State.Pending */)\n                        updated.push(active);\n                }\n                else {\n                    // Cleared by subsequent transactions. Restart.\n                    this.startQuery(current);\n                }\n            }\n        }\n        if (updated.length)\n            this.view.dispatch({ effects: setActiveEffect.of(updated) });\n    }\n}, {\n    eventHandlers: {\n        blur(event) {\n            let state = this.view.state.field(completionState, false);\n            if (state && state.tooltip && this.view.state.facet(completionConfig).closeOnBlur) {\n                let dialog = state.open && getTooltip(this.view, state.open.tooltip);\n                if (!dialog || !dialog.dom.contains(event.relatedTarget))\n                    this.view.dispatch({ effects: closeCompletionEffect.of(null) });\n            }\n        },\n        compositionstart() {\n            this.composing = 1 /* CompositionState.Started */;\n        },\n        compositionend() {\n            if (this.composing == 3 /* CompositionState.ChangedAndMoved */) {\n                // Safari fires compositionend events synchronously, possibly\n                // from inside an update, so dispatch asynchronously to avoid reentrancy\n                setTimeout(() => this.view.dispatch({ effects: startCompletionEffect.of(false) }), 20);\n            }\n            this.composing = 0 /* CompositionState.None */;\n        }\n    }\n});\nfunction applyCompletion(view, option) {\n    const apply = option.completion.apply || option.completion.label;\n    let result = view.state.field(completionState).active.find(a => a.source == option.source);\n    if (!(result instanceof ActiveResult))\n        return false;\n    if (typeof apply == \"string\")\n        view.dispatch(Object.assign(Object.assign({}, insertCompletionText(view.state, apply, result.from, result.to)), { annotations: pickedCompletion.of(option.completion) }));\n    else\n        apply(view, option.completion, result.from, result.to);\n    return true;\n}\n\nfunction optionContent(config) {\n    let content = config.addToOptions.slice();\n    if (config.icons)\n        content.push({\n            render(completion) {\n                let icon = document.createElement(\"div\");\n                icon.classList.add(\"cm-completionIcon\");\n                if (completion.type)\n                    icon.classList.add(...completion.type.split(/\\s+/g).map(cls => \"cm-completionIcon-\" + cls));\n                icon.setAttribute(\"aria-hidden\", \"true\");\n                return icon;\n            },\n            position: 20\n        });\n    content.push({\n        render(completion, _s, match) {\n            let labelElt = document.createElement(\"span\");\n            labelElt.className = \"cm-completionLabel\";\n            let { label } = completion, off = 0;\n            for (let j = 1; j < match.length;) {\n                let from = match[j++], to = match[j++];\n                if (from > off)\n                    labelElt.appendChild(document.createTextNode(label.slice(off, from)));\n                let span = labelElt.appendChild(document.createElement(\"span\"));\n                span.appendChild(document.createTextNode(label.slice(from, to)));\n                span.className = \"cm-completionMatchedText\";\n                off = to;\n            }\n            if (off < label.length)\n                labelElt.appendChild(document.createTextNode(label.slice(off)));\n            return labelElt;\n        },\n        position: 50\n    }, {\n        render(completion) {\n            if (!completion.detail)\n                return null;\n            let detailElt = document.createElement(\"span\");\n            detailElt.className = \"cm-completionDetail\";\n            detailElt.textContent = completion.detail;\n            return detailElt;\n        },\n        position: 80\n    });\n    return content.sort((a, b) => a.position - b.position).map(a => a.render);\n}\nfunction rangeAroundSelected(total, selected, max) {\n    if (total <= max)\n        return { from: 0, to: total };\n    if (selected < 0)\n        selected = 0;\n    if (selected <= (total >> 1)) {\n        let off = Math.floor(selected / max);\n        return { from: off * max, to: (off + 1) * max };\n    }\n    let off = Math.floor((total - selected) / max);\n    return { from: total - (off + 1) * max, to: total - off * max };\n}\nclass CompletionTooltip {\n    constructor(view, stateField) {\n        this.view = view;\n        this.stateField = stateField;\n        this.info = null;\n        this.placeInfoReq = {\n            read: () => this.measureInfo(),\n            write: (pos) => this.placeInfo(pos),\n            key: this\n        };\n        this.space = null;\n        this.currentClass = \"\";\n        let cState = view.state.field(stateField);\n        let { options, selected } = cState.open;\n        let config = view.state.facet(completionConfig);\n        this.optionContent = optionContent(config);\n        this.optionClass = config.optionClass;\n        this.tooltipClass = config.tooltipClass;\n        this.range = rangeAroundSelected(options.length, selected, config.maxRenderedOptions);\n        this.dom = document.createElement(\"div\");\n        this.dom.className = \"cm-tooltip-autocomplete\";\n        this.updateTooltipClass(view.state);\n        this.dom.addEventListener(\"mousedown\", (e) => {\n            for (let dom = e.target, match; dom && dom != this.dom; dom = dom.parentNode) {\n                if (dom.nodeName == \"LI\" && (match = /-(\\d+)$/.exec(dom.id)) && +match[1] < options.length) {\n                    applyCompletion(view, options[+match[1]]);\n                    e.preventDefault();\n                    return;\n                }\n            }\n        });\n        this.dom.addEventListener(\"focusout\", (e) => {\n            let state = view.state.field(this.stateField, false);\n            if (state && state.tooltip && view.state.facet(completionConfig).closeOnBlur &&\n                e.relatedTarget != view.contentDOM)\n                view.dispatch({ effects: closeCompletionEffect.of(null) });\n        });\n        this.list = this.dom.appendChild(this.createListBox(options, cState.id, this.range));\n        this.list.addEventListener(\"scroll\", () => {\n            if (this.info)\n                this.view.requestMeasure(this.placeInfoReq);\n        });\n    }\n    mount() { this.updateSel(); }\n    update(update) {\n        var _a, _b, _c;\n        let cState = update.state.field(this.stateField);\n        let prevState = update.startState.field(this.stateField);\n        this.updateTooltipClass(update.state);\n        if (cState != prevState) {\n            this.updateSel();\n            if (((_a = cState.open) === null || _a === void 0 ? void 0 : _a.disabled) != ((_b = prevState.open) === null || _b === void 0 ? void 0 : _b.disabled))\n                this.dom.classList.toggle(\"cm-tooltip-autocomplete-disabled\", !!((_c = cState.open) === null || _c === void 0 ? void 0 : _c.disabled));\n        }\n    }\n    updateTooltipClass(state) {\n        let cls = this.tooltipClass(state);\n        if (cls != this.currentClass) {\n            for (let c of this.currentClass.split(\" \"))\n                if (c)\n                    this.dom.classList.remove(c);\n            for (let c of cls.split(\" \"))\n                if (c)\n                    this.dom.classList.add(c);\n            this.currentClass = cls;\n        }\n    }\n    positioned(space) {\n        this.space = space;\n        if (this.info)\n            this.view.requestMeasure(this.placeInfoReq);\n    }\n    updateSel() {\n        let cState = this.view.state.field(this.stateField), open = cState.open;\n        if (open.selected > -1 && open.selected < this.range.from || open.selected >= this.range.to) {\n            this.range = rangeAroundSelected(open.options.length, open.selected, this.view.state.facet(completionConfig).maxRenderedOptions);\n            this.list.remove();\n            this.list = this.dom.appendChild(this.createListBox(open.options, cState.id, this.range));\n            this.list.addEventListener(\"scroll\", () => {\n                if (this.info)\n                    this.view.requestMeasure(this.placeInfoReq);\n            });\n        }\n        if (this.updateSelectedOption(open.selected)) {\n            if (this.info) {\n                this.info.remove();\n                this.info = null;\n            }\n            let { completion } = open.options[open.selected];\n            let { info } = completion;\n            if (!info)\n                return;\n            let infoResult = typeof info === 'string' ? document.createTextNode(info) : info(completion);\n            if (!infoResult)\n                return;\n            if ('then' in infoResult) {\n                infoResult.then(node => {\n                    if (node && this.view.state.field(this.stateField, false) == cState)\n                        this.addInfoPane(node);\n                }).catch(e => logException(this.view.state, e, \"completion info\"));\n            }\n            else {\n                this.addInfoPane(infoResult);\n            }\n        }\n    }\n    addInfoPane(content) {\n        let dom = this.info = document.createElement(\"div\");\n        dom.className = \"cm-tooltip cm-completionInfo\";\n        dom.appendChild(content);\n        this.dom.appendChild(dom);\n        this.view.requestMeasure(this.placeInfoReq);\n    }\n    updateSelectedOption(selected) {\n        let set = null;\n        for (let opt = this.list.firstChild, i = this.range.from; opt; opt = opt.nextSibling, i++) {\n            if (opt.nodeName != \"LI\" || !opt.id) {\n                i--; // A section header\n            }\n            else if (i == selected) {\n                if (!opt.hasAttribute(\"aria-selected\")) {\n                    opt.setAttribute(\"aria-selected\", \"true\");\n                    set = opt;\n                }\n            }\n            else {\n                if (opt.hasAttribute(\"aria-selected\"))\n                    opt.removeAttribute(\"aria-selected\");\n            }\n        }\n        if (set)\n            scrollIntoView(this.list, set);\n        return set;\n    }\n    measureInfo() {\n        let sel = this.dom.querySelector(\"[aria-selected]\");\n        if (!sel || !this.info)\n            return null;\n        let listRect = this.dom.getBoundingClientRect();\n        let infoRect = this.info.getBoundingClientRect();\n        let selRect = sel.getBoundingClientRect();\n        let space = this.space;\n        if (!space) {\n            let win = this.dom.ownerDocument.defaultView || window;\n            space = { left: 0, top: 0, right: win.innerWidth, bottom: win.innerHeight };\n        }\n        if (selRect.top > Math.min(space.bottom, listRect.bottom) - 10 ||\n            selRect.bottom < Math.max(space.top, listRect.top) + 10)\n            return null;\n        return this.view.state.facet(completionConfig).positionInfo(this.view, listRect, selRect, infoRect, space);\n    }\n    placeInfo(pos) {\n        if (this.info) {\n            if (pos) {\n                if (pos.style)\n                    this.info.style.cssText = pos.style;\n                this.info.className = \"cm-tooltip cm-completionInfo \" + (pos.class || \"\");\n            }\n            else {\n                this.info.style.cssText = \"top: -1e6px\";\n            }\n        }\n    }\n    createListBox(options, id, range) {\n        const ul = document.createElement(\"ul\");\n        ul.id = id;\n        ul.setAttribute(\"role\", \"listbox\");\n        ul.setAttribute(\"aria-expanded\", \"true\");\n        ul.setAttribute(\"aria-label\", this.view.state.phrase(\"Completions\"));\n        let curSection = null;\n        for (let i = range.from; i < range.to; i++) {\n            let { completion, match } = options[i], { section } = completion;\n            if (section) {\n                let name = typeof section == \"string\" ? section : section.name;\n                if (name != curSection && (i > range.from || range.from == 0)) {\n                    curSection = name;\n                    if (typeof section != \"string\" && section.header) {\n                        ul.appendChild(section.header(section));\n                    }\n                    else {\n                        let header = ul.appendChild(document.createElement(\"completion-section\"));\n                        header.textContent = name;\n                    }\n                }\n            }\n            const li = ul.appendChild(document.createElement(\"li\"));\n            li.id = id + \"-\" + i;\n            li.setAttribute(\"role\", \"option\");\n            let cls = this.optionClass(completion);\n            if (cls)\n                li.className = cls;\n            for (let source of this.optionContent) {\n                let node = source(completion, this.view.state, match);\n                if (node)\n                    li.appendChild(node);\n            }\n        }\n        if (range.from)\n            ul.classList.add(\"cm-completionListIncompleteTop\");\n        if (range.to < options.length)\n            ul.classList.add(\"cm-completionListIncompleteBottom\");\n        return ul;\n    }\n}\n// We allocate a new function instance every time the completion\n// changes to force redrawing/repositioning of the tooltip\nfunction completionTooltip(stateField) {\n    return (view) => new CompletionTooltip(view, stateField);\n}\nfunction scrollIntoView(container, element) {\n    let parent = container.getBoundingClientRect();\n    let self = element.getBoundingClientRect();\n    if (self.top < parent.top)\n        container.scrollTop -= parent.top - self.top;\n    else if (self.bottom > parent.bottom)\n        container.scrollTop += self.bottom - parent.bottom;\n}\n\n// Used to pick a preferred option when two options with the same\n// label occur in the result.\nfunction score(option) {\n    return (option.boost || 0) * 100 + (option.apply ? 10 : 0) + (option.info ? 5 : 0) +\n        (option.type ? 1 : 0);\n}\nfunction sortOptions(active, state) {\n    let options = [];\n    let sections = null;\n    let addOption = (option) => {\n        options.push(option);\n        let { section } = option.completion;\n        if (section) {\n            if (!sections)\n                sections = [];\n            let name = typeof section == \"string\" ? section : section.name;\n            if (!sections.some(s => s.name == name))\n                sections.push(typeof section == \"string\" ? { name } : section);\n        }\n    };\n    for (let a of active)\n        if (a.hasResult()) {\n            if (a.result.filter === false) {\n                let getMatch = a.result.getMatch;\n                for (let option of a.result.options) {\n                    let match = [1e9 - options.length];\n                    if (getMatch)\n                        for (let n of getMatch(option))\n                            match.push(n);\n                    addOption(new Option(option, a.source, match, match[0]));\n                }\n            }\n            else {\n                let matcher = new FuzzyMatcher(state.sliceDoc(a.from, a.to)), match;\n                for (let option of a.result.options)\n                    if (match = matcher.match(option.label)) {\n                        addOption(new Option(option, a.source, match, match[0] + (option.boost || 0)));\n                    }\n            }\n        }\n    if (sections) {\n        let sectionOrder = Object.create(null), pos = 0;\n        let cmp = (a, b) => { var _a, _b; return ((_a = a.rank) !== null && _a !== void 0 ? _a : 1e9) - ((_b = b.rank) !== null && _b !== void 0 ? _b : 1e9) || (a.name < b.name ? -1 : 1); };\n        for (let s of sections.sort(cmp)) {\n            pos -= 1e5;\n            sectionOrder[s.name] = pos;\n        }\n        for (let option of options) {\n            let { section } = option.completion;\n            if (section)\n                option.score += sectionOrder[typeof section == \"string\" ? section : section.name];\n        }\n    }\n    let result = [], prev = null;\n    let compare = state.facet(completionConfig).compareCompletions;\n    for (let opt of options.sort((a, b) => (b.score - a.score) || compare(a.completion, b.completion))) {\n        if (!prev || prev.label != opt.completion.label || prev.detail != opt.completion.detail ||\n            (prev.type != null && opt.completion.type != null && prev.type != opt.completion.type) ||\n            prev.apply != opt.completion.apply)\n            result.push(opt);\n        else if (score(opt.completion) > score(prev))\n            result[result.length - 1] = opt;\n        prev = opt.completion;\n    }\n    return result;\n}\nclass CompletionDialog {\n    constructor(options, attrs, tooltip, timestamp, selected, disabled) {\n        this.options = options;\n        this.attrs = attrs;\n        this.tooltip = tooltip;\n        this.timestamp = timestamp;\n        this.selected = selected;\n        this.disabled = disabled;\n    }\n    setSelected(selected, id) {\n        return selected == this.selected || selected >= this.options.length ? this\n            : new CompletionDialog(this.options, makeAttrs(id, selected), this.tooltip, this.timestamp, selected, this.disabled);\n    }\n    static build(active, state, id, prev, conf) {\n        let options = sortOptions(active, state);\n        if (!options.length) {\n            return prev && active.some(a => a.state == 1 /* State.Pending */) ?\n                new CompletionDialog(prev.options, prev.attrs, prev.tooltip, prev.timestamp, prev.selected, true) : null;\n        }\n        let selected = state.facet(completionConfig).selectOnOpen ? 0 : -1;\n        if (prev && prev.selected != selected && prev.selected != -1) {\n            let selectedValue = prev.options[prev.selected].completion;\n            for (let i = 0; i < options.length; i++)\n                if (options[i].completion == selectedValue) {\n                    selected = i;\n                    break;\n                }\n        }\n        return new CompletionDialog(options, makeAttrs(id, selected), {\n            pos: active.reduce((a, b) => b.hasResult() ? Math.min(a, b.from) : a, 1e8),\n            create: completionTooltip(completionState),\n            above: conf.aboveCursor,\n        }, prev ? prev.timestamp : Date.now(), selected, false);\n    }\n    map(changes) {\n        return new CompletionDialog(this.options, this.attrs, Object.assign(Object.assign({}, this.tooltip), { pos: changes.mapPos(this.tooltip.pos) }), this.timestamp, this.selected, this.disabled);\n    }\n}\nclass CompletionState {\n    constructor(active, id, open) {\n        this.active = active;\n        this.id = id;\n        this.open = open;\n    }\n    static start() {\n        return new CompletionState(none, \"cm-ac-\" + Math.floor(Math.random() * 2e6).toString(36), null);\n    }\n    update(tr) {\n        let { state } = tr, conf = state.facet(completionConfig);\n        let sources = conf.override ||\n            state.languageDataAt(\"autocomplete\", cur(state)).map(asSource);\n        let active = sources.map(source => {\n            let value = this.active.find(s => s.source == source) ||\n                new ActiveSource(source, this.active.some(a => a.state != 0 /* State.Inactive */) ? 1 /* State.Pending */ : 0 /* State.Inactive */);\n            return value.update(tr, conf);\n        });\n        if (active.length == this.active.length && active.every((a, i) => a == this.active[i]))\n            active = this.active;\n        let open = this.open;\n        if (open && tr.docChanged)\n            open = open.map(tr.changes);\n        if (tr.selection || active.some(a => a.hasResult() && tr.changes.touchesRange(a.from, a.to)) ||\n            !sameResults(active, this.active))\n            open = CompletionDialog.build(active, state, this.id, open, conf);\n        else if (open && open.disabled && !active.some(a => a.state == 1 /* State.Pending */))\n            open = null;\n        if (!open && active.every(a => a.state != 1 /* State.Pending */) && active.some(a => a.hasResult()))\n            active = active.map(a => a.hasResult() ? new ActiveSource(a.source, 0 /* State.Inactive */) : a);\n        for (let effect of tr.effects)\n            if (effect.is(setSelectedEffect))\n                open = open && open.setSelected(effect.value, this.id);\n        return active == this.active && open == this.open ? this : new CompletionState(active, this.id, open);\n    }\n    get tooltip() { return this.open ? this.open.tooltip : null; }\n    get attrs() { return this.open ? this.open.attrs : baseAttrs; }\n}\nfunction sameResults(a, b) {\n    if (a == b)\n        return true;\n    for (let iA = 0, iB = 0;;) {\n        while (iA < a.length && !a[iA].hasResult)\n            iA++;\n        while (iB < b.length && !b[iB].hasResult)\n            iB++;\n        let endA = iA == a.length, endB = iB == b.length;\n        if (endA || endB)\n            return endA == endB;\n        if (a[iA++].result != b[iB++].result)\n            return false;\n    }\n}\nconst baseAttrs = {\n    \"aria-autocomplete\": \"list\"\n};\nfunction makeAttrs(id, selected) {\n    let result = {\n        \"aria-autocomplete\": \"list\",\n        \"aria-haspopup\": \"listbox\",\n        \"aria-controls\": id\n    };\n    if (selected > -1)\n        result[\"aria-activedescendant\"] = id + \"-\" + selected;\n    return result;\n}\nconst none = [];\nfunction getUserEvent(tr) {\n    return tr.isUserEvent(\"input.type\") ? \"input\" : tr.isUserEvent(\"delete.backward\") ? \"delete\" : null;\n}\nclass ActiveSource {\n    constructor(source, state, explicitPos = -1) {\n        this.source = source;\n        this.state = state;\n        this.explicitPos = explicitPos;\n    }\n    hasResult() { return false; }\n    update(tr, conf) {\n        let event = getUserEvent(tr), value = this;\n        if (event)\n            value = value.handleUserEvent(tr, event, conf);\n        else if (tr.docChanged)\n            value = value.handleChange(tr);\n        else if (tr.selection && value.state != 0 /* State.Inactive */)\n            value = new ActiveSource(value.source, 0 /* State.Inactive */);\n        for (let effect of tr.effects) {\n            if (effect.is(startCompletionEffect))\n                value = new ActiveSource(value.source, 1 /* State.Pending */, effect.value ? cur(tr.state) : -1);\n            else if (effect.is(closeCompletionEffect))\n                value = new ActiveSource(value.source, 0 /* State.Inactive */);\n            else if (effect.is(setActiveEffect))\n                for (let active of effect.value)\n                    if (active.source == value.source)\n                        value = active;\n        }\n        return value;\n    }\n    handleUserEvent(tr, type, conf) {\n        return type == \"delete\" || !conf.activateOnTyping ? this.map(tr.changes) : new ActiveSource(this.source, 1 /* State.Pending */);\n    }\n    handleChange(tr) {\n        return tr.changes.touchesRange(cur(tr.startState)) ? new ActiveSource(this.source, 0 /* State.Inactive */) : this.map(tr.changes);\n    }\n    map(changes) {\n        return changes.empty || this.explicitPos < 0 ? this : new ActiveSource(this.source, this.state, changes.mapPos(this.explicitPos));\n    }\n}\nclass ActiveResult extends ActiveSource {\n    constructor(source, explicitPos, result, from, to) {\n        super(source, 2 /* State.Result */, explicitPos);\n        this.result = result;\n        this.from = from;\n        this.to = to;\n    }\n    hasResult() { return true; }\n    handleUserEvent(tr, type, conf) {\n        var _a;\n        let from = tr.changes.mapPos(this.from), to = tr.changes.mapPos(this.to, 1);\n        let pos = cur(tr.state);\n        if ((this.explicitPos < 0 ? pos <= from : pos < this.from) ||\n            pos > to ||\n            type == \"delete\" && cur(tr.startState) == this.from)\n            return new ActiveSource(this.source, type == \"input\" && conf.activateOnTyping ? 1 /* State.Pending */ : 0 /* State.Inactive */);\n        let explicitPos = this.explicitPos < 0 ? -1 : tr.changes.mapPos(this.explicitPos), updated;\n        if (checkValid(this.result.validFor, tr.state, from, to))\n            return new ActiveResult(this.source, explicitPos, this.result, from, to);\n        if (this.result.update &&\n            (updated = this.result.update(this.result, from, to, new CompletionContext(tr.state, pos, explicitPos >= 0))))\n            return new ActiveResult(this.source, explicitPos, updated, updated.from, (_a = updated.to) !== null && _a !== void 0 ? _a : cur(tr.state));\n        return new ActiveSource(this.source, 1 /* State.Pending */, explicitPos);\n    }\n    handleChange(tr) {\n        return tr.changes.touchesRange(this.from, this.to) ? new ActiveSource(this.source, 0 /* State.Inactive */) : this.map(tr.changes);\n    }\n    map(mapping) {\n        return mapping.empty ? this :\n            new ActiveResult(this.source, this.explicitPos < 0 ? -1 : mapping.mapPos(this.explicitPos), this.result, mapping.mapPos(this.from), mapping.mapPos(this.to, 1));\n    }\n}\nfunction checkValid(validFor, state, from, to) {\n    if (!validFor)\n        return false;\n    let text = state.sliceDoc(from, to);\n    return typeof validFor == \"function\" ? validFor(text, from, to, state) : ensureAnchor(validFor, true).test(text);\n}\nconst setActiveEffect = /*@__PURE__*/StateEffect.define({\n    map(sources, mapping) { return sources.map(s => s.map(mapping)); }\n});\nconst setSelectedEffect = /*@__PURE__*/StateEffect.define();\nconst completionState = /*@__PURE__*/StateField.define({\n    create() { return CompletionState.start(); },\n    update(value, tr) { return value.update(tr); },\n    provide: f => [\n        showTooltip.from(f, val => val.tooltip),\n        EditorView.contentAttributes.from(f, state => state.attrs)\n    ]\n});\n\nconst baseTheme = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-tooltip.cm-tooltip-autocomplete\": {\n        \"& > ul\": {\n            fontFamily: \"monospace\",\n            whiteSpace: \"nowrap\",\n            overflow: \"hidden auto\",\n            maxWidth_fallback: \"700px\",\n            maxWidth: \"min(700px, 95vw)\",\n            minWidth: \"250px\",\n            maxHeight: \"10em\",\n            height: \"100%\",\n            listStyle: \"none\",\n            margin: 0,\n            padding: 0,\n            \"& > li, & > completion-section\": {\n                padding: \"1px 3px\",\n                lineHeight: 1.2\n            },\n            \"& > li\": {\n                overflowX: \"hidden\",\n                textOverflow: \"ellipsis\",\n                cursor: \"pointer\"\n            },\n            \"& > completion-section\": {\n                display: \"list-item\",\n                borderBottom: \"1px solid silver\",\n                paddingLeft: \"0.5em\",\n                opacity: 0.7\n            }\n        }\n    },\n    \"&light .cm-tooltip-autocomplete ul li[aria-selected]\": {\n        background: \"#17c\",\n        color: \"white\",\n    },\n    \"&light .cm-tooltip-autocomplete-disabled ul li[aria-selected]\": {\n        background: \"#777\",\n    },\n    \"&dark .cm-tooltip-autocomplete ul li[aria-selected]\": {\n        background: \"#347\",\n        color: \"white\",\n    },\n    \"&dark .cm-tooltip-autocomplete-disabled ul li[aria-selected]\": {\n        background: \"#444\",\n    },\n    \".cm-completionListIncompleteTop:before, .cm-completionListIncompleteBottom:after\": {\n        content: '\"···\"',\n        opacity: 0.5,\n        display: \"block\",\n        textAlign: \"center\"\n    },\n    \".cm-tooltip.cm-completionInfo\": {\n        position: \"absolute\",\n        padding: \"3px 9px\",\n        width: \"max-content\",\n        maxWidth: `${400 /* Info.Width */}px`,\n        boxSizing: \"border-box\"\n    },\n    \".cm-completionInfo.cm-completionInfo-left\": { right: \"100%\" },\n    \".cm-completionInfo.cm-completionInfo-right\": { left: \"100%\" },\n    \".cm-completionInfo.cm-completionInfo-left-narrow\": { right: `${30 /* Info.Margin */}px` },\n    \".cm-completionInfo.cm-completionInfo-right-narrow\": { left: `${30 /* Info.Margin */}px` },\n    \"&light .cm-snippetField\": { backgroundColor: \"#00000022\" },\n    \"&dark .cm-snippetField\": { backgroundColor: \"#ffffff22\" },\n    \".cm-snippetFieldPosition\": {\n        verticalAlign: \"text-top\",\n        width: 0,\n        height: \"1.15em\",\n        display: \"inline-block\",\n        margin: \"0 -0.7px -.7em\",\n        borderLeft: \"1.4px dotted #888\"\n    },\n    \".cm-completionMatchedText\": {\n        textDecoration: \"underline\"\n    },\n    \".cm-completionDetail\": {\n        marginLeft: \"0.5em\",\n        fontStyle: \"italic\"\n    },\n    \".cm-completionIcon\": {\n        fontSize: \"90%\",\n        width: \".8em\",\n        display: \"inline-block\",\n        textAlign: \"center\",\n        paddingRight: \".6em\",\n        opacity: \"0.6\",\n        boxSizing: \"content-box\"\n    },\n    \".cm-completionIcon-function, .cm-completionIcon-method\": {\n        \"&:after\": { content: \"'ƒ'\" }\n    },\n    \".cm-completionIcon-class\": {\n        \"&:after\": { content: \"'○'\" }\n    },\n    \".cm-completionIcon-interface\": {\n        \"&:after\": { content: \"'◌'\" }\n    },\n    \".cm-completionIcon-variable\": {\n        \"&:after\": { content: \"'𝑥'\" }\n    },\n    \".cm-completionIcon-constant\": {\n        \"&:after\": { content: \"'𝐶'\" }\n    },\n    \".cm-completionIcon-type\": {\n        \"&:after\": { content: \"'𝑡'\" }\n    },\n    \".cm-completionIcon-enum\": {\n        \"&:after\": { content: \"'∪'\" }\n    },\n    \".cm-completionIcon-property\": {\n        \"&:after\": { content: \"'□'\" }\n    },\n    \".cm-completionIcon-keyword\": {\n        \"&:after\": { content: \"'🔑\\uFE0E'\" } // Disable emoji rendering\n    },\n    \".cm-completionIcon-namespace\": {\n        \"&:after\": { content: \"'▢'\" }\n    },\n    \".cm-completionIcon-text\": {\n        \"&:after\": { content: \"'abc'\", fontSize: \"50%\", verticalAlign: \"middle\" }\n    }\n});\n\nclass FieldPos {\n    constructor(field, line, from, to) {\n        this.field = field;\n        this.line = line;\n        this.from = from;\n        this.to = to;\n    }\n}\nclass FieldRange {\n    constructor(field, from, to) {\n        this.field = field;\n        this.from = from;\n        this.to = to;\n    }\n    map(changes) {\n        let from = changes.mapPos(this.from, -1, MapMode.TrackDel);\n        let to = changes.mapPos(this.to, 1, MapMode.TrackDel);\n        return from == null || to == null ? null : new FieldRange(this.field, from, to);\n    }\n}\nclass Snippet {\n    constructor(lines, fieldPositions) {\n        this.lines = lines;\n        this.fieldPositions = fieldPositions;\n    }\n    instantiate(state, pos) {\n        let text = [], lineStart = [pos];\n        let lineObj = state.doc.lineAt(pos), baseIndent = /^\\s*/.exec(lineObj.text)[0];\n        for (let line of this.lines) {\n            if (text.length) {\n                let indent = baseIndent, tabs = /^\\t*/.exec(line)[0].length;\n                for (let i = 0; i < tabs; i++)\n                    indent += state.facet(indentUnit);\n                lineStart.push(pos + indent.length - tabs);\n                line = indent + line.slice(tabs);\n            }\n            text.push(line);\n            pos += line.length + 1;\n        }\n        let ranges = this.fieldPositions.map(pos => new FieldRange(pos.field, lineStart[pos.line] + pos.from, lineStart[pos.line] + pos.to));\n        return { text, ranges };\n    }\n    static parse(template) {\n        let fields = [];\n        let lines = [], positions = [], m;\n        for (let line of template.split(/\\r\\n?|\\n/)) {\n            while (m = /[#$]\\{(?:(\\d+)(?::([^}]*))?|([^}]*))\\}/.exec(line)) {\n                let seq = m[1] ? +m[1] : null, name = m[2] || m[3] || \"\", found = -1;\n                for (let i = 0; i < fields.length; i++) {\n                    if (seq != null ? fields[i].seq == seq : name ? fields[i].name == name : false)\n                        found = i;\n                }\n                if (found < 0) {\n                    let i = 0;\n                    while (i < fields.length && (seq == null || (fields[i].seq != null && fields[i].seq < seq)))\n                        i++;\n                    fields.splice(i, 0, { seq, name });\n                    found = i;\n                    for (let pos of positions)\n                        if (pos.field >= found)\n                            pos.field++;\n                }\n                positions.push(new FieldPos(found, lines.length, m.index, m.index + name.length));\n                line = line.slice(0, m.index) + name + line.slice(m.index + m[0].length);\n            }\n            for (let esc; esc = /\\\\([{}])/.exec(line);) {\n                line = line.slice(0, esc.index) + esc[1] + line.slice(esc.index + esc[0].length);\n                for (let pos of positions)\n                    if (pos.line == lines.length && pos.from > esc.index) {\n                        pos.from--;\n                        pos.to--;\n                    }\n            }\n            lines.push(line);\n        }\n        return new Snippet(lines, positions);\n    }\n}\nlet fieldMarker = /*@__PURE__*/Decoration.widget({ widget: /*@__PURE__*/new class extends WidgetType {\n        toDOM() {\n            let span = document.createElement(\"span\");\n            span.className = \"cm-snippetFieldPosition\";\n            return span;\n        }\n        ignoreEvent() { return false; }\n    } });\nlet fieldRange = /*@__PURE__*/Decoration.mark({ class: \"cm-snippetField\" });\nclass ActiveSnippet {\n    constructor(ranges, active) {\n        this.ranges = ranges;\n        this.active = active;\n        this.deco = Decoration.set(ranges.map(r => (r.from == r.to ? fieldMarker : fieldRange).range(r.from, r.to)));\n    }\n    map(changes) {\n        let ranges = [];\n        for (let r of this.ranges) {\n            let mapped = r.map(changes);\n            if (!mapped)\n                return null;\n            ranges.push(mapped);\n        }\n        return new ActiveSnippet(ranges, this.active);\n    }\n    selectionInsideField(sel) {\n        return sel.ranges.every(range => this.ranges.some(r => r.field == this.active && r.from <= range.from && r.to >= range.to));\n    }\n}\nconst setActive = /*@__PURE__*/StateEffect.define({\n    map(value, changes) { return value && value.map(changes); }\n});\nconst moveToField = /*@__PURE__*/StateEffect.define();\nconst snippetState = /*@__PURE__*/StateField.define({\n    create() { return null; },\n    update(value, tr) {\n        for (let effect of tr.effects) {\n            if (effect.is(setActive))\n                return effect.value;\n            if (effect.is(moveToField) && value)\n                return new ActiveSnippet(value.ranges, effect.value);\n        }\n        if (value && tr.docChanged)\n            value = value.map(tr.changes);\n        if (value && tr.selection && !value.selectionInsideField(tr.selection))\n            value = null;\n        return value;\n    },\n    provide: f => EditorView.decorations.from(f, val => val ? val.deco : Decoration.none)\n});\nfunction fieldSelection(ranges, field) {\n    return EditorSelection.create(ranges.filter(r => r.field == field).map(r => EditorSelection.range(r.from, r.to)));\n}\n/**\nConvert a snippet template to a function that can\n[apply](https://codemirror.net/6/docs/ref/#autocomplete.Completion.apply) it. Snippets are written\nusing syntax like this:\n\n    \"for (let ${index} = 0; ${index} < ${end}; ${index}++) {\\n\\t${}\\n}\"\n\nEach `${}` placeholder (you may also use `#{}`) indicates a field\nthat the user can fill in. Its name, if any, will be the default\ncontent for the field.\n\nWhen the snippet is activated by calling the returned function,\nthe code is inserted at the given position. Newlines in the\ntemplate are indented by the indentation of the start line, plus\none [indent unit](https://codemirror.net/6/docs/ref/#language.indentUnit) per tab character after\nthe newline.\n\nOn activation, (all instances of) the first field are selected.\nThe user can move between fields with Tab and Shift-Tab as long as\nthe fields are active. Moving to the last field or moving the\ncursor out of the current field deactivates the fields.\n\nThe order of fields defaults to textual order, but you can add\nnumbers to placeholders (`${1}` or `${1:defaultText}`) to provide\na custom order.\n\nTo include a literal `{` or `}` in your template, put a backslash\nin front of it. This will be removed and the brace will not be\ninterpreted as indicating a placeholder.\n*/\nfunction snippet(template) {\n    let snippet = Snippet.parse(template);\n    return (editor, completion, from, to) => {\n        let { text, ranges } = snippet.instantiate(editor.state, from);\n        let spec = {\n            changes: { from, to, insert: Text.of(text) },\n            scrollIntoView: true,\n            annotations: completion ? pickedCompletion.of(completion) : undefined\n        };\n        if (ranges.length)\n            spec.selection = fieldSelection(ranges, 0);\n        if (ranges.length > 1) {\n            let active = new ActiveSnippet(ranges, 0);\n            let effects = spec.effects = [setActive.of(active)];\n            if (editor.state.field(snippetState, false) === undefined)\n                effects.push(StateEffect.appendConfig.of([snippetState, addSnippetKeymap, snippetPointerHandler, baseTheme]));\n        }\n        editor.dispatch(editor.state.update(spec));\n    };\n}\nfunction moveField(dir) {\n    return ({ state, dispatch }) => {\n        let active = state.field(snippetState, false);\n        if (!active || dir < 0 && active.active == 0)\n            return false;\n        let next = active.active + dir, last = dir > 0 && !active.ranges.some(r => r.field == next + dir);\n        dispatch(state.update({\n            selection: fieldSelection(active.ranges, next),\n            effects: setActive.of(last ? null : new ActiveSnippet(active.ranges, next))\n        }));\n        return true;\n    };\n}\n/**\nA command that clears the active snippet, if any.\n*/\nconst clearSnippet = ({ state, dispatch }) => {\n    let active = state.field(snippetState, false);\n    if (!active)\n        return false;\n    dispatch(state.update({ effects: setActive.of(null) }));\n    return true;\n};\n/**\nMove to the next snippet field, if available.\n*/\nconst nextSnippetField = /*@__PURE__*/moveField(1);\n/**\nMove to the previous snippet field, if available.\n*/\nconst prevSnippetField = /*@__PURE__*/moveField(-1);\n/**\nCheck if there is an active snippet with a next field for\n`nextSnippetField` to move to.\n*/\nfunction hasNextSnippetField(state) {\n    let active = state.field(snippetState, false);\n    return !!(active && active.ranges.some(r => r.field == active.active + 1));\n}\n/**\nReturns true if there is an active snippet and a previous field\nfor `prevSnippetField` to move to.\n*/\nfunction hasPrevSnippetField(state) {\n    let active = state.field(snippetState, false);\n    return !!(active && active.active > 0);\n}\nconst defaultSnippetKeymap = [\n    { key: \"Tab\", run: nextSnippetField, shift: prevSnippetField },\n    { key: \"Escape\", run: clearSnippet }\n];\n/**\nA facet that can be used to configure the key bindings used by\nsnippets. The default binds Tab to\n[`nextSnippetField`](https://codemirror.net/6/docs/ref/#autocomplete.nextSnippetField), Shift-Tab to\n[`prevSnippetField`](https://codemirror.net/6/docs/ref/#autocomplete.prevSnippetField), and Escape\nto [`clearSnippet`](https://codemirror.net/6/docs/ref/#autocomplete.clearSnippet).\n*/\nconst snippetKeymap = /*@__PURE__*/Facet.define({\n    combine(maps) { return maps.length ? maps[0] : defaultSnippetKeymap; }\n});\nconst addSnippetKeymap = /*@__PURE__*/Prec.highest(/*@__PURE__*/keymap.compute([snippetKeymap], state => state.facet(snippetKeymap)));\n/**\nCreate a completion from a snippet. Returns an object with the\nproperties from `completion`, plus an `apply` function that\napplies the snippet.\n*/\nfunction snippetCompletion(template, completion) {\n    return Object.assign(Object.assign({}, completion), { apply: snippet(template) });\n}\nconst snippetPointerHandler = /*@__PURE__*/EditorView.domEventHandlers({\n    mousedown(event, view) {\n        let active = view.state.field(snippetState, false), pos;\n        if (!active || (pos = view.posAtCoords({ x: event.clientX, y: event.clientY })) == null)\n            return false;\n        let match = active.ranges.find(r => r.from <= pos && r.to >= pos);\n        if (!match || match.field == active.active)\n            return false;\n        view.dispatch({\n            selection: fieldSelection(active.ranges, match.field),\n            effects: setActive.of(active.ranges.some(r => r.field > match.field) ? new ActiveSnippet(active.ranges, match.field) : null)\n        });\n        return true;\n    }\n});\n\nfunction wordRE(wordChars) {\n    let escaped = wordChars.replace(/[\\\\[.+*?(){|^$]/g, \"\\\\$&\");\n    try {\n        return new RegExp(`[\\\\p{Alphabetic}\\\\p{Number}_${escaped}]+`, \"ug\");\n    }\n    catch (_a) {\n        return new RegExp(`[\\w${escaped}]`, \"g\");\n    }\n}\nfunction mapRE(re, f) {\n    return new RegExp(f(re.source), re.unicode ? \"u\" : \"\");\n}\nconst wordCaches = /*@__PURE__*/Object.create(null);\nfunction wordCache(wordChars) {\n    return wordCaches[wordChars] || (wordCaches[wordChars] = new WeakMap);\n}\nfunction storeWords(doc, wordRE, result, seen, ignoreAt) {\n    for (let lines = doc.iterLines(), pos = 0; !lines.next().done;) {\n        let { value } = lines, m;\n        wordRE.lastIndex = 0;\n        while (m = wordRE.exec(value)) {\n            if (!seen[m[0]] && pos + m.index != ignoreAt) {\n                result.push({ type: \"text\", label: m[0] });\n                seen[m[0]] = true;\n                if (result.length >= 2000 /* C.MaxList */)\n                    return;\n            }\n        }\n        pos += value.length + 1;\n    }\n}\nfunction collectWords(doc, cache, wordRE, to, ignoreAt) {\n    let big = doc.length >= 1000 /* C.MinCacheLen */;\n    let cached = big && cache.get(doc);\n    if (cached)\n        return cached;\n    let result = [], seen = Object.create(null);\n    if (doc.children) {\n        let pos = 0;\n        for (let ch of doc.children) {\n            if (ch.length >= 1000 /* C.MinCacheLen */) {\n                for (let c of collectWords(ch, cache, wordRE, to - pos, ignoreAt - pos)) {\n                    if (!seen[c.label]) {\n                        seen[c.label] = true;\n                        result.push(c);\n                    }\n                }\n            }\n            else {\n                storeWords(ch, wordRE, result, seen, ignoreAt - pos);\n            }\n            pos += ch.length + 1;\n        }\n    }\n    else {\n        storeWords(doc, wordRE, result, seen, ignoreAt);\n    }\n    if (big && result.length < 2000 /* C.MaxList */)\n        cache.set(doc, result);\n    return result;\n}\n/**\nA completion source that will scan the document for words (using a\n[character categorizer](https://codemirror.net/6/docs/ref/#state.EditorState.charCategorizer)), and\nreturn those as completions.\n*/\nconst completeAnyWord = context => {\n    let wordChars = context.state.languageDataAt(\"wordChars\", context.pos).join(\"\");\n    let re = wordRE(wordChars);\n    let token = context.matchBefore(mapRE(re, s => s + \"$\"));\n    if (!token && !context.explicit)\n        return null;\n    let from = token ? token.from : context.pos;\n    let options = collectWords(context.state.doc, wordCache(wordChars), re, 50000 /* C.Range */, from);\n    return { from, options, validFor: mapRE(re, s => \"^\" + s) };\n};\n\nconst defaults = {\n    brackets: [\"(\", \"[\", \"{\", \"'\", '\"'],\n    before: \")]}:;>\",\n    stringPrefixes: []\n};\nconst closeBracketEffect = /*@__PURE__*/StateEffect.define({\n    map(value, mapping) {\n        let mapped = mapping.mapPos(value, -1, MapMode.TrackAfter);\n        return mapped == null ? undefined : mapped;\n    }\n});\nconst closedBracket = /*@__PURE__*/new class extends RangeValue {\n};\nclosedBracket.startSide = 1;\nclosedBracket.endSide = -1;\nconst bracketState = /*@__PURE__*/StateField.define({\n    create() { return RangeSet.empty; },\n    update(value, tr) {\n        if (tr.selection) {\n            let lineStart = tr.state.doc.lineAt(tr.selection.main.head).from;\n            let prevLineStart = tr.startState.doc.lineAt(tr.startState.selection.main.head).from;\n            if (lineStart != tr.changes.mapPos(prevLineStart, -1))\n                value = RangeSet.empty;\n        }\n        value = value.map(tr.changes);\n        for (let effect of tr.effects)\n            if (effect.is(closeBracketEffect))\n                value = value.update({ add: [closedBracket.range(effect.value, effect.value + 1)] });\n        return value;\n    }\n});\n/**\nExtension to enable bracket-closing behavior. When a closeable\nbracket is typed, its closing bracket is immediately inserted\nafter the cursor. When closing a bracket directly in front of a\nclosing bracket inserted by the extension, the cursor moves over\nthat bracket.\n*/\nfunction closeBrackets() {\n    return [inputHandler, bracketState];\n}\nconst definedClosing = \"()[]{}<>\";\nfunction closing(ch) {\n    for (let i = 0; i < definedClosing.length; i += 2)\n        if (definedClosing.charCodeAt(i) == ch)\n            return definedClosing.charAt(i + 1);\n    return fromCodePoint(ch < 128 ? ch : ch + 1);\n}\nfunction config(state, pos) {\n    return state.languageDataAt(\"closeBrackets\", pos)[0] || defaults;\n}\nconst android = typeof navigator == \"object\" && /*@__PURE__*//Android\\b/.test(navigator.userAgent);\nconst inputHandler = /*@__PURE__*/EditorView.inputHandler.of((view, from, to, insert) => {\n    if ((android ? view.composing : view.compositionStarted) || view.state.readOnly)\n        return false;\n    let sel = view.state.selection.main;\n    if (insert.length > 2 || insert.length == 2 && codePointSize(codePointAt(insert, 0)) == 1 ||\n        from != sel.from || to != sel.to)\n        return false;\n    let tr = insertBracket(view.state, insert);\n    if (!tr)\n        return false;\n    view.dispatch(tr);\n    return true;\n});\n/**\nCommand that implements deleting a pair of matching brackets when\nthe cursor is between them.\n*/\nconst deleteBracketPair = ({ state, dispatch }) => {\n    if (state.readOnly)\n        return false;\n    let conf = config(state, state.selection.main.head);\n    let tokens = conf.brackets || defaults.brackets;\n    let dont = null, changes = state.changeByRange(range => {\n        if (range.empty) {\n            let before = prevChar(state.doc, range.head);\n            for (let token of tokens) {\n                if (token == before && nextChar(state.doc, range.head) == closing(codePointAt(token, 0)))\n                    return { changes: { from: range.head - token.length, to: range.head + token.length },\n                        range: EditorSelection.cursor(range.head - token.length) };\n            }\n        }\n        return { range: dont = range };\n    });\n    if (!dont)\n        dispatch(state.update(changes, { scrollIntoView: true, userEvent: \"delete.backward\" }));\n    return !dont;\n};\n/**\nClose-brackets related key bindings. Binds Backspace to\n[`deleteBracketPair`](https://codemirror.net/6/docs/ref/#autocomplete.deleteBracketPair).\n*/\nconst closeBracketsKeymap = [\n    { key: \"Backspace\", run: deleteBracketPair }\n];\n/**\nImplements the extension's behavior on text insertion. If the\ngiven string counts as a bracket in the language around the\nselection, and replacing the selection with it requires custom\nbehavior (inserting a closing version or skipping past a\npreviously-closed bracket), this function returns a transaction\nrepresenting that custom behavior. (You only need this if you want\nto programmatically insert brackets—the\n[`closeBrackets`](https://codemirror.net/6/docs/ref/#autocomplete.closeBrackets) extension will\ntake care of running this for user input.)\n*/\nfunction insertBracket(state, bracket) {\n    let conf = config(state, state.selection.main.head);\n    let tokens = conf.brackets || defaults.brackets;\n    for (let tok of tokens) {\n        let closed = closing(codePointAt(tok, 0));\n        if (bracket == tok)\n            return closed == tok ? handleSame(state, tok, tokens.indexOf(tok + tok + tok) > -1, conf)\n                : handleOpen(state, tok, closed, conf.before || defaults.before);\n        if (bracket == closed && closedBracketAt(state, state.selection.main.from))\n            return handleClose(state, tok, closed);\n    }\n    return null;\n}\nfunction closedBracketAt(state, pos) {\n    let found = false;\n    state.field(bracketState).between(0, state.doc.length, from => {\n        if (from == pos)\n            found = true;\n    });\n    return found;\n}\nfunction nextChar(doc, pos) {\n    let next = doc.sliceString(pos, pos + 2);\n    return next.slice(0, codePointSize(codePointAt(next, 0)));\n}\nfunction prevChar(doc, pos) {\n    let prev = doc.sliceString(pos - 2, pos);\n    return codePointSize(codePointAt(prev, 0)) == prev.length ? prev : prev.slice(1);\n}\nfunction handleOpen(state, open, close, closeBefore) {\n    let dont = null, changes = state.changeByRange(range => {\n        if (!range.empty)\n            return { changes: [{ insert: open, from: range.from }, { insert: close, from: range.to }],\n                effects: closeBracketEffect.of(range.to + open.length),\n                range: EditorSelection.range(range.anchor + open.length, range.head + open.length) };\n        let next = nextChar(state.doc, range.head);\n        if (!next || /\\s/.test(next) || closeBefore.indexOf(next) > -1)\n            return { changes: { insert: open + close, from: range.head },\n                effects: closeBracketEffect.of(range.head + open.length),\n                range: EditorSelection.cursor(range.head + open.length) };\n        return { range: dont = range };\n    });\n    return dont ? null : state.update(changes, {\n        scrollIntoView: true,\n        userEvent: \"input.type\"\n    });\n}\nfunction handleClose(state, _open, close) {\n    let dont = null, changes = state.changeByRange(range => {\n        if (range.empty && nextChar(state.doc, range.head) == close)\n            return { changes: { from: range.head, to: range.head + close.length, insert: close },\n                range: EditorSelection.cursor(range.head + close.length) };\n        return dont = { range };\n    });\n    return dont ? null : state.update(changes, {\n        scrollIntoView: true,\n        userEvent: \"input.type\"\n    });\n}\n// Handles cases where the open and close token are the same, and\n// possibly triple quotes (as in `\"\"\"abc\"\"\"`-style quoting).\nfunction handleSame(state, token, allowTriple, config) {\n    let stringPrefixes = config.stringPrefixes || defaults.stringPrefixes;\n    let dont = null, changes = state.changeByRange(range => {\n        if (!range.empty)\n            return { changes: [{ insert: token, from: range.from }, { insert: token, from: range.to }],\n                effects: closeBracketEffect.of(range.to + token.length),\n                range: EditorSelection.range(range.anchor + token.length, range.head + token.length) };\n        let pos = range.head, next = nextChar(state.doc, pos), start;\n        if (next == token) {\n            if (nodeStart(state, pos)) {\n                return { changes: { insert: token + token, from: pos },\n                    effects: closeBracketEffect.of(pos + token.length),\n                    range: EditorSelection.cursor(pos + token.length) };\n            }\n            else if (closedBracketAt(state, pos)) {\n                let isTriple = allowTriple && state.sliceDoc(pos, pos + token.length * 3) == token + token + token;\n                let content = isTriple ? token + token + token : token;\n                return { changes: { from: pos, to: pos + content.length, insert: content },\n                    range: EditorSelection.cursor(pos + content.length) };\n            }\n        }\n        else if (allowTriple && state.sliceDoc(pos - 2 * token.length, pos) == token + token &&\n            (start = canStartStringAt(state, pos - 2 * token.length, stringPrefixes)) > -1 &&\n            nodeStart(state, start)) {\n            return { changes: { insert: token + token + token + token, from: pos },\n                effects: closeBracketEffect.of(pos + token.length),\n                range: EditorSelection.cursor(pos + token.length) };\n        }\n        else if (state.charCategorizer(pos)(next) != CharCategory.Word) {\n            if (canStartStringAt(state, pos, stringPrefixes) > -1 && !probablyInString(state, pos, token, stringPrefixes))\n                return { changes: { insert: token + token, from: pos },\n                    effects: closeBracketEffect.of(pos + token.length),\n                    range: EditorSelection.cursor(pos + token.length) };\n        }\n        return { range: dont = range };\n    });\n    return dont ? null : state.update(changes, {\n        scrollIntoView: true,\n        userEvent: \"input.type\"\n    });\n}\nfunction nodeStart(state, pos) {\n    let tree = syntaxTree(state).resolveInner(pos + 1);\n    return tree.parent && tree.from == pos;\n}\nfunction probablyInString(state, pos, quoteToken, prefixes) {\n    let node = syntaxTree(state).resolveInner(pos, -1);\n    let maxPrefix = prefixes.reduce((m, p) => Math.max(m, p.length), 0);\n    for (let i = 0; i < 5; i++) {\n        let start = state.sliceDoc(node.from, Math.min(node.to, node.from + quoteToken.length + maxPrefix));\n        let quotePos = start.indexOf(quoteToken);\n        if (!quotePos || quotePos > -1 && prefixes.indexOf(start.slice(0, quotePos)) > -1) {\n            let first = node.firstChild;\n            while (first && first.from == node.from && first.to - first.from > quoteToken.length + quotePos) {\n                if (state.sliceDoc(first.to - quoteToken.length, first.to) == quoteToken)\n                    return false;\n                first = first.firstChild;\n            }\n            return true;\n        }\n        let parent = node.to == pos && node.parent;\n        if (!parent)\n            break;\n        node = parent;\n    }\n    return false;\n}\nfunction canStartStringAt(state, pos, prefixes) {\n    let charCat = state.charCategorizer(pos);\n    if (charCat(state.sliceDoc(pos - 1, pos)) != CharCategory.Word)\n        return pos;\n    for (let prefix of prefixes) {\n        let start = pos - prefix.length;\n        if (state.sliceDoc(start, pos) == prefix && charCat(state.sliceDoc(start - 1, start)) != CharCategory.Word)\n            return start;\n    }\n    return -1;\n}\n\n/**\nReturns an extension that enables autocompletion.\n*/\nfunction autocompletion(config = {}) {\n    return [\n        completionState,\n        completionConfig.of(config),\n        completionPlugin,\n        completionKeymapExt,\n        baseTheme\n    ];\n}\n/**\nBasic keybindings for autocompletion.\n\n - Ctrl-Space: [`startCompletion`](https://codemirror.net/6/docs/ref/#autocomplete.startCompletion)\n - Escape: [`closeCompletion`](https://codemirror.net/6/docs/ref/#autocomplete.closeCompletion)\n - ArrowDown: [`moveCompletionSelection`](https://codemirror.net/6/docs/ref/#autocomplete.moveCompletionSelection)`(true)`\n - ArrowUp: [`moveCompletionSelection`](https://codemirror.net/6/docs/ref/#autocomplete.moveCompletionSelection)`(false)`\n - PageDown: [`moveCompletionSelection`](https://codemirror.net/6/docs/ref/#autocomplete.moveCompletionSelection)`(true, \"page\")`\n - PageDown: [`moveCompletionSelection`](https://codemirror.net/6/docs/ref/#autocomplete.moveCompletionSelection)`(true, \"page\")`\n - Enter: [`acceptCompletion`](https://codemirror.net/6/docs/ref/#autocomplete.acceptCompletion)\n*/\nconst completionKeymap = [\n    { key: \"Ctrl-Space\", run: startCompletion },\n    { key: \"Escape\", run: closeCompletion },\n    { key: \"ArrowDown\", run: /*@__PURE__*/moveCompletionSelection(true) },\n    { key: \"ArrowUp\", run: /*@__PURE__*/moveCompletionSelection(false) },\n    { key: \"PageDown\", run: /*@__PURE__*/moveCompletionSelection(true, \"page\") },\n    { key: \"PageUp\", run: /*@__PURE__*/moveCompletionSelection(false, \"page\") },\n    { key: \"Enter\", run: acceptCompletion }\n];\nconst completionKeymapExt = /*@__PURE__*/Prec.highest(/*@__PURE__*/keymap.computeN([completionConfig], state => state.facet(completionConfig).defaultKeymap ? [completionKeymap] : []));\n/**\nGet the current completion status. When completions are available,\nthis will return `\"active\"`. When completions are pending (in the\nprocess of being queried), this returns `\"pending\"`. Otherwise, it\nreturns `null`.\n*/\nfunction completionStatus(state) {\n    let cState = state.field(completionState, false);\n    return cState && cState.active.some(a => a.state == 1 /* State.Pending */) ? \"pending\"\n        : cState && cState.active.some(a => a.state != 0 /* State.Inactive */) ? \"active\" : null;\n}\nconst completionArrayCache = /*@__PURE__*/new WeakMap;\n/**\nReturns the available completions as an array.\n*/\nfunction currentCompletions(state) {\n    var _a;\n    let open = (_a = state.field(completionState, false)) === null || _a === void 0 ? void 0 : _a.open;\n    if (!open || open.disabled)\n        return [];\n    let completions = completionArrayCache.get(open.options);\n    if (!completions)\n        completionArrayCache.set(open.options, completions = open.options.map(o => o.completion));\n    return completions;\n}\n/**\nReturn the currently selected completion, if any.\n*/\nfunction selectedCompletion(state) {\n    var _a;\n    let open = (_a = state.field(completionState, false)) === null || _a === void 0 ? void 0 : _a.open;\n    return open && !open.disabled && open.selected >= 0 ? open.options[open.selected].completion : null;\n}\n/**\nReturns the currently selected position in the active completion\nlist, or null if no completions are active.\n*/\nfunction selectedCompletionIndex(state) {\n    var _a;\n    let open = (_a = state.field(completionState, false)) === null || _a === void 0 ? void 0 : _a.open;\n    return open && !open.disabled && open.selected >= 0 ? open.selected : null;\n}\n/**\nCreate an effect that can be attached to a transaction to change\nthe currently selected completion.\n*/\nfunction setSelectedCompletion(index) {\n    return setSelectedEffect.of(index);\n}\n\nexport { CompletionContext, acceptCompletion, autocompletion, clearSnippet, closeBrackets, closeBracketsKeymap, closeCompletion, completeAnyWord, completeFromList, completionKeymap, completionStatus, currentCompletions, deleteBracketPair, hasNextSnippetField, hasPrevSnippetField, ifIn, ifNotIn, insertBracket, insertCompletionText, moveCompletionSelection, nextSnippetField, pickedCompletion, prevSnippetField, selectedCompletion, selectedCompletionIndex, setSelectedCompletion, snippet, snippetCompletion, snippetKeymap, startCompletion };\n"],"mappings":";;;;;;;AAAA,SAASA,UAAU,EAAEC,WAAW,EAAEC,eAAe,EAAEC,WAAW,EAAEC,aAAa,EAAEC,aAAa,EAAEC,KAAK,EAAEC,aAAa,EAAEC,UAAU,EAAEC,IAAI,EAAEC,IAAI,EAAEC,OAAO,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,YAAY,QAAQ,mBAAmB;AAClN,SAASC,SAAS,EAAEC,UAAU,EAAEC,YAAY,EAAEC,UAAU,EAAEC,WAAW,EAAEC,UAAU,EAAEC,UAAU,EAAEC,UAAU,EAAEC,MAAM,QAAQ,kBAAkB;AAC3I,SAASC,UAAU,EAAEC,UAAU,QAAQ,sBAAsB;;AAE7D;AACA;AACA;AAFA,IAGMC,iBAAiB;EACnB;AACJ;AACA;AACA;AACA;EACI,SAAAA;EACA;AACJ;AACA;EACIC,KAAK;EACL;AACJ;AACA;EACIC,GAAG;EACH;AACJ;AACA;AACA;AACA;AACA;EACIC,QAAQ,EAAE;IAAAC,eAAA,OAAAJ,iBAAA;IACN,IAAI,CAACC,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,GAAG,GAAGA,GAAG;IACd,IAAI,CAACC,QAAQ,GAAGA,QAAQ;IACxB;AACR;AACA;IACQ,IAAI,CAACE,cAAc,GAAG,EAAE;EAC5B;EACA;AACJ;AACA;AACA;EAHIC,YAAA,CAAAN,iBAAA;IAAAO,GAAA;IAAAC,KAAA,EAIA,SAAAC,YAAYC,KAAK,EAAE;MACf,IAAIC,KAAK,GAAGb,UAAU,CAAC,IAAI,CAACG,KAAK,CAAC,CAACW,YAAY,CAAC,IAAI,CAACV,GAAG,EAAE,CAAC,CAAC,CAAC;MAC7D,OAAOS,KAAK,IAAID,KAAK,CAACG,OAAO,CAACF,KAAK,CAACG,IAAI,CAAC,GAAG,CAAC,EACzCH,KAAK,GAAGA,KAAK,CAACI,MAAM;MACxB,OAAOJ,KAAK,GAAG;QAAEK,IAAI,EAAEL,KAAK,CAACK,IAAI;QAAEC,EAAE,EAAE,IAAI,CAACf,GAAG;QAC3CgB,IAAI,EAAE,IAAI,CAACjB,KAAK,CAACkB,QAAQ,CAACR,KAAK,CAACK,IAAI,EAAE,IAAI,CAACd,GAAG,CAAC;QAC/CkB,IAAI,EAAET,KAAK,CAACS;MAAK,CAAC,GAAG,IAAI;IACjC;IACA;AACJ;AACA;AACA;EAHI;IAAAb,GAAA;IAAAC,KAAA,EAIA,SAAAa,YAAYC,IAAI,EAAE;MACd,IAAIC,IAAI,GAAG,IAAI,CAACtB,KAAK,CAACuB,GAAG,CAACC,MAAM,CAAC,IAAI,CAACvB,GAAG,CAAC;MAC1C,IAAIwB,KAAK,GAAGC,IAAI,CAACC,GAAG,CAACL,IAAI,CAACP,IAAI,EAAE,IAAI,CAACd,GAAG,GAAG,GAAG,CAAC;MAC/C,IAAI2B,GAAG,GAAGN,IAAI,CAACL,IAAI,CAACY,KAAK,CAACJ,KAAK,GAAGH,IAAI,CAACP,IAAI,EAAE,IAAI,CAACd,GAAG,GAAGqB,IAAI,CAACP,IAAI,CAAC;MAClE,IAAIe,KAAK,GAAGF,GAAG,CAACG,MAAM,CAACC,YAAY,CAACX,IAAI,EAAE,KAAK,CAAC,CAAC;MACjD,OAAOS,KAAK,GAAG,CAAC,GAAG,IAAI,GAAG;QAAEf,IAAI,EAAEU,KAAK,GAAGK,KAAK;QAAEd,EAAE,EAAE,IAAI,CAACf,GAAG;QAAEgB,IAAI,EAAEW,GAAG,CAACC,KAAK,CAACC,KAAK;MAAE,CAAC;IAC3F;IACA;AACJ;AACA;AACA;EAHI;IAAAxB,GAAA;IAAA2B,GAAA,EAIA,SAAAA,IAAA,EAAc;MAAE,OAAO,IAAI,CAAC7B,cAAc,IAAI,IAAI;IAAE;IACpD;AACJ;AACA;AACA;AACA;EAJI;IAAAE,GAAA;IAAAC,KAAA,EAKA,SAAA2B,iBAAiBf,IAAI,EAAEgB,QAAQ,EAAE;MAC7B,IAAIhB,IAAI,IAAI,OAAO,IAAI,IAAI,CAACf,cAAc,EACtC,IAAI,CAACA,cAAc,CAACgC,IAAI,CAACD,QAAQ,CAAC;IAC1C;EAAC;EAAA,OAAApC,iBAAA;AAAA;AAEL,SAASsC,KAAKA,CAACC,KAAK,EAAE;EAClB,IAAIC,IAAI,GAAGC,MAAM,CAACC,IAAI,CAACH,KAAK,CAAC,CAACI,IAAI,CAAC,EAAE,CAAC;EACtC,IAAIC,KAAK,GAAG,IAAI,CAACC,IAAI,CAACL,IAAI,CAAC;EAC3B,IAAII,KAAK,EACLJ,IAAI,GAAGA,IAAI,CAACM,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;EAClC,WAAAC,MAAA,CAAWH,KAAK,GAAG,KAAK,GAAG,EAAE,EAAAG,MAAA,CAAGP,IAAI,CAACM,OAAO,CAAC,UAAU,EAAE,MAAM,CAAC;AACpE;AACA,SAASE,WAAWA,CAACC,OAAO,EAAE;EAC1B,IAAIC,KAAK,GAAGT,MAAM,CAACU,MAAM,CAAC,IAAI,CAAC;IAAEC,IAAI,GAAGX,MAAM,CAACU,MAAM,CAAC,IAAI,CAAC;EAAC,IAAAE,SAAA,GAAAC,0BAAA,CACtCL,OAAO;IAAAM,KAAA;EAAA;IAA7B,KAAAF,SAAA,CAAAG,CAAA,MAAAD,KAAA,GAAAF,SAAA,CAAAI,CAAA,IAAAC,IAAA,GAA+B;MAAA,IAApBC,KAAK,GAAAJ,KAAA,CAAA/C,KAAA,CAALmD,KAAK;MACZT,KAAK,CAACS,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI;MACtB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,KAAK,CAACE,MAAM,EAAED,CAAC,EAAE,EACjCR,IAAI,CAACO,KAAK,CAACC,CAAC,CAAC,CAAC,GAAG,IAAI;IAC7B;EAAC,SAAAE,GAAA;IAAAT,SAAA,CAAAU,CAAA,CAAAD,GAAA;EAAA;IAAAT,SAAA,CAAAW,CAAA;EAAA;EACD,IAAIC,MAAM,GAAG3B,KAAK,CAACY,KAAK,CAAC,GAAGZ,KAAK,CAACc,IAAI,CAAC,GAAG,IAAI;EAC9C,OAAO,CAAC,IAAIc,MAAM,CAAC,GAAG,GAAGD,MAAM,CAAC,EAAE,IAAIC,MAAM,CAACD,MAAM,CAAC,CAAC;AACzD;AACA;AACA;AACA;AACA;AACA,SAASE,gBAAgBA,CAACC,IAAI,EAAE;EAC5B,IAAInB,OAAO,GAAGmB,IAAI,CAACC,GAAG,CAAC,UAAAC,CAAC;IAAA,OAAI,OAAOA,CAAC,IAAI,QAAQ,GAAG;MAAEX,KAAK,EAAEW;IAAE,CAAC,GAAGA,CAAC;EAAA,EAAC;EACpE,IAAAC,IAAA,GAAwBtB,OAAO,CAACuB,KAAK,CAAC,UAAAF,CAAC;MAAA,OAAI,OAAO,CAACzB,IAAI,CAACyB,CAAC,CAACX,KAAK,CAAC;IAAA,EAAC,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC,GAAGX,WAAW,CAACC,OAAO,CAAC;IAAAwB,KAAA,GAAAC,cAAA,CAAAH,IAAA;IAAtGI,QAAQ,GAAAF,KAAA;IAAEG,KAAK,GAAAH,KAAA;EACpB,OAAO,UAACI,OAAO,EAAK;IAChB,IAAIlE,KAAK,GAAGkE,OAAO,CAACxD,WAAW,CAACuD,KAAK,CAAC;IACtC,OAAOjE,KAAK,IAAIkE,OAAO,CAAC1E,QAAQ,GAAG;MAAEa,IAAI,EAAEL,KAAK,GAAGA,KAAK,CAACK,IAAI,GAAG6D,OAAO,CAAC3E,GAAG;MAAE+C,OAAO,EAAPA,OAAO;MAAE0B,QAAQ,EAARA;IAAS,CAAC,GAAG,IAAI;EAC3G,CAAC;AACL;AACA;AACA;AACA;AACA;AACA,SAASG,IAAIA,CAACC,KAAK,EAAEd,MAAM,EAAE;EACzB,OAAO,UAACY,OAAO,EAAK;IAChB,KAAK,IAAI3E,GAAG,GAAGJ,UAAU,CAAC+E,OAAO,CAAC5E,KAAK,CAAC,CAACW,YAAY,CAACiE,OAAO,CAAC3E,GAAG,EAAE,CAAC,CAAC,CAAC,EAAEA,GAAG,EAAEA,GAAG,GAAGA,GAAG,CAACa,MAAM,EAAE;MAC3F,IAAIgE,KAAK,CAAClE,OAAO,CAACX,GAAG,CAACY,IAAI,CAAC,GAAG,CAAC,CAAC,EAC5B,OAAOmD,MAAM,CAACY,OAAO,CAAC;MAC1B,IAAI3E,GAAG,CAACkB,IAAI,CAAC4D,KAAK,EACd;IACR;IACA,OAAO,IAAI;EACf,CAAC;AACL;AACA;AACA;AACA;AACA;AACA,SAASC,OAAOA,CAACF,KAAK,EAAEd,MAAM,EAAE;EAC5B,OAAO,UAACY,OAAO,EAAK;IAChB,KAAK,IAAI3E,GAAG,GAAGJ,UAAU,CAAC+E,OAAO,CAAC5E,KAAK,CAAC,CAACW,YAAY,CAACiE,OAAO,CAAC3E,GAAG,EAAE,CAAC,CAAC,CAAC,EAAEA,GAAG,EAAEA,GAAG,GAAGA,GAAG,CAACa,MAAM,EAAE;MAC3F,IAAIgE,KAAK,CAAClE,OAAO,CAACX,GAAG,CAACY,IAAI,CAAC,GAAG,CAAC,CAAC,EAC5B,OAAO,IAAI;MACf,IAAIZ,GAAG,CAACkB,IAAI,CAAC4D,KAAK,EACd;IACR;IACA,OAAOf,MAAM,CAACY,OAAO,CAAC;EAC1B,CAAC;AACL;AAAC,IACKK,MAAM,gBAAA5E,YAAA,CACR,SAAA4E,OAAYC,UAAU,EAAElB,MAAM,EAAEW,KAAK,EAAEQ,KAAK,EAAE;EAAAhF,eAAA,OAAA8E,MAAA;EAC1C,IAAI,CAACC,UAAU,GAAGA,UAAU;EAC5B,IAAI,CAAClB,MAAM,GAAGA,MAAM;EACpB,IAAI,CAACW,KAAK,GAAGA,KAAK;EAClB,IAAI,CAACQ,KAAK,GAAGA,KAAK;AACtB,CAAC;AAEL,SAASC,GAAGA,CAACpF,KAAK,EAAE;EAAE,OAAOA,KAAK,CAACqF,SAAS,CAACC,IAAI,CAACvE,IAAI;AAAE;AACxD;AACA;AACA,SAASiB,YAAYA,CAACX,IAAI,EAAEI,KAAK,EAAE;EAC/B,IAAI8D,EAAE;EACN,IAAMvB,MAAM,GAAK3C,IAAI,CAAf2C,MAAM;EACZ,IAAIwB,QAAQ,GAAG/D,KAAK,IAAIuC,MAAM,CAAC,CAAC,CAAC,IAAI,GAAG;IAAEyB,MAAM,GAAGzB,MAAM,CAACA,MAAM,CAACJ,MAAM,GAAG,CAAC,CAAC,IAAI,GAAG;EACnF,IAAI,CAAC4B,QAAQ,IAAI,CAACC,MAAM,EACpB,OAAOpE,IAAI;EACf,OAAO,IAAI4C,MAAM,IAAAnB,MAAA,CAAI0C,QAAQ,GAAG,GAAG,GAAG,EAAE,SAAA1C,MAAA,CAAMkB,MAAM,OAAAlB,MAAA,CAAI2C,MAAM,GAAG,GAAG,GAAG,EAAE,GAAI,CAACF,EAAE,GAAGlE,IAAI,CAACqE,KAAK,MAAM,IAAI,IAAIH,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAIlE,IAAI,CAACsE,UAAU,GAAG,GAAG,GAAG,EAAG,CAAC;AACjK;AACA;AACA;AACA;AACA;AACA,IAAMC,gBAAgB,GAAG,aAAavH,UAAU,CAACwH,MAAM,CAAC,CAAC;AACzD;AACA;AACA;AACA;AACA;AACA,SAASC,oBAAoBA,CAAC9F,KAAK,EAAEiB,IAAI,EAAEF,IAAI,EAAEC,EAAE,EAAE;EAC7C,IAAEsE,IAAI,GAAKtF,KAAK,CAACqF,SAAS,CAAxBC,IAAI;IAAsBS,OAAO,GAAGhF,IAAI,GAAGuE,IAAI,CAACvE,IAAI;IAAEiF,KAAK,GAAGhF,EAAE,GAAGsE,IAAI,CAACvE,IAAI;EAClF,OAAOyB,MAAM,CAACyD,MAAM,CAACzD,MAAM,CAACyD,MAAM,CAAC,CAAC,CAAC,EAAEjG,KAAK,CAACkG,aAAa,CAAC,UAAAC,KAAK,EAAI;IAChE,IAAIA,KAAK,IAAIb,IAAI,IAAIvE,IAAI,IAAIC,EAAE,IAC3BhB,KAAK,CAACkB,QAAQ,CAACiF,KAAK,CAACpF,IAAI,GAAGgF,OAAO,EAAEI,KAAK,CAACpF,IAAI,GAAGiF,KAAK,CAAC,IAAIhG,KAAK,CAACkB,QAAQ,CAACH,IAAI,EAAEC,EAAE,CAAC,EACpF,OAAO;MAAEmF,KAAK,EAALA;IAAM,CAAC;IACpB,OAAO;MACHC,OAAO,EAAE;QAAErF,IAAI,EAAEoF,KAAK,CAACpF,IAAI,GAAGgF,OAAO;QAAE/E,EAAE,EAAEA,EAAE,IAAIsE,IAAI,CAACvE,IAAI,GAAGoF,KAAK,CAACnF,EAAE,GAAGmF,KAAK,CAACpF,IAAI,GAAGiF,KAAK;QAAEK,MAAM,EAAEpF;MAAK,CAAC;MAC1GkF,KAAK,EAAE5H,eAAe,CAAC+H,MAAM,CAACH,KAAK,CAACpF,IAAI,GAAGgF,OAAO,GAAG9E,IAAI,CAAC2C,MAAM;IACpE,CAAC;EACL,CAAC,CAAC,CAAC,EAAE;IAAE2C,SAAS,EAAE;EAAiB,CAAC,CAAC;AACzC;AACA,IAAMC,WAAW,GAAG,aAAa,IAAIC,OAAO,CAAC,CAAC;AAC9C,SAASC,QAAQA,CAAC1C,MAAM,EAAE;EACtB,IAAI,CAAC2C,KAAK,CAACC,OAAO,CAAC5C,MAAM,CAAC,EACtB,OAAOA,MAAM;EACjB,IAAI6C,KAAK,GAAGL,WAAW,CAACvE,GAAG,CAAC+B,MAAM,CAAC;EACnC,IAAI,CAAC6C,KAAK,EACNL,WAAW,CAACM,GAAG,CAAC9C,MAAM,EAAE6C,KAAK,GAAG3C,gBAAgB,CAACF,MAAM,CAAC,CAAC;EAC7D,OAAO6C,KAAK;AAChB;AACA,IAAME,qBAAqB,GAAG,aAAazI,WAAW,CAACuH,MAAM,CAAC,CAAC;AAC/D,IAAMmB,qBAAqB,GAAG,aAAa1I,WAAW,CAACuH,MAAM,CAAC,CAAC;;AAE/D;AACA;AACA;AAAA,IACMoB,YAAY;EACd,SAAAA,aAAYC,OAAO,EAAE;IAAA/G,eAAA,OAAA8G,YAAA;IACjB,IAAI,CAACC,OAAO,GAAGA,OAAO;IACtB,IAAI,CAAC5E,KAAK,GAAG,EAAE;IACf,IAAI,CAAC6E,MAAM,GAAG,EAAE;IAChB;IACA;IACA,IAAI,CAACC,GAAG,GAAG,EAAE;IACb,IAAI,CAACC,OAAO,GAAG,EAAE;IACjB,IAAI,CAACC,MAAM,GAAG,EAAE;IAChB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,OAAO,CAACtD,MAAM,GAAG;MACjC,IAAI4D,IAAI,GAAGhJ,WAAW,CAAC0I,OAAO,EAAEK,CAAC,CAAC;QAAEE,IAAI,GAAGhJ,aAAa,CAAC+I,IAAI,CAAC;MAC9D,IAAI,CAAClF,KAAK,CAACF,IAAI,CAACoF,IAAI,CAAC;MACrB,IAAIE,IAAI,GAAGR,OAAO,CAACrF,KAAK,CAAC0F,CAAC,EAAEA,CAAC,GAAGE,IAAI,CAAC;QAAEE,KAAK,GAAGD,IAAI,CAACE,WAAW,CAAC,CAAC;MACjE,IAAI,CAACT,MAAM,CAAC/E,IAAI,CAAC5D,WAAW,CAACmJ,KAAK,IAAID,IAAI,GAAGA,IAAI,CAACG,WAAW,CAAC,CAAC,GAAGF,KAAK,EAAE,CAAC,CAAC,CAAC;MAC5EJ,CAAC,IAAIE,IAAI;IACb;IACA,IAAI,CAACK,MAAM,GAAGZ,OAAO,CAACtD,MAAM,IAAI,IAAI,CAACtB,KAAK,CAACsB,MAAM;EACrD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAAAvD,YAAA,CAAA4G,YAAA;IAAA3G,GAAA;IAAAC,KAAA,EACA,SAAAoE,MAAMoD,IAAI,EAAE;MACR,IAAI,IAAI,CAACb,OAAO,CAACtD,MAAM,IAAI,CAAC,EACxB,OAAO,CAAC,CAAC,GAAG,CAAC,sBAAsB;MACvC,IAAImE,IAAI,CAACnE,MAAM,GAAG,IAAI,CAACsD,OAAO,CAACtD,MAAM,EACjC,OAAO,IAAI;MACf,IAAMtB,KAAK,GAAmC,IAAI,CAA5CA,KAAK;QAAE6E,MAAM,GAA2B,IAAI,CAArCA,MAAM;QAAEC,GAAG,GAAsB,IAAI,CAA7BA,GAAG;QAAEC,OAAO,GAAa,IAAI,CAAxBA,OAAO;QAAEC,MAAM,GAAK,IAAI,CAAfA,MAAM;MACzC;MACA;MACA,IAAIhF,KAAK,CAACsB,MAAM,IAAI,CAAC,EAAE;QACnB,IAAIX,KAAK,GAAGzE,WAAW,CAACuJ,IAAI,EAAE,CAAC,CAAC;UAAEC,SAAS,GAAGvJ,aAAa,CAACwE,KAAK,CAAC;QAClE,IAAIkC,MAAK,GAAG6C,SAAS,IAAID,IAAI,CAACnE,MAAM,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC;QAChD,IAAIX,KAAK,IAAIX,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,KACnB,IAAIW,KAAK,IAAIkE,MAAM,CAAC,CAAC,CAAC,EACvBhC,MAAK,IAAI,CAAC,GAAG,CAAC,uBAAuB,KAErC,OAAO,IAAI;QACf,OAAO,CAACA,MAAK,EAAE,CAAC,EAAE6C,SAAS,CAAC;MAChC;MACA,IAAIC,MAAM,GAAGF,IAAI,CAACnH,OAAO,CAAC,IAAI,CAACsG,OAAO,CAAC;MACvC,IAAIe,MAAM,IAAI,CAAC,EACX,OAAO,CAACF,IAAI,CAACnE,MAAM,IAAI,IAAI,CAACsD,OAAO,CAACtD,MAAM,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,uBAAuB,CAAC,EAAE,IAAI,CAACsD,OAAO,CAACtD,MAAM,CAAC;MACxG,IAAIsE,GAAG,GAAG5F,KAAK,CAACsB,MAAM;QAAEuE,KAAK,GAAG,CAAC;MACjC,IAAIF,MAAM,GAAG,CAAC,EAAE;QACZ,KAAK,IAAItE,CAAC,GAAG,CAAC,EAAEG,CAAC,GAAGpC,IAAI,CAAC0G,GAAG,CAACL,IAAI,CAACnE,MAAM,EAAE,GAAG,CAAC,EAAED,CAAC,GAAGG,CAAC,IAAIqE,KAAK,GAAGD,GAAG,GAAG;UACnE,IAAIG,IAAI,GAAG7J,WAAW,CAACuJ,IAAI,EAAEpE,CAAC,CAAC;UAC/B,IAAI0E,IAAI,IAAI/F,KAAK,CAAC6F,KAAK,CAAC,IAAIE,IAAI,IAAIlB,MAAM,CAACgB,KAAK,CAAC,EAC7Cf,GAAG,CAACe,KAAK,EAAE,CAAC,GAAGxE,CAAC;UACpBA,CAAC,IAAIlF,aAAa,CAAC4J,IAAI,CAAC;QAC5B;QACA;QACA,IAAIF,KAAK,GAAGD,GAAG,EACX,OAAO,IAAI;MACnB;MACA;MACA;MACA,IAAII,SAAS,GAAG,CAAC;MACjB;MACA;MACA;MACA,IAAIC,QAAQ,GAAG,CAAC;QAAEC,YAAY,GAAG,KAAK;MACtC;MACA,IAAIC,UAAU,GAAG,CAAC;QAAEC,aAAa,GAAG,CAAC,CAAC;QAAEC,WAAW,GAAG,CAAC,CAAC;MACxD,IAAIC,QAAQ,GAAG,OAAO,CAAChG,IAAI,CAACmF,IAAI,CAAC;QAAEc,YAAY,GAAG,IAAI;MACtD;MACA,KAAK,IAAIlF,EAAC,GAAG,CAAC,EAAEG,EAAC,GAAGpC,IAAI,CAAC0G,GAAG,CAACL,IAAI,CAACnE,MAAM,EAAE,GAAG,CAAC,EAAEkF,QAAQ,GAAG,CAAC,CAAC,kBAAkBnF,EAAC,GAAGG,EAAC,IAAIyE,QAAQ,GAAGL,GAAG,GAAG;QACrG,IAAIG,KAAI,GAAG7J,WAAW,CAACuJ,IAAI,EAAEpE,EAAC,CAAC;QAC/B,IAAIsE,MAAM,GAAG,CAAC,EAAE;UACZ,IAAIK,SAAS,GAAGJ,GAAG,IAAIG,KAAI,IAAI/F,KAAK,CAACgG,SAAS,CAAC,EAC3CjB,OAAO,CAACiB,SAAS,EAAE,CAAC,GAAG3E,EAAC;UAC5B,IAAI8E,UAAU,GAAGP,GAAG,EAAE;YAClB,IAAIG,KAAI,IAAI/F,KAAK,CAACmG,UAAU,CAAC,IAAIJ,KAAI,IAAIlB,MAAM,CAACsB,UAAU,CAAC,EAAE;cACzD,IAAIA,UAAU,IAAI,CAAC,EACfC,aAAa,GAAG/E,EAAC;cACrBgF,WAAW,GAAGhF,EAAC,GAAG,CAAC;cACnB8E,UAAU,EAAE;YAChB,CAAC,MACI;cACDA,UAAU,GAAG,CAAC;YAClB;UACJ;QACJ;QACA,IAAIM,EAAE;UAAE5H,IAAI,GAAGkH,KAAI,GAAG,IAAI,GACnBA,KAAI,IAAI,EAAE,IAAIA,KAAI,IAAI,EAAE,IAAIA,KAAI,IAAI,EAAE,IAAIA,KAAI,IAAI,GAAG,GAAG,CAAC,CAAC,iBAAiBA,KAAI,IAAI,EAAE,IAAIA,KAAI,IAAI,EAAE,GAAG,CAAC,CAAC,iBAAiB,CAAC,CAAC,mBAC3H,CAACU,EAAE,GAAGrK,aAAa,CAAC2J,KAAI,CAAC,KAAKU,EAAE,CAAClB,WAAW,CAAC,CAAC,GAAG,CAAC,CAAC,iBAAiBkB,EAAE,IAAIA,EAAE,CAACnB,WAAW,CAAC,CAAC,GAAG,CAAC,CAAC,iBAAiB,CAAC,CAAC,gBAAiB;QAC1I,IAAI,CAACjE,EAAC,IAAIxC,IAAI,IAAI,CAAC,CAAC,kBAAkByH,QAAQ,IAAIE,QAAQ,IAAI,CAAC,CAAC,oBAAoB3H,IAAI,IAAI,CAAC,CAAC,kBAAkB;UAC5G,IAAImB,KAAK,CAACiG,QAAQ,CAAC,IAAIF,KAAI,IAAKlB,MAAM,CAACoB,QAAQ,CAAC,IAAIF,KAAI,KAAKG,YAAY,GAAG,IAAI,CAAE,EAC9ElB,MAAM,CAACiB,QAAQ,EAAE,CAAC,GAAG5E,EAAC,CAAC,KACtB,IAAI2D,MAAM,CAAC1D,MAAM,EAClBiF,YAAY,GAAG,KAAK;QAC5B;QACAC,QAAQ,GAAG3H,IAAI;QACfwC,EAAC,IAAIlF,aAAa,CAAC4J,KAAI,CAAC;MAC5B;MACA,IAAIE,QAAQ,IAAIL,GAAG,IAAIZ,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,IAAIuB,YAAY,EACjD,OAAO,IAAI,CAACG,MAAM,CAAC,CAAC,GAAG,CAAC,wBAAwBR,YAAY,GAAG,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC,EAAElB,MAAM,EAAES,IAAI,CAAC;MAClH,IAAIU,UAAU,IAAIP,GAAG,IAAIQ,aAAa,IAAI,CAAC,EACvC,OAAO,CAAC,CAAC,GAAG,CAAC,yBAAyBX,IAAI,CAACnE,MAAM,IAAI+E,WAAW,IAAIZ,IAAI,CAACnE,MAAM,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,sBAAsB,EAAE,CAAC,EAAE+E,WAAW,CAAC;MACtI,IAAIV,MAAM,GAAG,CAAC,CAAC,EACX,OAAO,CAAC,CAAC,GAAG,CAAC,yBAAyBF,IAAI,CAACnE,MAAM,EAAEqE,MAAM,EAAEA,MAAM,GAAG,IAAI,CAACf,OAAO,CAACtD,MAAM,CAAC;MAC5F,IAAI6E,UAAU,IAAIP,GAAG,EACjB,OAAO,CAAC,CAAC,GAAG,CAAC,yBAAyB,CAAC,GAAG,CAAC,yBAAyBH,IAAI,CAACnE,MAAM,EAAE8E,aAAa,EAAEC,WAAW,CAAC;MAChH,IAAIJ,QAAQ,IAAIL,GAAG,EACf,OAAO,IAAI,CAACc,MAAM,CAAC,CAAC,GAAG,CAAC,wBAAwBR,YAAY,GAAG,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,0BAClGK,YAAY,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,kBAAkB,EAAEvB,MAAM,EAAES,IAAI,CAAC;MACnE,OAAOzF,KAAK,CAACsB,MAAM,IAAI,CAAC,GAAG,IAAI,GAAG,IAAI,CAACoF,MAAM,CAAC,CAAC5B,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,yBAAyB,CAAC,IAAI,CAAC,GAAG,CAAC,yBAAyB,CAAC,IAAI,CAAC,mBAAmBA,GAAG,EAAEW,IAAI,CAAC;IAChK;EAAC;IAAAzH,GAAA;IAAAC,KAAA,EACD,SAAAyI,OAAO7D,KAAK,EAAE8D,SAAS,EAAElB,IAAI,EAAE;MAC3B,IAAIiB,MAAM,GAAG,CAAC7D,KAAK,GAAG4C,IAAI,CAACnE,MAAM,CAAC;QAAED,CAAC,GAAG,CAAC;MAAC,IAAAuF,UAAA,GAAA7F,0BAAA,CAC1B4F,SAAS;QAAAE,MAAA;MAAA;QAAzB,KAAAD,UAAA,CAAA3F,CAAA,MAAA4F,MAAA,GAAAD,UAAA,CAAA1F,CAAA,IAAAC,IAAA,GAA2B;UAAA,IAAlBxD,GAAG,GAAAkJ,MAAA,CAAA5I,KAAA;UACR,IAAIS,EAAE,GAAGf,GAAG,IAAI,IAAI,CAAC6H,MAAM,GAAGrJ,aAAa,CAACD,WAAW,CAACuJ,IAAI,EAAE9H,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;UACxE,IAAI0D,CAAC,GAAG,CAAC,IAAIqF,MAAM,CAACrF,CAAC,GAAG,CAAC,CAAC,IAAI1D,GAAG,EAC7B+I,MAAM,CAACrF,CAAC,GAAG,CAAC,CAAC,GAAG3C,EAAE,CAAC,KAClB;YACDgI,MAAM,CAACrF,CAAC,EAAE,CAAC,GAAG1D,GAAG;YACjB+I,MAAM,CAACrF,CAAC,EAAE,CAAC,GAAG3C,EAAE;UACpB;QACJ;MAAC,SAAA6C,GAAA;QAAAqF,UAAA,CAAApF,CAAA,CAAAD,GAAA;MAAA;QAAAqF,UAAA,CAAAnF,CAAA;MAAA;MACD,OAAOiF,MAAM;IACjB;EAAC;EAAA,OAAA/B,YAAA;AAAA;AAGL,IAAMmC,gBAAgB,GAAG,aAAazK,KAAK,CAACkH,MAAM,CAAC;EAC/CwD,OAAO,WAAAA,QAACC,OAAO,EAAE;IACb,OAAO1K,aAAa,CAAC0K,OAAO,EAAE;MAC1BC,gBAAgB,EAAE,IAAI;MACtBC,YAAY,EAAE,IAAI;MAClBC,QAAQ,EAAE,IAAI;MACdC,WAAW,EAAE,IAAI;MACjBC,kBAAkB,EAAE,GAAG;MACvBC,aAAa,EAAE,IAAI;MACnBC,YAAY,EAAE,SAAAA,aAAA;QAAA,OAAM,EAAE;MAAA;MACtBC,WAAW,EAAE,SAAAA,YAAA;QAAA,OAAM,EAAE;MAAA;MACrBC,WAAW,EAAE,KAAK;MAClBC,KAAK,EAAE,IAAI;MACXC,YAAY,EAAE,EAAE;MAChBC,YAAY,EAAEC,mBAAmB;MACjCC,kBAAkB,EAAE,SAAAA,mBAACC,CAAC,EAAEC,CAAC;QAAA,OAAKD,CAAC,CAAC3G,KAAK,CAAC6G,aAAa,CAACD,CAAC,CAAC5G,KAAK,CAAC;MAAA;MAC5D8G,gBAAgB,EAAE;IACtB,CAAC,EAAE;MACCZ,aAAa,EAAE,SAAAA,cAACS,CAAC,EAAEC,CAAC;QAAA,OAAKD,CAAC,IAAIC,CAAC;MAAA;MAC/BZ,WAAW,EAAE,SAAAA,YAACW,CAAC,EAAEC,CAAC;QAAA,OAAKD,CAAC,IAAIC,CAAC;MAAA;MAC7BN,KAAK,EAAE,SAAAA,MAACK,CAAC,EAAEC,CAAC;QAAA,OAAKD,CAAC,IAAIC,CAAC;MAAA;MACvBT,YAAY,EAAE,SAAAA,aAACQ,CAAC,EAAEC,CAAC;QAAA,OAAK,UAAAG,CAAC;UAAA,OAAIC,SAAS,CAACL,CAAC,CAACI,CAAC,CAAC,EAAEH,CAAC,CAACG,CAAC,CAAC,CAAC;QAAA;MAAA;MAClDX,WAAW,EAAE,SAAAA,YAACO,CAAC,EAAEC,CAAC;QAAA,OAAK,UAAAG,CAAC;UAAA,OAAIC,SAAS,CAACL,CAAC,CAACI,CAAC,CAAC,EAAEH,CAAC,CAACG,CAAC,CAAC,CAAC;QAAA;MAAA;MACjDR,YAAY,EAAE,SAAAA,aAACI,CAAC,EAAEC,CAAC;QAAA,OAAKD,CAAC,CAACvH,MAAM,CAACwH,CAAC,CAAC;MAAA;IACvC,CAAC,CAAC;EACN;AACJ,CAAC,CAAC;AACF,SAASI,SAASA,CAACL,CAAC,EAAEC,CAAC,EAAE;EACrB,OAAOD,CAAC,GAAGC,CAAC,GAAGD,CAAC,GAAG,GAAG,GAAGC,CAAC,GAAGD,CAAC,GAAGC,CAAC;AACtC;AACA,SAASH,mBAAmBA,CAACQ,IAAI,EAAExG,IAAI,EAAEyG,MAAM,EAAEC,IAAI,EAAEC,KAAK,EAAE;EAC1D,IAAIC,GAAG,GAAGJ,IAAI,CAACK,aAAa,IAAI5L,SAAS,CAAC6L,GAAG;IAAEC,IAAI,GAAGH,GAAG;IAAEI,MAAM,GAAG,KAAK;EACzE,IAAIC,IAAI,GAAG,KAAK;IAAEC,MAAM;IAAEC,QAAQ;EAClC,IAAIC,SAAS,GAAGpH,IAAI,CAAC+G,IAAI,GAAGJ,KAAK,CAACI,IAAI;IAAEM,UAAU,GAAGV,KAAK,CAACW,KAAK,GAAGtH,IAAI,CAACsH,KAAK;EAC7E,IAAIC,SAAS,GAAGb,IAAI,CAACY,KAAK,GAAGZ,IAAI,CAACK,IAAI;IAAES,UAAU,GAAGd,IAAI,CAACe,MAAM,GAAGf,IAAI,CAACgB,GAAG;EAC3E,IAAIX,IAAI,IAAIK,SAAS,GAAG7J,IAAI,CAAC0G,GAAG,CAACsD,SAAS,EAAEF,UAAU,CAAC,EACnDN,IAAI,GAAG,KAAK,CAAC,KACZ,IAAI,CAACA,IAAI,IAAIM,UAAU,GAAG9J,IAAI,CAAC0G,GAAG,CAACsD,SAAS,EAAEH,SAAS,CAAC,EACzDL,IAAI,GAAG,IAAI;EACf,IAAIQ,SAAS,KAAKR,IAAI,GAAGK,SAAS,GAAGC,UAAU,CAAC,EAAE;IAC9CH,MAAM,GAAG3J,IAAI,CAACC,GAAG,CAACmJ,KAAK,CAACe,GAAG,EAAEnK,IAAI,CAAC0G,GAAG,CAACwC,MAAM,CAACiB,GAAG,EAAEf,KAAK,CAACc,MAAM,GAAGD,UAAU,CAAC,CAAC,GAAGxH,IAAI,CAAC0H,GAAG;IACxFP,QAAQ,GAAG5J,IAAI,CAAC0G,GAAG,CAAC,GAAG,CAAC,kBAAkB8C,IAAI,GAAGK,SAAS,GAAGC,UAAU,CAAC;EAC5E,CAAC,MACI;IACDL,MAAM,GAAG,IAAI;IACbG,QAAQ,GAAG5J,IAAI,CAAC0G,GAAG,CAAC,GAAG,CAAC,kBAAkB,CAAC2C,GAAG,GAAG5G,IAAI,CAACsH,KAAK,GAAGX,KAAK,CAACW,KAAK,GAAGtH,IAAI,CAAC+G,IAAI,IAAI,EAAE,CAAC,iBAAiB,CAAC;IAC9G,IAAIY,UAAU,GAAGhB,KAAK,CAACc,MAAM,GAAGzH,IAAI,CAACyH,MAAM;IAC3C,IAAIE,UAAU,IAAIH,UAAU,IAAIG,UAAU,GAAG3H,IAAI,CAAC0H,GAAG,EAAE;MAAE;MACrDR,MAAM,GAAGT,MAAM,CAACgB,MAAM,GAAGzH,IAAI,CAAC0H,GAAG;IACrC,CAAC,MACI;MAAE;MACHT,IAAI,GAAG,QAAQ;MACfC,MAAM,GAAGlH,IAAI,CAACyH,MAAM,GAAGhB,MAAM,CAACiB,GAAG;IACrC;EACJ;EACA,OAAO;IACHE,KAAK,KAAAjJ,MAAA,CAAKsI,IAAI,QAAAtI,MAAA,CAAKuI,MAAM,qBAAAvI,MAAA,CAAkBwI,QAAQ,OAAI;IACvDU,KAAK,EAAE,oBAAoB,IAAIb,MAAM,GAAIJ,GAAG,GAAG,aAAa,GAAG,cAAc,GAAIG,IAAI,GAAG,MAAM,GAAG,OAAO;EAC5G,CAAC;AACL;;AAEA;AACA;AACA;AACA;AACA,SAASe,uBAAuBA,CAACC,OAAO,EAAiB;EAAA,IAAfC,EAAE,GAAAC,SAAA,CAAAxI,MAAA,QAAAwI,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,QAAQ;EACnD,OAAO,UAACzB,IAAI,EAAK;IACb,IAAI2B,MAAM,GAAG3B,IAAI,CAAC3K,KAAK,CAACuM,KAAK,CAACC,eAAe,EAAE,KAAK,CAAC;IACrD,IAAI,CAACF,MAAM,IAAI,CAACA,MAAM,CAACG,IAAI,IAAIH,MAAM,CAACG,IAAI,CAACC,QAAQ,IAC/CC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGN,MAAM,CAACG,IAAI,CAACI,SAAS,GAAGlC,IAAI,CAAC3K,KAAK,CAAC8M,KAAK,CAAC1D,gBAAgB,CAAC,CAACoB,gBAAgB,EACxF,OAAO,KAAK;IAChB,IAAIuC,IAAI,GAAG,CAAC;MAAEC,OAAO;IACrB,IAAIb,EAAE,IAAI,MAAM,KAAKa,OAAO,GAAGzN,UAAU,CAACoL,IAAI,EAAE2B,MAAM,CAACG,IAAI,CAACO,OAAO,CAAC,CAAC,EACjED,IAAI,GAAGrL,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAACuL,KAAK,CAACD,OAAO,CAACE,GAAG,CAACC,YAAY,GAClDH,OAAO,CAACE,GAAG,CAACE,aAAa,CAAC,IAAI,CAAC,CAACD,YAAY,CAAC,GAAG,CAAC,CAAC;IAC1D,IAAMvJ,MAAM,GAAK0I,MAAM,CAACG,IAAI,CAACzJ,OAAO,CAA9BY,MAAM;IACZ,IAAIyJ,QAAQ,GAAGf,MAAM,CAACG,IAAI,CAACY,QAAQ,GAAG,CAAC,CAAC,GAAGf,MAAM,CAACG,IAAI,CAACY,QAAQ,GAAGN,IAAI,IAAIb,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAGA,OAAO,GAAG,CAAC,GAAGtI,MAAM,GAAG,CAAC;IACtH,IAAIyJ,QAAQ,GAAG,CAAC,EACZA,QAAQ,GAAGlB,EAAE,IAAI,MAAM,GAAG,CAAC,GAAGvI,MAAM,GAAG,CAAC,CAAC,KACxC,IAAIyJ,QAAQ,IAAIzJ,MAAM,EACvByJ,QAAQ,GAAGlB,EAAE,IAAI,MAAM,GAAGvI,MAAM,GAAG,CAAC,GAAG,CAAC;IAC5C+G,IAAI,CAAC2C,QAAQ,CAAC;MAAEC,OAAO,EAAEC,iBAAiB,CAACC,EAAE,CAACJ,QAAQ;IAAE,CAAC,CAAC;IAC1D,OAAO,IAAI;EACf,CAAC;AACL;AACA;AACA;AACA;AACA,IAAMK,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAI/C,IAAI,EAAK;EAC/B,IAAI2B,MAAM,GAAG3B,IAAI,CAAC3K,KAAK,CAACuM,KAAK,CAACC,eAAe,EAAE,KAAK,CAAC;EACrD,IAAI7B,IAAI,CAAC3K,KAAK,CAAC2N,QAAQ,IAAI,CAACrB,MAAM,IAAI,CAACA,MAAM,CAACG,IAAI,IAAIH,MAAM,CAACG,IAAI,CAACY,QAAQ,GAAG,CAAC,IAC1EV,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGN,MAAM,CAACG,IAAI,CAACI,SAAS,GAAGlC,IAAI,CAAC3K,KAAK,CAAC8M,KAAK,CAAC1D,gBAAgB,CAAC,CAACoB,gBAAgB,EACxF,OAAO,KAAK;EAChB,IAAI,CAAC8B,MAAM,CAACG,IAAI,CAACC,QAAQ,EACrB,OAAOkB,eAAe,CAACjD,IAAI,EAAE2B,MAAM,CAACG,IAAI,CAACzJ,OAAO,CAACsJ,MAAM,CAACG,IAAI,CAACY,QAAQ,CAAC,CAAC;EAC3E,OAAO,IAAI;AACf,CAAC;AACD;AACA;AACA;AACA,IAAMQ,eAAe,GAAG,SAAlBA,eAAeA,CAAIlD,IAAI,EAAK;EAC9B,IAAI2B,MAAM,GAAG3B,IAAI,CAAC3K,KAAK,CAACuM,KAAK,CAACC,eAAe,EAAE,KAAK,CAAC;EACrD,IAAI,CAACF,MAAM,EACP,OAAO,KAAK;EAChB3B,IAAI,CAAC2C,QAAQ,CAAC;IAAEC,OAAO,EAAExG,qBAAqB,CAAC0G,EAAE,CAAC,IAAI;EAAE,CAAC,CAAC;EAC1D,OAAO,IAAI;AACf,CAAC;AACD;AACA;AACA;AACA,IAAMK,eAAe,GAAG,SAAlBA,eAAeA,CAAInD,IAAI,EAAK;EAC9B,IAAI2B,MAAM,GAAG3B,IAAI,CAAC3K,KAAK,CAACuM,KAAK,CAACC,eAAe,EAAE,KAAK,CAAC;EACrD,IAAI,CAACF,MAAM,IAAI,CAACA,MAAM,CAACyB,MAAM,CAACC,IAAI,CAAC,UAAA3D,CAAC;IAAA,OAAIA,CAAC,CAACrK,KAAK,IAAI,CAAC;EAAA,EAAC,oBAAoB,CAAC,EACtE,OAAO,KAAK;EAChB2K,IAAI,CAAC2C,QAAQ,CAAC;IAAEC,OAAO,EAAEvG,qBAAqB,CAACyG,EAAE,CAAC,IAAI;EAAE,CAAC,CAAC;EAC1D,OAAO,IAAI;AACf,CAAC;AAAC,IACIQ,YAAY,gBAAA5N,YAAA,CACd,SAAA4N,aAAYF,MAAM,EAAEnJ,OAAO,EAAE;EAAAzE,eAAA,OAAA8N,YAAA;EACzB,IAAI,CAACF,MAAM,GAAGA,MAAM;EACpB,IAAI,CAACnJ,OAAO,GAAGA,OAAO;EACtB,IAAI,CAACsJ,IAAI,GAAGvB,IAAI,CAACC,GAAG,CAAC,CAAC;EACtB,IAAI,CAACuB,OAAO,GAAG,EAAE;EACjB;EACA;EACA,IAAI,CAAC1K,IAAI,GAAG4I,SAAS;AACzB,CAAC;AAEL,IAAM+B,YAAY,GAAG,EAAE;EAAEC,cAAc,GAAG,EAAE;EAAEC,YAAY,GAAG,IAAI;AACjE,IAAMC,gBAAgB,GAAG,aAAalP,UAAU,CAACmP,SAAS;EACtD,SAAAC,OAAY9D,IAAI,EAAE;IAAAxK,eAAA,OAAAsO,MAAA;IACd,IAAI,CAAC9D,IAAI,GAAGA,IAAI;IAChB,IAAI,CAAC+D,cAAc,GAAG,CAAC,CAAC;IACxB,IAAI,CAACC,OAAO,GAAG,EAAE;IACjB,IAAI,CAACC,cAAc,GAAG,CAAC,CAAC;IACxB,IAAI,CAACC,SAAS,GAAG,CAAC,CAAC;IAA4B,IAAAC,UAAA,GAAAzL,0BAAA,CAC5BsH,IAAI,CAAC3K,KAAK,CAACuM,KAAK,CAACC,eAAe,CAAC,CAACuB,MAAM;MAAAgB,MAAA;IAAA;MAA3D,KAAAD,UAAA,CAAAvL,CAAA,MAAAwL,MAAA,GAAAD,UAAA,CAAAtL,CAAA,IAAAC,IAAA,GACI;QAAA,IADKsK,MAAM,GAAAgB,MAAA,CAAAxO,KAAA;QACX,IAAIwN,MAAM,CAAC/N,KAAK,IAAI,CAAC,CAAC,qBAClB,IAAI,CAACgP,UAAU,CAACjB,MAAM,CAAC;MAAA;IAAC,SAAAlK,GAAA;MAAAiL,UAAA,CAAAhL,CAAA,CAAAD,GAAA;IAAA;MAAAiL,UAAA,CAAA/K,CAAA;IAAA;EACpC;EAAC1D,YAAA,CAAAoO,MAAA;IAAAnO,GAAA;IAAAC,KAAA,EACD,SAAA0O,OAAOA,OAAM,EAAE;MAAA,IAAAC,KAAA;MACX,IAAI5C,MAAM,GAAG2C,OAAM,CAACjP,KAAK,CAACuM,KAAK,CAACC,eAAe,CAAC;MAChD,IAAI,CAACyC,OAAM,CAACE,YAAY,IAAI,CAACF,OAAM,CAACG,UAAU,IAAIH,OAAM,CAACI,UAAU,CAAC9C,KAAK,CAACC,eAAe,CAAC,IAAIF,MAAM,EAChG;MACJ,IAAIgD,SAAS,GAAGL,OAAM,CAACM,YAAY,CAACvB,IAAI,CAAC,UAAAwB,EAAE,EAAI;QAC3C,OAAO,CAACA,EAAE,CAACnK,SAAS,IAAImK,EAAE,CAACJ,UAAU,KAAK,CAACK,YAAY,CAACD,EAAE,CAAC;MAC/D,CAAC,CAAC;MACF,KAAK,IAAI7L,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACgL,OAAO,CAAC/K,MAAM,EAAED,CAAC,EAAE,EAAE;QAC1C,IAAI+L,KAAK,GAAG,IAAI,CAACf,OAAO,CAAChL,CAAC,CAAC;QAC3B,IAAI2L,SAAS,IACTI,KAAK,CAACvB,OAAO,CAACvK,MAAM,GAAGqL,OAAM,CAACM,YAAY,CAAC3L,MAAM,GAAGyK,cAAc,IAAI1B,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG8C,KAAK,CAACxB,IAAI,GAAGI,YAAY,EAAE;UAAA,IAAAqB,UAAA,GAAAtM,0BAAA,CAC1FqM,KAAK,CAAC9K,OAAO,CAACxE,cAAc;YAAAwP,MAAA;UAAA;YAAhD,KAAAD,UAAA,CAAApM,CAAA,MAAAqM,MAAA,GAAAD,UAAA,CAAAnM,CAAA,IAAAC,IAAA,GAAkD;cAAA,IAAzCoM,OAAO,GAAAD,MAAA,CAAArP,KAAA;cACZ,IAAI;gBACAsP,OAAO,CAAC,CAAC;cACb,CAAC,CACD,OAAO/L,CAAC,EAAE;gBACNxE,YAAY,CAAC,IAAI,CAACqL,IAAI,CAAC3K,KAAK,EAAE8D,CAAC,CAAC;cACpC;YACJ;UAAC,SAAAD,GAAA;YAAA8L,UAAA,CAAA7L,CAAA,CAAAD,GAAA;UAAA;YAAA8L,UAAA,CAAA5L,CAAA;UAAA;UACD2L,KAAK,CAAC9K,OAAO,CAACxE,cAAc,GAAG,IAAI;UACnC,IAAI,CAACuO,OAAO,CAACmB,MAAM,CAACnM,CAAC,EAAE,EAAE,CAAC,CAAC;QAC/B,CAAC,MACI;UAAA,IAAAoM,cAAA;UACD,CAAAA,cAAA,GAAAL,KAAK,CAACvB,OAAO,EAAC/L,IAAI,CAAA4N,KAAA,CAAAD,cAAA,EAAAE,kBAAA,CAAIhB,OAAM,CAACM,YAAY,EAAC;QAC9C;MACJ;MACA,IAAI,IAAI,CAACb,cAAc,GAAG,CAAC,CAAC,EACxBwB,YAAY,CAAC,IAAI,CAACxB,cAAc,CAAC;MACrC,IAAI,CAACA,cAAc,GAAGpC,MAAM,CAACyB,MAAM,CAACC,IAAI,CAAC,UAAA3D,CAAC;QAAA,OAAIA,CAAC,CAACrK,KAAK,IAAI,CAAC,CAAC,uBAAuB,CAACkP,KAAI,CAACP,OAAO,CAACX,IAAI,CAAC,UAAAmC,CAAC;UAAA,OAAIA,CAAC,CAACpC,MAAM,CAAC/J,MAAM,IAAIqG,CAAC,CAACrG,MAAM;QAAA,EAAC;MAAA,EAAC,GACjIoM,UAAU,CAAC;QAAA,OAAMlB,KAAI,CAACmB,WAAW,CAAC,CAAC;MAAA,GAAEjC,YAAY,CAAC,GAAG,CAAC,CAAC;MAC7D,IAAI,IAAI,CAACS,SAAS,IAAI,CAAC,CAAC;QAAA,IAAAyB,UAAA,GAAAjN,0BAAA,CACL4L,OAAM,CAACM,YAAY;UAAAgB,MAAA;QAAA;UAAlC,KAAAD,UAAA,CAAA/M,CAAA,MAAAgN,MAAA,GAAAD,UAAA,CAAA9M,CAAA,IAAAC,IAAA,GAAoC;YAAA,IAA3B+L,EAAE,GAAAe,MAAA,CAAAhQ,KAAA;YACP,IAAIkP,YAAY,CAACD,EAAE,CAAC,IAAI,OAAO,EAC3B,IAAI,CAACX,SAAS,GAAG,CAAC,CAAC,+BAA+B,KACjD,IAAI,IAAI,CAACA,SAAS,IAAI,CAAC,CAAC,kCAAkCW,EAAE,CAACnK,SAAS,EACvE,IAAI,CAACwJ,SAAS,GAAG,CAAC,CAAC;UAC3B;QAAC,SAAAhL,GAAA;UAAAyM,UAAA,CAAAxM,CAAA,CAAAD,GAAA;QAAA;UAAAyM,UAAA,CAAAvM,CAAA;QAAA;MAAA;IACT;EAAC;IAAAzD,GAAA;IAAAC,KAAA,EACD,SAAA8P,YAAA,EAAc;MAAA,IAAAG,MAAA;MACV,IAAI,CAAC9B,cAAc,GAAG,CAAC,CAAC;MACpB,IAAE1O,KAAK,GAAK,IAAI,CAAC2K,IAAI,CAAnB3K,KAAK;QAAgBsM,MAAM,GAAGtM,KAAK,CAACuM,KAAK,CAACC,eAAe,CAAC;MAAvC,IAAAiE,UAAA,GAAApN,0BAAA,CACNiJ,MAAM,CAACyB,MAAM;QAAA2C,MAAA;MAAA;QAAA,IAAAC,KAAA,YAAAA,MAAA,EAAE;UAAA,IAAzB5C,MAAM,GAAA2C,MAAA,CAAAnQ,KAAA;UACX,IAAIwN,MAAM,CAAC/N,KAAK,IAAI,CAAC,CAAC,uBAAuB,CAACwQ,MAAI,CAAC7B,OAAO,CAACX,IAAI,CAAC,UAAA4C,CAAC;YAAA,OAAIA,CAAC,CAAC7C,MAAM,CAAC/J,MAAM,IAAI+J,MAAM,CAAC/J,MAAM;UAAA,EAAC,EAClGwM,MAAI,CAACxB,UAAU,CAACjB,MAAM,CAAC;QAC/B,CAAC;QAHD,KAAA0C,UAAA,CAAAlN,CAAA,MAAAmN,MAAA,GAAAD,UAAA,CAAAjN,CAAA,IAAAC,IAAA;UAAAkN,KAAA;QAAA;MAGC,SAAA9M,GAAA;QAAA4M,UAAA,CAAA3M,CAAA,CAAAD,GAAA;MAAA;QAAA4M,UAAA,CAAA1M,CAAA;MAAA;IACL;EAAC;IAAAzD,GAAA;IAAAC,KAAA,EACD,SAAAyO,WAAWjB,MAAM,EAAE;MAAA,IAAA8C,MAAA;MACX,IAAE7Q,KAAK,GAAK,IAAI,CAAC2K,IAAI,CAAnB3K,KAAK;QAAgBC,GAAG,GAAGmF,GAAG,CAACpF,KAAK,CAAC;MAC3C,IAAI4E,OAAO,GAAG,IAAI7E,iBAAiB,CAACC,KAAK,EAAEC,GAAG,EAAE8N,MAAM,CAAC+C,WAAW,IAAI7Q,GAAG,CAAC;MAC1E,IAAI8Q,OAAO,GAAG,IAAI9C,YAAY,CAACF,MAAM,EAAEnJ,OAAO,CAAC;MAC/C,IAAI,CAAC+J,OAAO,CAACvM,IAAI,CAAC2O,OAAO,CAAC;MAC1BC,OAAO,CAACC,OAAO,CAAClD,MAAM,CAAC/J,MAAM,CAACY,OAAO,CAAC,CAAC,CAACsM,IAAI,CAAC,UAAAlI,MAAM,EAAI;QACnD,IAAI,CAAC+H,OAAO,CAACnM,OAAO,CAACuM,OAAO,EAAE;UAC1BJ,OAAO,CAACtN,IAAI,GAAGuF,MAAM,IAAI,IAAI;UAC7B6H,MAAI,CAACO,cAAc,CAAC,CAAC;QACzB;MACJ,CAAC,EAAE,UAAAvN,GAAG,EAAI;QACNgN,MAAI,CAAClG,IAAI,CAAC2C,QAAQ,CAAC;UAAEC,OAAO,EAAEvG,qBAAqB,CAACyG,EAAE,CAAC,IAAI;QAAE,CAAC,CAAC;QAC/DnO,YAAY,CAACuR,MAAI,CAAClG,IAAI,CAAC3K,KAAK,EAAE6D,GAAG,CAAC;MACtC,CAAC,CAAC;IACN;EAAC;IAAAvD,GAAA;IAAAC,KAAA,EACD,SAAA6Q,eAAA,EAAiB;MAAA,IAAAC,MAAA;MACb,IAAI,IAAI,CAAC1C,OAAO,CAACpK,KAAK,CAAC,UAAA4L,CAAC;QAAA,OAAIA,CAAC,CAAC1M,IAAI,KAAK4I,SAAS;MAAA,EAAC,EAC7C,IAAI,CAACiF,MAAM,CAAC,CAAC,CAAC,KACb,IAAI,IAAI,CAAC1C,cAAc,GAAG,CAAC,EAC5B,IAAI,CAACA,cAAc,GAAGwB,UAAU,CAAC;QAAA,OAAMiB,MAAI,CAACC,MAAM,CAAC,CAAC;MAAA,GAAElD,YAAY,CAAC;IAC3E;IACA;IACA;EAAA;IAAA9N,GAAA;IAAAC,KAAA,EACA,SAAA+Q,OAAA,EAAS;MAAA,IAAAC,MAAA;MACL,IAAIhM,EAAE;MACN,IAAI,IAAI,CAACqJ,cAAc,GAAG,CAAC,CAAC,EACxBsB,YAAY,CAAC,IAAI,CAACtB,cAAc,CAAC;MACrC,IAAI,CAACA,cAAc,GAAG,CAAC,CAAC;MACxB,IAAI4C,OAAO,GAAG,EAAE;MAChB,IAAIC,IAAI,GAAG,IAAI,CAAC9G,IAAI,CAAC3K,KAAK,CAAC8M,KAAK,CAAC1D,gBAAgB,CAAC;MAAC,IAAAsI,MAAA,YAAAA,OAAAC,GAAA,EACL;QAC1C,IAAIjC,KAAK,GAAG6B,MAAI,CAAC5C,OAAO,CAAAgD,GAAA,CAAG;QAC3B,IAAIjC,KAAK,CAACjM,IAAI,KAAK4I,SAAS;UAAA1I,CAAA,GAAAgO,GAAA;UAAA;QAAA;QAE5BJ,MAAI,CAAC5C,OAAO,CAACmB,MAAM,CAAC6B,GAAA,EAAG,EAAE,CAAC,CAAC;QAC3B,IAAIjC,KAAK,CAACjM,IAAI,EAAE;UACZ,IAAIsK,MAAM,GAAG,IAAI6D,YAAY,CAAClC,KAAK,CAAC3B,MAAM,CAAC/J,MAAM,EAAE0L,KAAK,CAAC3B,MAAM,CAAC+C,WAAW,EAAEpB,KAAK,CAACjM,IAAI,EAAEiM,KAAK,CAACjM,IAAI,CAAC1C,IAAI,EAAE,CAACwE,EAAE,GAAGmK,KAAK,CAACjM,IAAI,CAACzC,EAAE,MAAM,IAAI,IAAIuE,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAGH,GAAG,CAACsK,KAAK,CAACvB,OAAO,CAACvK,MAAM,GAAG8L,KAAK,CAACvB,OAAO,CAAC,CAAC,CAAC,CAACkB,UAAU,GAAGkC,MAAI,CAAC5G,IAAI,CAAC3K,KAAK,CAAC,CAAC;UAC1O;UACA;UAAA,IAAA6R,UAAA,GAAAxO,0BAAA,CACeqM,KAAK,CAACvB,OAAO;YAAA2D,MAAA;UAAA;YAA5B,KAAAD,UAAA,CAAAtO,CAAA,MAAAuO,MAAA,GAAAD,UAAA,CAAArO,CAAA,IAAAC,IAAA,GACI;cAAA,IADK+L,EAAE,GAAAsC,MAAA,CAAAvR,KAAA;cACPwN,MAAM,GAAGA,MAAM,CAACkB,MAAM,CAACO,EAAE,EAAEiC,IAAI,CAAC;YAAA;UAAC,SAAA5N,GAAA;YAAAgO,UAAA,CAAA/N,CAAA,CAAAD,GAAA;UAAA;YAAAgO,UAAA,CAAA9N,CAAA;UAAA;UACrC,IAAIgK,MAAM,CAACgE,SAAS,CAAC,CAAC,EAAE;YACpBP,OAAO,CAACpP,IAAI,CAAC2L,MAAM,CAAC;YAACpK,CAAA,GAAAgO,GAAA;YAAA;UAEzB;QACJ;QACA,IAAIK,OAAO,GAAGT,MAAI,CAAC5G,IAAI,CAAC3K,KAAK,CAACuM,KAAK,CAACC,eAAe,CAAC,CAACuB,MAAM,CAACkE,IAAI,CAAC,UAAA5H,CAAC;UAAA,OAAIA,CAAC,CAACrG,MAAM,IAAI0L,KAAK,CAAC3B,MAAM,CAAC/J,MAAM;QAAA,EAAC;QACtG,IAAIgO,OAAO,IAAIA,OAAO,CAAChS,KAAK,IAAI,CAAC,CAAC,qBAAqB;UACnD,IAAI0P,KAAK,CAACjM,IAAI,IAAI,IAAI,EAAE;YACpB;YACA;YACA,IAAIsK,OAAM,GAAG,IAAImE,YAAY,CAACxC,KAAK,CAAC3B,MAAM,CAAC/J,MAAM,EAAE,CAAC,CAAC,oBAAoB,CAAC;YAAC,IAAAmO,UAAA,GAAA9O,0BAAA,CAC5DqM,KAAK,CAACvB,OAAO;cAAAiE,MAAA;YAAA;cAA5B,KAAAD,UAAA,CAAA5O,CAAA,MAAA6O,MAAA,GAAAD,UAAA,CAAA3O,CAAA,IAAAC,IAAA,GACI;gBAAA,IADK+L,GAAE,GAAA4C,MAAA,CAAA7R,KAAA;gBACPwN,OAAM,GAAGA,OAAM,CAACkB,MAAM,CAACO,GAAE,EAAEiC,IAAI,CAAC;cAAA;YAAC,SAAA5N,GAAA;cAAAsO,UAAA,CAAArO,CAAA,CAAAD,GAAA;YAAA;cAAAsO,UAAA,CAAApO,CAAA;YAAA;YACrC,IAAIgK,OAAM,CAAC/N,KAAK,IAAI,CAAC,CAAC,qBAClBwR,OAAO,CAACpP,IAAI,CAAC2L,OAAM,CAAC;UAC5B,CAAC,MACI;YACD;YACAwD,MAAI,CAACvC,UAAU,CAACgD,OAAO,CAAC;UAC5B;QACJ;QAACrO,CAAA,GAAAgO,GAAA;MACL,CAAC;MAhCD,KAAK,IAAIhO,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACgL,OAAO,CAAC/K,MAAM,EAAED,CAAC,EAAE;QAAA,IAAA0O,IAAA,GAAAX,MAAA,CAAA/N,CAAA;QAAA,IAAA0O,IAAA,iBAGpC;MAAS;MA8BjB,IAAIb,OAAO,CAAC5N,MAAM,EACd,IAAI,CAAC+G,IAAI,CAAC2C,QAAQ,CAAC;QAAEC,OAAO,EAAE+E,eAAe,CAAC7E,EAAE,CAAC+D,OAAO;MAAE,CAAC,CAAC;IACpE;EAAC;EAAA,OAAA/C,MAAA;AAAA,KACF;EACC8D,aAAa,EAAE;IACXC,IAAI,WAAAA,KAACC,KAAK,EAAE;MACR,IAAIzS,KAAK,GAAG,IAAI,CAAC2K,IAAI,CAAC3K,KAAK,CAACuM,KAAK,CAACC,eAAe,EAAE,KAAK,CAAC;MACzD,IAAIxM,KAAK,IAAIA,KAAK,CAACgN,OAAO,IAAI,IAAI,CAACrC,IAAI,CAAC3K,KAAK,CAAC8M,KAAK,CAAC1D,gBAAgB,CAAC,CAACM,WAAW,EAAE;QAC/E,IAAIgJ,MAAM,GAAG1S,KAAK,CAACyM,IAAI,IAAIlN,UAAU,CAAC,IAAI,CAACoL,IAAI,EAAE3K,KAAK,CAACyM,IAAI,CAACO,OAAO,CAAC;QACpE,IAAI,CAAC0F,MAAM,IAAI,CAACA,MAAM,CAACxF,GAAG,CAACyF,QAAQ,CAACF,KAAK,CAACG,aAAa,CAAC,EACpD,IAAI,CAACjI,IAAI,CAAC2C,QAAQ,CAAC;UAAEC,OAAO,EAAEvG,qBAAqB,CAACyG,EAAE,CAAC,IAAI;QAAE,CAAC,CAAC;MACvE;IACJ,CAAC;IACDoF,gBAAgB,WAAAA,iBAAA,EAAG;MACf,IAAI,CAAChE,SAAS,GAAG,CAAC,CAAC;IACvB,CAAC;IACDiE,cAAc,WAAAA,eAAA,EAAG;MAAA,IAAAC,MAAA;MACb,IAAI,IAAI,CAAClE,SAAS,IAAI,CAAC,CAAC,wCAAwC;QAC5D;QACA;QACAuB,UAAU,CAAC;UAAA,OAAM2C,MAAI,CAACpI,IAAI,CAAC2C,QAAQ,CAAC;YAAEC,OAAO,EAAExG,qBAAqB,CAAC0G,EAAE,CAAC,KAAK;UAAE,CAAC,CAAC;QAAA,GAAE,EAAE,CAAC;MAC1F;MACA,IAAI,CAACoB,SAAS,GAAG,CAAC,CAAC;IACvB;EACJ;AACJ,CAAC,CAAC;;AACF,SAASjB,eAAeA,CAACjD,IAAI,EAAEC,MAAM,EAAE;EACnC,IAAMoF,KAAK,GAAGpF,MAAM,CAAC1F,UAAU,CAAC8K,KAAK,IAAIpF,MAAM,CAAC1F,UAAU,CAACxB,KAAK;EAChE,IAAIsF,MAAM,GAAG2B,IAAI,CAAC3K,KAAK,CAACuM,KAAK,CAACC,eAAe,CAAC,CAACuB,MAAM,CAACkE,IAAI,CAAC,UAAA5H,CAAC;IAAA,OAAIA,CAAC,CAACrG,MAAM,IAAI4G,MAAM,CAAC5G,MAAM;EAAA,EAAC;EAC1F,IAAI,EAAEgF,MAAM,YAAY4I,YAAY,CAAC,EACjC,OAAO,KAAK;EAChB,IAAI,OAAO5B,KAAK,IAAI,QAAQ,EACxBrF,IAAI,CAAC2C,QAAQ,CAAC9K,MAAM,CAACyD,MAAM,CAACzD,MAAM,CAACyD,MAAM,CAAC,CAAC,CAAC,EAAEH,oBAAoB,CAAC6E,IAAI,CAAC3K,KAAK,EAAEgQ,KAAK,EAAEhH,MAAM,CAACjI,IAAI,EAAEiI,MAAM,CAAChI,EAAE,CAAC,CAAC,EAAE;IAAEgS,WAAW,EAAEpN,gBAAgB,CAAC6H,EAAE,CAAC7C,MAAM,CAAC1F,UAAU;EAAE,CAAC,CAAC,CAAC,CAAC,KAE1K8K,KAAK,CAACrF,IAAI,EAAEC,MAAM,CAAC1F,UAAU,EAAE8D,MAAM,CAACjI,IAAI,EAAEiI,MAAM,CAAChI,EAAE,CAAC;EAC1D,OAAO,IAAI;AACf;AAEA,SAASiS,aAAaA,CAACC,MAAM,EAAE;EAC3B,IAAIC,OAAO,GAAGD,MAAM,CAACjJ,YAAY,CAACpI,KAAK,CAAC,CAAC;EACzC,IAAIqR,MAAM,CAAClJ,KAAK,EACZmJ,OAAO,CAAC/Q,IAAI,CAAC;IACTgR,MAAM,WAAAA,OAAClO,UAAU,EAAE;MAAA,IAAAmO,eAAA;MACf,IAAIC,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;MACxCF,IAAI,CAACG,SAAS,CAACC,GAAG,CAAC,mBAAmB,CAAC;MACvC,IAAIxO,UAAU,CAAC/D,IAAI,EACf,CAAAkS,eAAA,GAAAC,IAAI,CAACG,SAAS,EAACC,GAAG,CAAA1D,KAAA,CAAAqD,eAAA,EAAApD,kBAAA,CAAI/K,UAAU,CAAC/D,IAAI,CAACwS,KAAK,CAAC,MAAM,CAAC,CAACvP,GAAG,CAAC,UAAAwP,GAAG;QAAA,OAAI,oBAAoB,GAAGA,GAAG;MAAA,EAAC,EAAC;MAC/FN,IAAI,CAACO,YAAY,CAAC,aAAa,EAAE,MAAM,CAAC;MACxC,OAAOP,IAAI;IACf,CAAC;IACDQ,QAAQ,EAAE;EACd,CAAC,CAAC;EACNX,OAAO,CAAC/Q,IAAI,CAAC;IACTgR,MAAM,WAAAA,OAAClO,UAAU,EAAE6O,EAAE,EAAEpP,KAAK,EAAE;MAC1B,IAAIqP,QAAQ,GAAGT,QAAQ,CAACC,aAAa,CAAC,MAAM,CAAC;MAC7CQ,QAAQ,CAACC,SAAS,GAAG,oBAAoB;MACrC,IAAEvQ,KAAK,GAAKwB,UAAU,CAApBxB,KAAK;QAAiBwQ,GAAG,GAAG,CAAC;MACnC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGxP,KAAK,CAACf,MAAM,GAAG;QAC/B,IAAI7C,IAAI,GAAG4D,KAAK,CAACwP,CAAC,EAAE,CAAC;UAAEnT,EAAE,GAAG2D,KAAK,CAACwP,CAAC,EAAE,CAAC;QACtC,IAAIpT,IAAI,GAAGmT,GAAG,EACVF,QAAQ,CAACI,WAAW,CAACb,QAAQ,CAACc,cAAc,CAAC3Q,KAAK,CAAC7B,KAAK,CAACqS,GAAG,EAAEnT,IAAI,CAAC,CAAC,CAAC;QACzE,IAAIuT,IAAI,GAAGN,QAAQ,CAACI,WAAW,CAACb,QAAQ,CAACC,aAAa,CAAC,MAAM,CAAC,CAAC;QAC/Dc,IAAI,CAACF,WAAW,CAACb,QAAQ,CAACc,cAAc,CAAC3Q,KAAK,CAAC7B,KAAK,CAACd,IAAI,EAAEC,EAAE,CAAC,CAAC,CAAC;QAChEsT,IAAI,CAACL,SAAS,GAAG,0BAA0B;QAC3CC,GAAG,GAAGlT,EAAE;MACZ;MACA,IAAIkT,GAAG,GAAGxQ,KAAK,CAACE,MAAM,EAClBoQ,QAAQ,CAACI,WAAW,CAACb,QAAQ,CAACc,cAAc,CAAC3Q,KAAK,CAAC7B,KAAK,CAACqS,GAAG,CAAC,CAAC,CAAC;MACnE,OAAOF,QAAQ;IACnB,CAAC;IACDF,QAAQ,EAAE;EACd,CAAC,EAAE;IACCV,MAAM,WAAAA,OAAClO,UAAU,EAAE;MACf,IAAI,CAACA,UAAU,CAACqP,MAAM,EAClB,OAAO,IAAI;MACf,IAAIC,SAAS,GAAGjB,QAAQ,CAACC,aAAa,CAAC,MAAM,CAAC;MAC9CgB,SAAS,CAACP,SAAS,GAAG,qBAAqB;MAC3CO,SAAS,CAACC,WAAW,GAAGvP,UAAU,CAACqP,MAAM;MACzC,OAAOC,SAAS;IACpB,CAAC;IACDV,QAAQ,EAAE;EACd,CAAC,CAAC;EACF,OAAOX,OAAO,CAACuB,IAAI,CAAC,UAACrK,CAAC,EAAEC,CAAC;IAAA,OAAKD,CAAC,CAACyJ,QAAQ,GAAGxJ,CAAC,CAACwJ,QAAQ;EAAA,EAAC,CAAC1P,GAAG,CAAC,UAAAiG,CAAC;IAAA,OAAIA,CAAC,CAAC+I,MAAM;EAAA,EAAC;AAC7E;AACA,SAASuB,mBAAmBA,CAACC,KAAK,EAAEvH,QAAQ,EAAE1L,GAAG,EAAE;EAC/C,IAAIiT,KAAK,IAAIjT,GAAG,EACZ,OAAO;IAAEZ,IAAI,EAAE,CAAC;IAAEC,EAAE,EAAE4T;EAAM,CAAC;EACjC,IAAIvH,QAAQ,GAAG,CAAC,EACZA,QAAQ,GAAG,CAAC;EAChB,IAAIA,QAAQ,IAAKuH,KAAK,IAAI,CAAE,EAAE;IAC1B,IAAIV,IAAG,GAAGxS,IAAI,CAACuL,KAAK,CAACI,QAAQ,GAAG1L,GAAG,CAAC;IACpC,OAAO;MAAEZ,IAAI,EAAEmT,IAAG,GAAGvS,GAAG;MAAEX,EAAE,EAAE,CAACkT,IAAG,GAAG,CAAC,IAAIvS;IAAI,CAAC;EACnD;EACA,IAAIuS,GAAG,GAAGxS,IAAI,CAACuL,KAAK,CAAC,CAAC2H,KAAK,GAAGvH,QAAQ,IAAI1L,GAAG,CAAC;EAC9C,OAAO;IAAEZ,IAAI,EAAE6T,KAAK,GAAG,CAACV,GAAG,GAAG,CAAC,IAAIvS,GAAG;IAAEX,EAAE,EAAE4T,KAAK,GAAGV,GAAG,GAAGvS;EAAI,CAAC;AACnE;AAAC,IACKkT,iBAAiB;EACnB,SAAAA,kBAAYlK,IAAI,EAAEmK,UAAU,EAAE;IAAA,IAAAC,MAAA;IAAA5U,eAAA,OAAA0U,iBAAA;IAC1B,IAAI,CAAClK,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACmK,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACjK,IAAI,GAAG,IAAI;IAChB,IAAI,CAACmK,YAAY,GAAG;MAChBC,IAAI,EAAE,SAAAA,KAAA;QAAA,OAAMF,MAAI,CAACG,WAAW,CAAC,CAAC;MAAA;MAC9BC,KAAK,EAAE,SAAAA,MAAClV,GAAG;QAAA,OAAK8U,MAAI,CAACK,SAAS,CAACnV,GAAG,CAAC;MAAA;MACnCK,GAAG,EAAE;IACT,CAAC;IACD,IAAI,CAACwK,KAAK,GAAG,IAAI;IACjB,IAAI,CAACuK,YAAY,GAAG,EAAE;IACtB,IAAI/I,MAAM,GAAG3B,IAAI,CAAC3K,KAAK,CAACuM,KAAK,CAACuI,UAAU,CAAC;IACzC,IAAAQ,YAAA,GAA4BhJ,MAAM,CAACG,IAAI;MAAjCzJ,OAAO,GAAAsS,YAAA,CAAPtS,OAAO;MAAEqK,QAAQ,GAAAiI,YAAA,CAARjI,QAAQ;IACvB,IAAI6F,MAAM,GAAGvI,IAAI,CAAC3K,KAAK,CAAC8M,KAAK,CAAC1D,gBAAgB,CAAC;IAC/C,IAAI,CAAC6J,aAAa,GAAGA,aAAa,CAACC,MAAM,CAAC;IAC1C,IAAI,CAACpJ,WAAW,GAAGoJ,MAAM,CAACpJ,WAAW;IACrC,IAAI,CAACD,YAAY,GAAGqJ,MAAM,CAACrJ,YAAY;IACvC,IAAI,CAAC1D,KAAK,GAAGwO,mBAAmB,CAAC3R,OAAO,CAACY,MAAM,EAAEyJ,QAAQ,EAAE6F,MAAM,CAACvJ,kBAAkB,CAAC;IACrF,IAAI,CAACuD,GAAG,GAAGqG,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;IACxC,IAAI,CAACtG,GAAG,CAAC+G,SAAS,GAAG,yBAAyB;IAC9C,IAAI,CAACsB,kBAAkB,CAAC5K,IAAI,CAAC3K,KAAK,CAAC;IACnC,IAAI,CAACkN,GAAG,CAAChL,gBAAgB,CAAC,WAAW,EAAE,UAAC4B,CAAC,EAAK;MAC1C,KAAK,IAAIoJ,GAAG,GAAGpJ,CAAC,CAAC0R,MAAM,EAAE7Q,KAAK,EAAEuI,GAAG,IAAIA,GAAG,IAAI6H,MAAI,CAAC7H,GAAG,EAAEA,GAAG,GAAGA,GAAG,CAACuI,UAAU,EAAE;QAC1E,IAAIvI,GAAG,CAACwI,QAAQ,IAAI,IAAI,KAAK/Q,KAAK,GAAG,SAAS,CAACgR,IAAI,CAACzI,GAAG,CAAC0I,EAAE,CAAC,CAAC,IAAI,CAACjR,KAAK,CAAC,CAAC,CAAC,GAAG3B,OAAO,CAACY,MAAM,EAAE;UACxFgK,eAAe,CAACjD,IAAI,EAAE3H,OAAO,CAAC,CAAC2B,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;UACzCb,CAAC,CAAC+R,cAAc,CAAC,CAAC;UAClB;QACJ;MACJ;IACJ,CAAC,CAAC;IACF,IAAI,CAAC3I,GAAG,CAAChL,gBAAgB,CAAC,UAAU,EAAE,UAAC4B,CAAC,EAAK;MACzC,IAAI9D,KAAK,GAAG2K,IAAI,CAAC3K,KAAK,CAACuM,KAAK,CAACwI,MAAI,CAACD,UAAU,EAAE,KAAK,CAAC;MACpD,IAAI9U,KAAK,IAAIA,KAAK,CAACgN,OAAO,IAAIrC,IAAI,CAAC3K,KAAK,CAAC8M,KAAK,CAAC1D,gBAAgB,CAAC,CAACM,WAAW,IACxE5F,CAAC,CAAC8O,aAAa,IAAIjI,IAAI,CAACmL,UAAU,EAClCnL,IAAI,CAAC2C,QAAQ,CAAC;QAAEC,OAAO,EAAEvG,qBAAqB,CAACyG,EAAE,CAAC,IAAI;MAAE,CAAC,CAAC;IAClE,CAAC,CAAC;IACF,IAAI,CAACtJ,IAAI,GAAG,IAAI,CAAC+I,GAAG,CAACkH,WAAW,CAAC,IAAI,CAAC2B,aAAa,CAAC/S,OAAO,EAAEsJ,MAAM,CAACsJ,EAAE,EAAE,IAAI,CAACzP,KAAK,CAAC,CAAC;IACpF,IAAI,CAAChC,IAAI,CAACjC,gBAAgB,CAAC,QAAQ,EAAE,YAAM;MACvC,IAAI6S,MAAI,CAAClK,IAAI,EACTkK,MAAI,CAACpK,IAAI,CAACqL,cAAc,CAACjB,MAAI,CAACC,YAAY,CAAC;IACnD,CAAC,CAAC;EACN;EAAC3U,YAAA,CAAAwU,iBAAA;IAAAvU,GAAA;IAAAC,KAAA,EACD,SAAA0V,MAAA,EAAQ;MAAE,IAAI,CAACC,SAAS,CAAC,CAAC;IAAE;EAAC;IAAA5V,GAAA;IAAAC,KAAA,EAC7B,SAAA0O,OAAOA,QAAM,EAAE;MACX,IAAI1J,EAAE,EAAE4Q,EAAE,EAAEC,EAAE;MACd,IAAI9J,MAAM,GAAG2C,QAAM,CAACjP,KAAK,CAACuM,KAAK,CAAC,IAAI,CAACuI,UAAU,CAAC;MAChD,IAAIuB,SAAS,GAAGpH,QAAM,CAACI,UAAU,CAAC9C,KAAK,CAAC,IAAI,CAACuI,UAAU,CAAC;MACxD,IAAI,CAACS,kBAAkB,CAACtG,QAAM,CAACjP,KAAK,CAAC;MACrC,IAAIsM,MAAM,IAAI+J,SAAS,EAAE;QACrB,IAAI,CAACH,SAAS,CAAC,CAAC;QAChB,IAAI,CAAC,CAAC3Q,EAAE,GAAG+G,MAAM,CAACG,IAAI,MAAM,IAAI,IAAIlH,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACmH,QAAQ,MAAM,CAACyJ,EAAE,GAAGE,SAAS,CAAC5J,IAAI,MAAM,IAAI,IAAI0J,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACzJ,QAAQ,CAAC,EACjJ,IAAI,CAACQ,GAAG,CAACuG,SAAS,CAAC6C,MAAM,CAAC,kCAAkC,EAAE,CAAC,EAAE,CAACF,EAAE,GAAG9J,MAAM,CAACG,IAAI,MAAM,IAAI,IAAI2J,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAAC1J,QAAQ,CAAC,CAAC;MAC9I;IACJ;EAAC;IAAApM,GAAA;IAAAC,KAAA,EACD,SAAAgV,mBAAmBvV,KAAK,EAAE;MACtB,IAAI4T,GAAG,GAAG,IAAI,CAAC/J,YAAY,CAAC7J,KAAK,CAAC;MAClC,IAAI4T,GAAG,IAAI,IAAI,CAACyB,YAAY,EAAE;QAAA,IAAAkB,UAAA,GAAAlT,0BAAA,CACZ,IAAI,CAACgS,YAAY,CAAC1B,KAAK,CAAC,GAAG,CAAC;UAAA6C,MAAA;QAAA;UAA1C,KAAAD,UAAA,CAAAhT,CAAA,MAAAiT,MAAA,GAAAD,UAAA,CAAA/S,CAAA,IAAAC,IAAA,GACI;YAAA,IADKgH,CAAC,GAAA+L,MAAA,CAAAjW,KAAA;YACN,IAAIkK,CAAC,EACD,IAAI,CAACyC,GAAG,CAACuG,SAAS,CAACgD,MAAM,CAAChM,CAAC,CAAC;UAAA;QAAC,SAAA5G,GAAA;UAAA0S,UAAA,CAAAzS,CAAA,CAAAD,GAAA;QAAA;UAAA0S,UAAA,CAAAxS,CAAA;QAAA;QAAA,IAAA2S,WAAA,GAAArT,0BAAA,CACvBuQ,GAAG,CAACD,KAAK,CAAC,GAAG,CAAC;UAAAgD,OAAA;QAAA;UAA5B,KAAAD,WAAA,CAAAnT,CAAA,MAAAoT,OAAA,GAAAD,WAAA,CAAAlT,CAAA,IAAAC,IAAA,GACI;YAAA,IADKgH,GAAC,GAAAkM,OAAA,CAAApW,KAAA;YACN,IAAIkK,GAAC,EACD,IAAI,CAACyC,GAAG,CAACuG,SAAS,CAACC,GAAG,CAACjJ,GAAC,CAAC;UAAA;QAAC,SAAA5G,GAAA;UAAA6S,WAAA,CAAA5S,CAAA,CAAAD,GAAA;QAAA;UAAA6S,WAAA,CAAA3S,CAAA;QAAA;QAClC,IAAI,CAACsR,YAAY,GAAGzB,GAAG;MAC3B;IACJ;EAAC;IAAAtT,GAAA;IAAAC,KAAA,EACD,SAAAqW,WAAW9L,KAAK,EAAE;MACd,IAAI,CAACA,KAAK,GAAGA,KAAK;MAClB,IAAI,IAAI,CAACD,IAAI,EACT,IAAI,CAACF,IAAI,CAACqL,cAAc,CAAC,IAAI,CAAChB,YAAY,CAAC;IACnD;EAAC;IAAA1U,GAAA;IAAAC,KAAA,EACD,SAAA2V,UAAA,EAAY;MAAA,IAAAW,MAAA;MACR,IAAIvK,MAAM,GAAG,IAAI,CAAC3B,IAAI,CAAC3K,KAAK,CAACuM,KAAK,CAAC,IAAI,CAACuI,UAAU,CAAC;QAAErI,IAAI,GAAGH,MAAM,CAACG,IAAI;MACvE,IAAIA,IAAI,CAACY,QAAQ,GAAG,CAAC,CAAC,IAAIZ,IAAI,CAACY,QAAQ,GAAG,IAAI,CAAClH,KAAK,CAACpF,IAAI,IAAI0L,IAAI,CAACY,QAAQ,IAAI,IAAI,CAAClH,KAAK,CAACnF,EAAE,EAAE;QACzF,IAAI,CAACmF,KAAK,GAAGwO,mBAAmB,CAAClI,IAAI,CAACzJ,OAAO,CAACY,MAAM,EAAE6I,IAAI,CAACY,QAAQ,EAAE,IAAI,CAAC1C,IAAI,CAAC3K,KAAK,CAAC8M,KAAK,CAAC1D,gBAAgB,CAAC,CAACO,kBAAkB,CAAC;QAChI,IAAI,CAACxF,IAAI,CAACsS,MAAM,CAAC,CAAC;QAClB,IAAI,CAACtS,IAAI,GAAG,IAAI,CAAC+I,GAAG,CAACkH,WAAW,CAAC,IAAI,CAAC2B,aAAa,CAACtJ,IAAI,CAACzJ,OAAO,EAAEsJ,MAAM,CAACsJ,EAAE,EAAE,IAAI,CAACzP,KAAK,CAAC,CAAC;QACzF,IAAI,CAAChC,IAAI,CAACjC,gBAAgB,CAAC,QAAQ,EAAE,YAAM;UACvC,IAAI2U,MAAI,CAAChM,IAAI,EACTgM,MAAI,CAAClM,IAAI,CAACqL,cAAc,CAACa,MAAI,CAAC7B,YAAY,CAAC;QACnD,CAAC,CAAC;MACN;MACA,IAAI,IAAI,CAAC8B,oBAAoB,CAACrK,IAAI,CAACY,QAAQ,CAAC,EAAE;QAC1C,IAAI,IAAI,CAACxC,IAAI,EAAE;UACX,IAAI,CAACA,IAAI,CAAC4L,MAAM,CAAC,CAAC;UAClB,IAAI,CAAC5L,IAAI,GAAG,IAAI;QACpB;QACA,IAAM3F,UAAU,GAAKuH,IAAI,CAACzJ,OAAO,CAACyJ,IAAI,CAACY,QAAQ,CAAC,CAA1CnI,UAAU;QAChB,IAAM2F,IAAI,GAAK3F,UAAU,CAAnB2F,IAAI;QACV,IAAI,CAACA,IAAI,EACL;QACJ,IAAIkM,UAAU,GAAG,OAAOlM,IAAI,KAAK,QAAQ,GAAG0I,QAAQ,CAACc,cAAc,CAACxJ,IAAI,CAAC,GAAGA,IAAI,CAAC3F,UAAU,CAAC;QAC5F,IAAI,CAAC6R,UAAU,EACX;QACJ,IAAI,MAAM,IAAIA,UAAU,EAAE;UACtBA,UAAU,CAAC7F,IAAI,CAAC,UAAA8F,IAAI,EAAI;YACpB,IAAIA,IAAI,IAAIH,MAAI,CAAClM,IAAI,CAAC3K,KAAK,CAACuM,KAAK,CAACsK,MAAI,CAAC/B,UAAU,EAAE,KAAK,CAAC,IAAIxI,MAAM,EAC/DuK,MAAI,CAACI,WAAW,CAACD,IAAI,CAAC;UAC9B,CAAC,CAAC,CAACE,KAAK,CAAC,UAAApT,CAAC;YAAA,OAAIxE,YAAY,CAACuX,MAAI,CAAClM,IAAI,CAAC3K,KAAK,EAAE8D,CAAC,EAAE,iBAAiB,CAAC;UAAA,EAAC;QACtE,CAAC,MACI;UACD,IAAI,CAACmT,WAAW,CAACF,UAAU,CAAC;QAChC;MACJ;IACJ;EAAC;IAAAzW,GAAA;IAAAC,KAAA,EACD,SAAA0W,YAAY9D,OAAO,EAAE;MACjB,IAAIjG,GAAG,GAAG,IAAI,CAACrC,IAAI,GAAG0I,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;MACnDtG,GAAG,CAAC+G,SAAS,GAAG,8BAA8B;MAC9C/G,GAAG,CAACkH,WAAW,CAACjB,OAAO,CAAC;MACxB,IAAI,CAACjG,GAAG,CAACkH,WAAW,CAAClH,GAAG,CAAC;MACzB,IAAI,CAACvC,IAAI,CAACqL,cAAc,CAAC,IAAI,CAAChB,YAAY,CAAC;IAC/C;EAAC;IAAA1U,GAAA;IAAAC,KAAA,EACD,SAAAuW,qBAAqBzJ,QAAQ,EAAE;MAC3B,IAAIvG,GAAG,GAAG,IAAI;MACd,KAAK,IAAIqQ,GAAG,GAAG,IAAI,CAAChT,IAAI,CAACiT,UAAU,EAAEzT,CAAC,GAAG,IAAI,CAACwC,KAAK,CAACpF,IAAI,EAAEoW,GAAG,EAAEA,GAAG,GAAGA,GAAG,CAACE,WAAW,EAAE1T,CAAC,EAAE,EAAE;QACvF,IAAIwT,GAAG,CAACzB,QAAQ,IAAI,IAAI,IAAI,CAACyB,GAAG,CAACvB,EAAE,EAAE;UACjCjS,CAAC,EAAE,CAAC,CAAC;QACT,CAAC,MACI,IAAIA,CAAC,IAAI0J,QAAQ,EAAE;UACpB,IAAI,CAAC8J,GAAG,CAACG,YAAY,CAAC,eAAe,CAAC,EAAE;YACpCH,GAAG,CAACtD,YAAY,CAAC,eAAe,EAAE,MAAM,CAAC;YACzC/M,GAAG,GAAGqQ,GAAG;UACb;QACJ,CAAC,MACI;UACD,IAAIA,GAAG,CAACG,YAAY,CAAC,eAAe,CAAC,EACjCH,GAAG,CAACI,eAAe,CAAC,eAAe,CAAC;QAC5C;MACJ;MACA,IAAIzQ,GAAG,EACH0Q,cAAc,CAAC,IAAI,CAACrT,IAAI,EAAE2C,GAAG,CAAC;MAClC,OAAOA,GAAG;IACd;EAAC;IAAAxG,GAAA;IAAAC,KAAA,EACD,SAAA2U,YAAA,EAAc;MACV,IAAIuC,GAAG,GAAG,IAAI,CAACvK,GAAG,CAACE,aAAa,CAAC,iBAAiB,CAAC;MACnD,IAAI,CAACqK,GAAG,IAAI,CAAC,IAAI,CAAC5M,IAAI,EAClB,OAAO,IAAI;MACf,IAAI6M,QAAQ,GAAG,IAAI,CAACxK,GAAG,CAACyK,qBAAqB,CAAC,CAAC;MAC/C,IAAIC,QAAQ,GAAG,IAAI,CAAC/M,IAAI,CAAC8M,qBAAqB,CAAC,CAAC;MAChD,IAAIE,OAAO,GAAGJ,GAAG,CAACE,qBAAqB,CAAC,CAAC;MACzC,IAAI7M,KAAK,GAAG,IAAI,CAACA,KAAK;MACtB,IAAI,CAACA,KAAK,EAAE;QACR,IAAIgN,GAAG,GAAG,IAAI,CAAC5K,GAAG,CAAC6K,aAAa,CAACC,WAAW,IAAIC,MAAM;QACtDnN,KAAK,GAAG;UAAEI,IAAI,EAAE,CAAC;UAAEW,GAAG,EAAE,CAAC;UAAEJ,KAAK,EAAEqM,GAAG,CAACI,UAAU;UAAEtM,MAAM,EAAEkM,GAAG,CAACK;QAAY,CAAC;MAC/E;MACA,IAAIN,OAAO,CAAChM,GAAG,GAAGnK,IAAI,CAAC0G,GAAG,CAAC0C,KAAK,CAACc,MAAM,EAAE8L,QAAQ,CAAC9L,MAAM,CAAC,GAAG,EAAE,IAC1DiM,OAAO,CAACjM,MAAM,GAAGlK,IAAI,CAACC,GAAG,CAACmJ,KAAK,CAACe,GAAG,EAAE6L,QAAQ,CAAC7L,GAAG,CAAC,GAAG,EAAE,EACvD,OAAO,IAAI;MACf,OAAO,IAAI,CAAClB,IAAI,CAAC3K,KAAK,CAAC8M,KAAK,CAAC1D,gBAAgB,CAAC,CAACc,YAAY,CAAC,IAAI,CAACS,IAAI,EAAE+M,QAAQ,EAAEG,OAAO,EAAED,QAAQ,EAAE9M,KAAK,CAAC;IAC9G;EAAC;IAAAxK,GAAA;IAAAC,KAAA,EACD,SAAA6U,UAAUnV,GAAG,EAAE;MACX,IAAI,IAAI,CAAC4K,IAAI,EAAE;QACX,IAAI5K,GAAG,EAAE;UACL,IAAIA,GAAG,CAAC8L,KAAK,EACT,IAAI,CAAClB,IAAI,CAACkB,KAAK,CAACqM,OAAO,GAAGnY,GAAG,CAAC8L,KAAK;UACvC,IAAI,CAAClB,IAAI,CAACoJ,SAAS,GAAG,+BAA+B,IAAIhU,GAAG,CAAC+L,KAAK,IAAI,EAAE,CAAC;QAC7E,CAAC,MACI;UACD,IAAI,CAACnB,IAAI,CAACkB,KAAK,CAACqM,OAAO,GAAG,aAAa;QAC3C;MACJ;IACJ;EAAC;IAAA9X,GAAA;IAAAC,KAAA,EACD,SAAAwV,cAAc/S,OAAO,EAAE4S,EAAE,EAAEzP,KAAK,EAAE;MAC9B,IAAMkS,EAAE,GAAG9E,QAAQ,CAACC,aAAa,CAAC,IAAI,CAAC;MACvC6E,EAAE,CAACzC,EAAE,GAAGA,EAAE;MACVyC,EAAE,CAACxE,YAAY,CAAC,MAAM,EAAE,SAAS,CAAC;MAClCwE,EAAE,CAACxE,YAAY,CAAC,eAAe,EAAE,MAAM,CAAC;MACxCwE,EAAE,CAACxE,YAAY,CAAC,YAAY,EAAE,IAAI,CAAClJ,IAAI,CAAC3K,KAAK,CAACsY,MAAM,CAAC,aAAa,CAAC,CAAC;MACpE,IAAIC,UAAU,GAAG,IAAI;MACrB,KAAK,IAAI5U,CAAC,GAAGwC,KAAK,CAACpF,IAAI,EAAE4C,CAAC,GAAGwC,KAAK,CAACnF,EAAE,EAAE2C,CAAC,EAAE,EAAE;QACxC,IAAA6U,UAAA,GAA4BxV,OAAO,CAACW,CAAC,CAAC;UAAhCuB,UAAU,GAAAsT,UAAA,CAAVtT,UAAU;UAAEP,KAAK,GAAA6T,UAAA,CAAL7T,KAAK;UAAmB8T,OAAO,GAAKvT,UAAU,CAAtBuT,OAAO;QACjD,IAAIA,OAAO,EAAE;UACT,IAAI5X,IAAI,GAAG,OAAO4X,OAAO,IAAI,QAAQ,GAAGA,OAAO,GAAGA,OAAO,CAAC5X,IAAI;UAC9D,IAAIA,IAAI,IAAI0X,UAAU,KAAK5U,CAAC,GAAGwC,KAAK,CAACpF,IAAI,IAAIoF,KAAK,CAACpF,IAAI,IAAI,CAAC,CAAC,EAAE;YAC3DwX,UAAU,GAAG1X,IAAI;YACjB,IAAI,OAAO4X,OAAO,IAAI,QAAQ,IAAIA,OAAO,CAACC,MAAM,EAAE;cAC9CL,EAAE,CAACjE,WAAW,CAACqE,OAAO,CAACC,MAAM,CAACD,OAAO,CAAC,CAAC;YAC3C,CAAC,MACI;cACD,IAAIC,MAAM,GAAGL,EAAE,CAACjE,WAAW,CAACb,QAAQ,CAACC,aAAa,CAAC,oBAAoB,CAAC,CAAC;cACzEkF,MAAM,CAACjE,WAAW,GAAG5T,IAAI;YAC7B;UACJ;QACJ;QACA,IAAM8X,EAAE,GAAGN,EAAE,CAACjE,WAAW,CAACb,QAAQ,CAACC,aAAa,CAAC,IAAI,CAAC,CAAC;QACvDmF,EAAE,CAAC/C,EAAE,GAAGA,EAAE,GAAG,GAAG,GAAGjS,CAAC;QACpBgV,EAAE,CAAC9E,YAAY,CAAC,MAAM,EAAE,QAAQ,CAAC;QACjC,IAAID,GAAG,GAAG,IAAI,CAAC9J,WAAW,CAAC5E,UAAU,CAAC;QACtC,IAAI0O,GAAG,EACH+E,EAAE,CAAC1E,SAAS,GAAGL,GAAG;QAAC,IAAAgF,WAAA,GAAAvV,0BAAA,CACJ,IAAI,CAAC4P,aAAa;UAAA4F,OAAA;QAAA;UAArC,KAAAD,WAAA,CAAArV,CAAA,MAAAsV,OAAA,GAAAD,WAAA,CAAApV,CAAA,IAAAC,IAAA,GAAuC;YAAA,IAA9BO,MAAM,GAAA6U,OAAA,CAAAtY,KAAA;YACX,IAAIyW,IAAI,GAAGhT,MAAM,CAACkB,UAAU,EAAE,IAAI,CAACyF,IAAI,CAAC3K,KAAK,EAAE2E,KAAK,CAAC;YACrD,IAAIqS,IAAI,EACJ2B,EAAE,CAACvE,WAAW,CAAC4C,IAAI,CAAC;UAC5B;QAAC,SAAAnT,GAAA;UAAA+U,WAAA,CAAA9U,CAAA,CAAAD,GAAA;QAAA;UAAA+U,WAAA,CAAA7U,CAAA;QAAA;MACL;MACA,IAAIoC,KAAK,CAACpF,IAAI,EACVsX,EAAE,CAAC5E,SAAS,CAACC,GAAG,CAAC,gCAAgC,CAAC;MACtD,IAAIvN,KAAK,CAACnF,EAAE,GAAGgC,OAAO,CAACY,MAAM,EACzByU,EAAE,CAAC5E,SAAS,CAACC,GAAG,CAAC,mCAAmC,CAAC;MACzD,OAAO2E,EAAE;IACb;EAAC;EAAA,OAAAxD,iBAAA;AAAA,KAEL;AACA;AACA,SAASiE,iBAAiBA,CAAChE,UAAU,EAAE;EACnC,OAAO,UAACnK,IAAI;IAAA,OAAK,IAAIkK,iBAAiB,CAAClK,IAAI,EAAEmK,UAAU,CAAC;EAAA;AAC5D;AACA,SAAS0C,cAAcA,CAACuB,SAAS,EAAEC,OAAO,EAAE;EACxC,IAAIlY,MAAM,GAAGiY,SAAS,CAACpB,qBAAqB,CAAC,CAAC;EAC9C,IAAIsB,IAAI,GAAGD,OAAO,CAACrB,qBAAqB,CAAC,CAAC;EAC1C,IAAIsB,IAAI,CAACpN,GAAG,GAAG/K,MAAM,CAAC+K,GAAG,EACrBkN,SAAS,CAACG,SAAS,IAAIpY,MAAM,CAAC+K,GAAG,GAAGoN,IAAI,CAACpN,GAAG,CAAC,KAC5C,IAAIoN,IAAI,CAACrN,MAAM,GAAG9K,MAAM,CAAC8K,MAAM,EAChCmN,SAAS,CAACG,SAAS,IAAID,IAAI,CAACrN,MAAM,GAAG9K,MAAM,CAAC8K,MAAM;AAC1D;;AAEA;AACA;AACA,SAASzG,KAAKA,CAACyF,MAAM,EAAE;EACnB,OAAO,CAACA,MAAM,CAACuO,KAAK,IAAI,CAAC,IAAI,GAAG,IAAIvO,MAAM,CAACoF,KAAK,GAAG,EAAE,GAAG,CAAC,CAAC,IAAIpF,MAAM,CAACC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,IAC7ED,MAAM,CAACzJ,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC;AAC7B;AACA,SAASiY,WAAWA,CAACrL,MAAM,EAAE/N,KAAK,EAAE;EAChC,IAAIgD,OAAO,GAAG,EAAE;EAChB,IAAIqW,QAAQ,GAAG,IAAI;EACnB,IAAIC,SAAS,GAAG,SAAZA,SAASA,CAAI1O,MAAM,EAAK;IACxB5H,OAAO,CAACZ,IAAI,CAACwI,MAAM,CAAC;IACpB,IAAM6N,OAAO,GAAK7N,MAAM,CAAC1F,UAAU,CAA7BuT,OAAO;IACb,IAAIA,OAAO,EAAE;MACT,IAAI,CAACY,QAAQ,EACTA,QAAQ,GAAG,EAAE;MACjB,IAAIxY,IAAI,GAAG,OAAO4X,OAAO,IAAI,QAAQ,GAAGA,OAAO,GAAGA,OAAO,CAAC5X,IAAI;MAC9D,IAAI,CAACwY,QAAQ,CAACrL,IAAI,CAAC,UAAAzK,CAAC;QAAA,OAAIA,CAAC,CAAC1C,IAAI,IAAIA,IAAI;MAAA,EAAC,EACnCwY,QAAQ,CAACjX,IAAI,CAAC,OAAOqW,OAAO,IAAI,QAAQ,GAAG;QAAE5X,IAAI,EAAJA;MAAK,CAAC,GAAG4X,OAAO,CAAC;IACtE;EACJ,CAAC;EAAC,IAAAc,WAAA,GAAAlW,0BAAA,CACY0K,MAAM;IAAAyL,OAAA;EAAA;IAApB,KAAAD,WAAA,CAAAhW,CAAA,MAAAiW,OAAA,GAAAD,WAAA,CAAA/V,CAAA,IAAAC,IAAA,GACI;MAAA,IADK4G,CAAC,GAAAmP,OAAA,CAAAjZ,KAAA;MACN,IAAI8J,CAAC,CAAC0H,SAAS,CAAC,CAAC,EAAE;QACf,IAAI1H,CAAC,CAACrB,MAAM,CAACyQ,MAAM,KAAK,KAAK,EAAE;UAC3B,IAAIC,QAAQ,GAAGrP,CAAC,CAACrB,MAAM,CAAC0Q,QAAQ;UAAC,IAAAC,WAAA,GAAAtW,0BAAA,CACdgH,CAAC,CAACrB,MAAM,CAAChG,OAAO;YAAA4W,OAAA;UAAA;YAAnC,KAAAD,WAAA,CAAApW,CAAA,MAAAqW,OAAA,GAAAD,WAAA,CAAAnW,CAAA,IAAAC,IAAA,GAAqC;cAAA,IAA5BmH,OAAM,GAAAgP,OAAA,CAAArZ,KAAA;cACX,IAAIoE,KAAK,GAAG,CAAC,GAAG,GAAG3B,OAAO,CAACY,MAAM,CAAC;cAClC,IAAI8V,QAAQ;gBAAA,IAAAG,WAAA,GAAAxW,0BAAA,CACMqW,QAAQ,CAAC9O,OAAM,CAAC;kBAAAkP,OAAA;gBAAA;kBAA9B,KAAAD,WAAA,CAAAtW,CAAA,MAAAuW,OAAA,GAAAD,WAAA,CAAArW,CAAA,IAAAC,IAAA,GACI;oBAAA,IADKD,CAAC,GAAAsW,OAAA,CAAAvZ,KAAA;oBACNoE,KAAK,CAACvC,IAAI,CAACoB,CAAC,CAAC;kBAAA;gBAAC,SAAAK,GAAA;kBAAAgW,WAAA,CAAA/V,CAAA,CAAAD,GAAA;gBAAA;kBAAAgW,WAAA,CAAA9V,CAAA;gBAAA;cAAA;cACtBuV,SAAS,CAAC,IAAIrU,MAAM,CAAC2F,OAAM,EAAEP,CAAC,CAACrG,MAAM,EAAEW,KAAK,EAAEA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YAC5D;UAAC,SAAAd,GAAA;YAAA8V,WAAA,CAAA7V,CAAA,CAAAD,GAAA;UAAA;YAAA8V,WAAA,CAAA5V,CAAA;UAAA;QACL,CAAC,MACI;UACD,IAAIgW,OAAO,GAAG,IAAI9S,YAAY,CAACjH,KAAK,CAACkB,QAAQ,CAACmJ,CAAC,CAACtJ,IAAI,EAAEsJ,CAAC,CAACrJ,EAAE,CAAC,CAAC;YAAE2D,MAAK;UAAC,IAAAqV,WAAA,GAAA3W,0BAAA,CACjDgH,CAAC,CAACrB,MAAM,CAAChG,OAAO;YAAAiX,OAAA;UAAA;YAAnC,KAAAD,WAAA,CAAAzW,CAAA,MAAA0W,OAAA,GAAAD,WAAA,CAAAxW,CAAA,IAAAC,IAAA,GACI;cAAA,IADKmH,QAAM,GAAAqP,OAAA,CAAA1Z,KAAA;cACX,IAAIoE,MAAK,GAAGoV,OAAO,CAACpV,KAAK,CAACiG,QAAM,CAAClH,KAAK,CAAC,EAAE;gBACrC4V,SAAS,CAAC,IAAIrU,MAAM,CAAC2F,QAAM,EAAEP,CAAC,CAACrG,MAAM,EAAEW,MAAK,EAAEA,MAAK,CAAC,CAAC,CAAC,IAAIiG,QAAM,CAACuO,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC;cAClF;YAAA;UAAC,SAAAtV,GAAA;YAAAmW,WAAA,CAAAlW,CAAA,CAAAD,GAAA;UAAA;YAAAmW,WAAA,CAAAjW,CAAA;UAAA;QACT;MACJ;IAAA;EAAC,SAAAF,GAAA;IAAA0V,WAAA,CAAAzV,CAAA,CAAAD,GAAA;EAAA;IAAA0V,WAAA,CAAAxV,CAAA;EAAA;EACL,IAAIsV,QAAQ,EAAE;IACV,IAAIa,YAAY,GAAG1X,MAAM,CAACU,MAAM,CAAC,IAAI,CAAC;MAAEjD,GAAG,GAAG,CAAC;IAC/C,IAAIka,GAAG,GAAG,SAANA,GAAGA,CAAI9P,CAAC,EAAEC,CAAC,EAAK;MAAE,IAAI/E,EAAE,EAAE4Q,EAAE;MAAE,OAAO,CAAC,CAAC5Q,EAAE,GAAG8E,CAAC,CAAC+P,IAAI,MAAM,IAAI,IAAI7U,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,GAAG,KAAK,CAAC4Q,EAAE,GAAG7L,CAAC,CAAC8P,IAAI,MAAM,IAAI,IAAIjE,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,GAAG,CAAC,KAAK9L,CAAC,CAACxJ,IAAI,GAAGyJ,CAAC,CAACzJ,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;IAAE,CAAC;IAAC,IAAAwZ,WAAA,GAAAhX,0BAAA,CACxKgW,QAAQ,CAAC3E,IAAI,CAACyF,GAAG,CAAC;MAAAG,OAAA;IAAA;MAAhC,KAAAD,WAAA,CAAA9W,CAAA,MAAA+W,OAAA,GAAAD,WAAA,CAAA7W,CAAA,IAAAC,IAAA,GAAkC;QAAA,IAAzBF,CAAC,GAAA+W,OAAA,CAAA/Z,KAAA;QACNN,GAAG,IAAI,GAAG;QACVia,YAAY,CAAC3W,CAAC,CAAC1C,IAAI,CAAC,GAAGZ,GAAG;MAC9B;IAAC,SAAA4D,GAAA;MAAAwW,WAAA,CAAAvW,CAAA,CAAAD,GAAA;IAAA;MAAAwW,WAAA,CAAAtW,CAAA;IAAA;IAAA,IAAAwW,WAAA,GAAAlX,0BAAA,CACkBL,OAAO;MAAAwX,OAAA;IAAA;MAA1B,KAAAD,WAAA,CAAAhX,CAAA,MAAAiX,OAAA,GAAAD,WAAA,CAAA/W,CAAA,IAAAC,IAAA,GAA4B;QAAA,IAAnBmH,MAAM,GAAA4P,OAAA,CAAAja,KAAA;QACX,IAAMkY,OAAO,GAAK7N,MAAM,CAAC1F,UAAU,CAA7BuT,OAAO;QACb,IAAIA,OAAO,EACP7N,MAAM,CAACzF,KAAK,IAAI+U,YAAY,CAAC,OAAOzB,OAAO,IAAI,QAAQ,GAAGA,OAAO,GAAGA,OAAO,CAAC5X,IAAI,CAAC;MACzF;IAAC,SAAAgD,GAAA;MAAA0W,WAAA,CAAAzW,CAAA,CAAAD,GAAA;IAAA;MAAA0W,WAAA,CAAAxW,CAAA;IAAA;EACL;EACA,IAAIiF,MAAM,GAAG,EAAE;IAAEyR,IAAI,GAAG,IAAI;EAC5B,IAAIC,OAAO,GAAG1a,KAAK,CAAC8M,KAAK,CAAC1D,gBAAgB,CAAC,CAACgB,kBAAkB;EAAC,IAAAuQ,WAAA,GAAAtX,0BAAA,CAC/CL,OAAO,CAAC0R,IAAI,CAAC,UAACrK,CAAC,EAAEC,CAAC;MAAA,OAAMA,CAAC,CAACnF,KAAK,GAAGkF,CAAC,CAAClF,KAAK,IAAKuV,OAAO,CAACrQ,CAAC,CAACnF,UAAU,EAAEoF,CAAC,CAACpF,UAAU,CAAC;IAAA,EAAC;IAAA0V,OAAA;EAAA;IAAlG,KAAAD,WAAA,CAAApX,CAAA,MAAAqX,OAAA,GAAAD,WAAA,CAAAnX,CAAA,IAAAC,IAAA,GAAoG;MAAA,IAA3F0T,GAAG,GAAAyD,OAAA,CAAAra,KAAA;MACR,IAAI,CAACka,IAAI,IAAIA,IAAI,CAAC/W,KAAK,IAAIyT,GAAG,CAACjS,UAAU,CAACxB,KAAK,IAAI+W,IAAI,CAAClG,MAAM,IAAI4C,GAAG,CAACjS,UAAU,CAACqP,MAAM,IAClFkG,IAAI,CAACtZ,IAAI,IAAI,IAAI,IAAIgW,GAAG,CAACjS,UAAU,CAAC/D,IAAI,IAAI,IAAI,IAAIsZ,IAAI,CAACtZ,IAAI,IAAIgW,GAAG,CAACjS,UAAU,CAAC/D,IAAK,IACtFsZ,IAAI,CAACzK,KAAK,IAAImH,GAAG,CAACjS,UAAU,CAAC8K,KAAK,EAClChH,MAAM,CAAC5G,IAAI,CAAC+U,GAAG,CAAC,CAAC,KAChB,IAAIhS,KAAK,CAACgS,GAAG,CAACjS,UAAU,CAAC,GAAGC,KAAK,CAACsV,IAAI,CAAC,EACxCzR,MAAM,CAACA,MAAM,CAACpF,MAAM,GAAG,CAAC,CAAC,GAAGuT,GAAG;MACnCsD,IAAI,GAAGtD,GAAG,CAACjS,UAAU;IACzB;EAAC,SAAArB,GAAA;IAAA8W,WAAA,CAAA7W,CAAA,CAAAD,GAAA;EAAA;IAAA8W,WAAA,CAAA5W,CAAA;EAAA;EACD,OAAOiF,MAAM;AACjB;AAAC,IACK6R,gBAAgB;EAClB,SAAAA,iBAAY7X,OAAO,EAAE8X,KAAK,EAAE9N,OAAO,EAAEH,SAAS,EAAEQ,QAAQ,EAAEX,QAAQ,EAAE;IAAAvM,eAAA,OAAA0a,gBAAA;IAChE,IAAI,CAAC7X,OAAO,GAAGA,OAAO;IACtB,IAAI,CAAC8X,KAAK,GAAGA,KAAK;IAClB,IAAI,CAAC9N,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACH,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACQ,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACX,QAAQ,GAAGA,QAAQ;EAC5B;EAACrM,YAAA,CAAAwa,gBAAA;IAAAva,GAAA;IAAAC,KAAA,EACD,SAAAwa,YAAY1N,QAAQ,EAAEuI,EAAE,EAAE;MACtB,OAAOvI,QAAQ,IAAI,IAAI,CAACA,QAAQ,IAAIA,QAAQ,IAAI,IAAI,CAACrK,OAAO,CAACY,MAAM,GAAG,IAAI,GACpE,IAAIiX,gBAAgB,CAAC,IAAI,CAAC7X,OAAO,EAAEgY,SAAS,CAACpF,EAAE,EAAEvI,QAAQ,CAAC,EAAE,IAAI,CAACL,OAAO,EAAE,IAAI,CAACH,SAAS,EAAEQ,QAAQ,EAAE,IAAI,CAACX,QAAQ,CAAC;IAC5H;EAAC;IAAApM,GAAA;IAAAC,KAAA,EAsBD,SAAA6D,IAAIgC,OAAO,EAAE;MACT,OAAO,IAAIyU,gBAAgB,CAAC,IAAI,CAAC7X,OAAO,EAAE,IAAI,CAAC8X,KAAK,EAAEtY,MAAM,CAACyD,MAAM,CAACzD,MAAM,CAACyD,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC+G,OAAO,CAAC,EAAE;QAAE/M,GAAG,EAAEmG,OAAO,CAAC6U,MAAM,CAAC,IAAI,CAACjO,OAAO,CAAC/M,GAAG;MAAE,CAAC,CAAC,EAAE,IAAI,CAAC4M,SAAS,EAAE,IAAI,CAACQ,QAAQ,EAAE,IAAI,CAACX,QAAQ,CAAC;IAClM;EAAC;IAAApM,GAAA;IAAAC,KAAA,EAvBD,SAAA2a,MAAanN,MAAM,EAAE/N,KAAK,EAAE4V,EAAE,EAAE6E,IAAI,EAAEhJ,IAAI,EAAE;MACxC,IAAIzO,OAAO,GAAGoW,WAAW,CAACrL,MAAM,EAAE/N,KAAK,CAAC;MACxC,IAAI,CAACgD,OAAO,CAACY,MAAM,EAAE;QACjB,OAAO6W,IAAI,IAAI1M,MAAM,CAACC,IAAI,CAAC,UAAA3D,CAAC;UAAA,OAAIA,CAAC,CAACrK,KAAK,IAAI,CAAC;QAAA,EAAC,mBAAmB,CAAC,GAC7D,IAAI6a,gBAAgB,CAACJ,IAAI,CAACzX,OAAO,EAAEyX,IAAI,CAACK,KAAK,EAAEL,IAAI,CAACzN,OAAO,EAAEyN,IAAI,CAAC5N,SAAS,EAAE4N,IAAI,CAACpN,QAAQ,EAAE,IAAI,CAAC,GAAG,IAAI;MAChH;MACA,IAAIA,QAAQ,GAAGrN,KAAK,CAAC8M,KAAK,CAAC1D,gBAAgB,CAAC,CAACI,YAAY,GAAG,CAAC,GAAG,CAAC,CAAC;MAClE,IAAIiR,IAAI,IAAIA,IAAI,CAACpN,QAAQ,IAAIA,QAAQ,IAAIoN,IAAI,CAACpN,QAAQ,IAAI,CAAC,CAAC,EAAE;QAC1D,IAAI8N,aAAa,GAAGV,IAAI,CAACzX,OAAO,CAACyX,IAAI,CAACpN,QAAQ,CAAC,CAACnI,UAAU;QAC1D,KAAK,IAAIvB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGX,OAAO,CAACY,MAAM,EAAED,CAAC,EAAE,EACnC,IAAIX,OAAO,CAACW,CAAC,CAAC,CAACuB,UAAU,IAAIiW,aAAa,EAAE;UACxC9N,QAAQ,GAAG1J,CAAC;UACZ;QACJ;MACR;MACA,OAAO,IAAIkX,gBAAgB,CAAC7X,OAAO,EAAEgY,SAAS,CAACpF,EAAE,EAAEvI,QAAQ,CAAC,EAAE;QAC1DpN,GAAG,EAAE8N,MAAM,CAACqN,MAAM,CAAC,UAAC/Q,CAAC,EAAEC,CAAC;UAAA,OAAKA,CAAC,CAACyH,SAAS,CAAC,CAAC,GAAGrQ,IAAI,CAAC0G,GAAG,CAACiC,CAAC,EAAEC,CAAC,CAACvJ,IAAI,CAAC,GAAGsJ,CAAC;QAAA,GAAE,GAAG,CAAC;QAC1EnH,MAAM,EAAE4V,iBAAiB,CAACtM,eAAe,CAAC;QAC1C6O,KAAK,EAAE5J,IAAI,CAAC1H;MAChB,CAAC,EAAE0Q,IAAI,GAAGA,IAAI,CAAC5N,SAAS,GAAGF,IAAI,CAACC,GAAG,CAAC,CAAC,EAAES,QAAQ,EAAE,KAAK,CAAC;IAC3D;EAAC;EAAA,OAAAwN,gBAAA;AAAA;AAAA,IAKCS,eAAe;EACjB,SAAAA,gBAAYvN,MAAM,EAAE6H,EAAE,EAAEnJ,IAAI,EAAE;IAAAtM,eAAA,OAAAmb,eAAA;IAC1B,IAAI,CAACvN,MAAM,GAAGA,MAAM;IACpB,IAAI,CAAC6H,EAAE,GAAGA,EAAE;IACZ,IAAI,CAACnJ,IAAI,GAAGA,IAAI;EACpB;EAACpM,YAAA,CAAAib,eAAA;IAAAhb,GAAA;IAAAC,KAAA,EAID,SAAA0O,OAAOO,EAAE,EAAE;MAAA,IAAA+L,MAAA;MACH,IAAEvb,KAAK,GAAKwP,EAAE,CAAZxP,KAAK;QAASyR,IAAI,GAAGzR,KAAK,CAAC8M,KAAK,CAAC1D,gBAAgB,CAAC;MACxD,IAAIoS,OAAO,GAAG/J,IAAI,CAAChI,QAAQ,IACvBzJ,KAAK,CAACyb,cAAc,CAAC,cAAc,EAAErW,GAAG,CAACpF,KAAK,CAAC,CAAC,CAACoE,GAAG,CAACsC,QAAQ,CAAC;MAClE,IAAIqH,MAAM,GAAGyN,OAAO,CAACpX,GAAG,CAAC,UAAAJ,MAAM,EAAI;QAC/B,IAAIzD,KAAK,GAAGgb,MAAI,CAACxN,MAAM,CAACkE,IAAI,CAAC,UAAA1O,CAAC;UAAA,OAAIA,CAAC,CAACS,MAAM,IAAIA,MAAM;QAAA,EAAC,IACjD,IAAIkO,YAAY,CAAClO,MAAM,EAAEuX,MAAI,CAACxN,MAAM,CAACC,IAAI,CAAC,UAAA3D,CAAC;UAAA,OAAIA,CAAC,CAACrK,KAAK,IAAI,CAAC;QAAA,EAAC,oBAAoB,CAAC,GAAG,CAAC,CAAC,sBAAsB,CAAC,CAAC,oBAAoB,CAAC;QACvI,OAAOO,KAAK,CAAC0O,MAAM,CAACO,EAAE,EAAEiC,IAAI,CAAC;MACjC,CAAC,CAAC;MACF,IAAI1D,MAAM,CAACnK,MAAM,IAAI,IAAI,CAACmK,MAAM,CAACnK,MAAM,IAAImK,MAAM,CAACxJ,KAAK,CAAC,UAAC8F,CAAC,EAAE1G,CAAC;QAAA,OAAK0G,CAAC,IAAIkR,MAAI,CAACxN,MAAM,CAACpK,CAAC,CAAC;MAAA,EAAC,EAClFoK,MAAM,GAAG,IAAI,CAACA,MAAM;MACxB,IAAItB,IAAI,GAAG,IAAI,CAACA,IAAI;MACpB,IAAIA,IAAI,IAAI+C,EAAE,CAACJ,UAAU,EACrB3C,IAAI,GAAGA,IAAI,CAACrI,GAAG,CAACoL,EAAE,CAACpJ,OAAO,CAAC;MAC/B,IAAIoJ,EAAE,CAACnK,SAAS,IAAI0I,MAAM,CAACC,IAAI,CAAC,UAAA3D,CAAC;QAAA,OAAIA,CAAC,CAAC0H,SAAS,CAAC,CAAC,IAAIvC,EAAE,CAACpJ,OAAO,CAACsV,YAAY,CAACrR,CAAC,CAACtJ,IAAI,EAAEsJ,CAAC,CAACrJ,EAAE,CAAC;MAAA,EAAC,IACxF,CAAC2a,WAAW,CAAC5N,MAAM,EAAE,IAAI,CAACA,MAAM,CAAC,EACjCtB,IAAI,GAAGoO,gBAAgB,CAACK,KAAK,CAACnN,MAAM,EAAE/N,KAAK,EAAE,IAAI,CAAC4V,EAAE,EAAEnJ,IAAI,EAAEgF,IAAI,CAAC,CAAC,KACjE,IAAIhF,IAAI,IAAIA,IAAI,CAACC,QAAQ,IAAI,CAACqB,MAAM,CAACC,IAAI,CAAC,UAAA3D,CAAC;QAAA,OAAIA,CAAC,CAACrK,KAAK,IAAI,CAAC;MAAA,EAAC,mBAAmB,CAAC,EACjFyM,IAAI,GAAG,IAAI;MACf,IAAI,CAACA,IAAI,IAAIsB,MAAM,CAACxJ,KAAK,CAAC,UAAA8F,CAAC;QAAA,OAAIA,CAAC,CAACrK,KAAK,IAAI,CAAC;MAAA,EAAC,mBAAmB,CAAC,IAAI+N,MAAM,CAACC,IAAI,CAAC,UAAA3D,CAAC;QAAA,OAAIA,CAAC,CAAC0H,SAAS,CAAC,CAAC;MAAA,EAAC,EAC/FhE,MAAM,GAAGA,MAAM,CAAC3J,GAAG,CAAC,UAAAiG,CAAC;QAAA,OAAIA,CAAC,CAAC0H,SAAS,CAAC,CAAC,GAAG,IAAIG,YAAY,CAAC7H,CAAC,CAACrG,MAAM,EAAE,CAAC,CAAC,oBAAoB,CAAC,GAAGqG,CAAC;MAAA,EAAC;MAAC,IAAAuR,WAAA,GAAAvY,0BAAA,CAClFmM,EAAE,CAACjC,OAAO;QAAAsO,OAAA;MAAA;QAA7B,KAAAD,WAAA,CAAArY,CAAA,MAAAsY,OAAA,GAAAD,WAAA,CAAApY,CAAA,IAAAC,IAAA,GACI;UAAA,IADKqY,MAAM,GAAAD,OAAA,CAAAtb,KAAA;UACX,IAAIub,MAAM,CAACC,EAAE,CAACvO,iBAAiB,CAAC,EAC5Bf,IAAI,GAAGA,IAAI,IAAIA,IAAI,CAACsO,WAAW,CAACe,MAAM,CAACvb,KAAK,EAAE,IAAI,CAACqV,EAAE,CAAC;QAAA;MAAC,SAAA/R,GAAA;QAAA+X,WAAA,CAAA9X,CAAA,CAAAD,GAAA;MAAA;QAAA+X,WAAA,CAAA7X,CAAA;MAAA;MAC/D,OAAOgK,MAAM,IAAI,IAAI,CAACA,MAAM,IAAItB,IAAI,IAAI,IAAI,CAACA,IAAI,GAAG,IAAI,GAAG,IAAI6O,eAAe,CAACvN,MAAM,EAAE,IAAI,CAAC6H,EAAE,EAAEnJ,IAAI,CAAC;IACzG;EAAC;IAAAnM,GAAA;IAAA2B,GAAA,EACD,SAAAA,IAAA,EAAc;MAAE,OAAO,IAAI,CAACwK,IAAI,GAAG,IAAI,CAACA,IAAI,CAACO,OAAO,GAAG,IAAI;IAAE;EAAC;IAAA1M,GAAA;IAAA2B,GAAA,EAC9D,SAAAA,IAAA,EAAY;MAAE,OAAO,IAAI,CAACwK,IAAI,GAAG,IAAI,CAACA,IAAI,CAACqO,KAAK,GAAGkB,SAAS;IAAE;EAAC;IAAA1b,GAAA;IAAAC,KAAA,EA9B/D,SAAAkB,MAAA,EAAe;MACX,OAAO,IAAI6Z,eAAe,CAACW,IAAI,EAAE,QAAQ,GAAGva,IAAI,CAACuL,KAAK,CAACvL,IAAI,CAACwa,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;IACnG;EAAC;EAAA,OAAAb,eAAA;AAAA;AA8BL,SAASK,WAAWA,CAACtR,CAAC,EAAEC,CAAC,EAAE;EACvB,IAAID,CAAC,IAAIC,CAAC,EACN,OAAO,IAAI;EACf,KAAK,IAAI8R,EAAE,GAAG,CAAC,EAAEC,EAAE,GAAG,CAAC,IAAI;IACvB,OAAOD,EAAE,GAAG/R,CAAC,CAACzG,MAAM,IAAI,CAACyG,CAAC,CAAC+R,EAAE,CAAC,CAACrK,SAAS,EACpCqK,EAAE,EAAE;IACR,OAAOC,EAAE,GAAG/R,CAAC,CAAC1G,MAAM,IAAI,CAAC0G,CAAC,CAAC+R,EAAE,CAAC,CAACtK,SAAS,EACpCsK,EAAE,EAAE;IACR,IAAIC,IAAI,GAAGF,EAAE,IAAI/R,CAAC,CAACzG,MAAM;MAAE2Y,IAAI,GAAGF,EAAE,IAAI/R,CAAC,CAAC1G,MAAM;IAChD,IAAI0Y,IAAI,IAAIC,IAAI,EACZ,OAAOD,IAAI,IAAIC,IAAI;IACvB,IAAIlS,CAAC,CAAC+R,EAAE,EAAE,CAAC,CAACpT,MAAM,IAAIsB,CAAC,CAAC+R,EAAE,EAAE,CAAC,CAACrT,MAAM,EAChC,OAAO,KAAK;EACpB;AACJ;AACA,IAAMgT,SAAS,GAAG;EACd,mBAAmB,EAAE;AACzB,CAAC;AACD,SAAShB,SAASA,CAACpF,EAAE,EAAEvI,QAAQ,EAAE;EAC7B,IAAIrE,MAAM,GAAG;IACT,mBAAmB,EAAE,MAAM;IAC3B,eAAe,EAAE,SAAS;IAC1B,eAAe,EAAE4M;EACrB,CAAC;EACD,IAAIvI,QAAQ,GAAG,CAAC,CAAC,EACbrE,MAAM,CAAC,uBAAuB,CAAC,GAAG4M,EAAE,GAAG,GAAG,GAAGvI,QAAQ;EACzD,OAAOrE,MAAM;AACjB;AACA,IAAMiT,IAAI,GAAG,EAAE;AACf,SAASxM,YAAYA,CAACD,EAAE,EAAE;EACtB,OAAOA,EAAE,CAACgN,WAAW,CAAC,YAAY,CAAC,GAAG,OAAO,GAAGhN,EAAE,CAACgN,WAAW,CAAC,iBAAiB,CAAC,GAAG,QAAQ,GAAG,IAAI;AACvG;AAAC,IACKtK,YAAY;EACd,SAAAA,aAAYlO,MAAM,EAAEhE,KAAK,EAAoB;IAAA,IAAlB8Q,WAAW,GAAA1E,SAAA,CAAAxI,MAAA,QAAAwI,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,CAAC,CAAC;IAAAjM,eAAA,OAAA+R,YAAA;IACvC,IAAI,CAAClO,MAAM,GAAGA,MAAM;IACpB,IAAI,CAAChE,KAAK,GAAGA,KAAK;IAClB,IAAI,CAAC8Q,WAAW,GAAGA,WAAW;EAClC;EAACzQ,YAAA,CAAA6R,YAAA;IAAA5R,GAAA;IAAAC,KAAA,EACD,SAAAwR,UAAA,EAAY;MAAE,OAAO,KAAK;IAAE;EAAC;IAAAzR,GAAA;IAAAC,KAAA,EAC7B,SAAA0O,OAAOO,EAAE,EAAEiC,IAAI,EAAE;MACb,IAAIgB,KAAK,GAAGhD,YAAY,CAACD,EAAE,CAAC;QAAEjP,KAAK,GAAG,IAAI;MAC1C,IAAIkS,KAAK,EACLlS,KAAK,GAAGA,KAAK,CAACkc,eAAe,CAACjN,EAAE,EAAEiD,KAAK,EAAEhB,IAAI,CAAC,CAAC,KAC9C,IAAIjC,EAAE,CAACJ,UAAU,EAClB7O,KAAK,GAAGA,KAAK,CAACmc,YAAY,CAAClN,EAAE,CAAC,CAAC,KAC9B,IAAIA,EAAE,CAACnK,SAAS,IAAI9E,KAAK,CAACP,KAAK,IAAI,CAAC,CAAC,sBACtCO,KAAK,GAAG,IAAI2R,YAAY,CAAC3R,KAAK,CAACyD,MAAM,EAAE,CAAC,CAAC,oBAAoB,CAAC;MAAC,IAAA2Y,WAAA,GAAAtZ,0BAAA,CAChDmM,EAAE,CAACjC,OAAO;QAAAqP,OAAA;MAAA;QAA7B,KAAAD,WAAA,CAAApZ,CAAA,MAAAqZ,OAAA,GAAAD,WAAA,CAAAnZ,CAAA,IAAAC,IAAA,GAA+B;UAAA,IAAtBqY,MAAM,GAAAc,OAAA,CAAArc,KAAA;UACX,IAAIub,MAAM,CAACC,EAAE,CAAChV,qBAAqB,CAAC,EAChCxG,KAAK,GAAG,IAAI2R,YAAY,CAAC3R,KAAK,CAACyD,MAAM,EAAE,CAAC,CAAC,qBAAqB8X,MAAM,CAACvb,KAAK,GAAG6E,GAAG,CAACoK,EAAE,CAACxP,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAChG,IAAI8b,MAAM,CAACC,EAAE,CAAC/U,qBAAqB,CAAC,EACrCzG,KAAK,GAAG,IAAI2R,YAAY,CAAC3R,KAAK,CAACyD,MAAM,EAAE,CAAC,CAAC,oBAAoB,CAAC,CAAC,KAC9D,IAAI8X,MAAM,CAACC,EAAE,CAACzJ,eAAe,CAAC;YAAA,IAAAuK,WAAA,GAAAxZ,0BAAA,CACZyY,MAAM,CAACvb,KAAK;cAAAuc,OAAA;YAAA;cAA/B,KAAAD,WAAA,CAAAtZ,CAAA,MAAAuZ,OAAA,GAAAD,WAAA,CAAArZ,CAAA,IAAAC,IAAA,GACI;gBAAA,IADKsK,MAAM,GAAA+O,OAAA,CAAAvc,KAAA;gBACX,IAAIwN,MAAM,CAAC/J,MAAM,IAAIzD,KAAK,CAACyD,MAAM,EAC7BzD,KAAK,GAAGwN,MAAM;cAAA;YAAC,SAAAlK,GAAA;cAAAgZ,WAAA,CAAA/Y,CAAA,CAAAD,GAAA;YAAA;cAAAgZ,WAAA,CAAA9Y,CAAA;YAAA;UAAA;QAC/B;MAAC,SAAAF,GAAA;QAAA8Y,WAAA,CAAA7Y,CAAA,CAAAD,GAAA;MAAA;QAAA8Y,WAAA,CAAA5Y,CAAA;MAAA;MACD,OAAOxD,KAAK;IAChB;EAAC;IAAAD,GAAA;IAAAC,KAAA,EACD,SAAAkc,gBAAgBjN,EAAE,EAAErO,IAAI,EAAEsQ,IAAI,EAAE;MAC5B,OAAOtQ,IAAI,IAAI,QAAQ,IAAI,CAACsQ,IAAI,CAAClI,gBAAgB,GAAG,IAAI,CAACnF,GAAG,CAACoL,EAAE,CAACpJ,OAAO,CAAC,GAAG,IAAI8L,YAAY,CAAC,IAAI,CAAClO,MAAM,EAAE,CAAC,CAAC,mBAAmB,CAAC;IACnI;EAAC;IAAA1D,GAAA;IAAAC,KAAA,EACD,SAAAmc,aAAalN,EAAE,EAAE;MACb,OAAOA,EAAE,CAACpJ,OAAO,CAACsV,YAAY,CAACtW,GAAG,CAACoK,EAAE,CAACH,UAAU,CAAC,CAAC,GAAG,IAAI6C,YAAY,CAAC,IAAI,CAAClO,MAAM,EAAE,CAAC,CAAC,oBAAoB,CAAC,GAAG,IAAI,CAACI,GAAG,CAACoL,EAAE,CAACpJ,OAAO,CAAC;IACrI;EAAC;IAAA9F,GAAA;IAAAC,KAAA,EACD,SAAA6D,IAAIgC,OAAO,EAAE;MACT,OAAOA,OAAO,CAAC2W,KAAK,IAAI,IAAI,CAACjM,WAAW,GAAG,CAAC,GAAG,IAAI,GAAG,IAAIoB,YAAY,CAAC,IAAI,CAAClO,MAAM,EAAE,IAAI,CAAChE,KAAK,EAAEoG,OAAO,CAAC6U,MAAM,CAAC,IAAI,CAACnK,WAAW,CAAC,CAAC;IACrI;EAAC;EAAA,OAAAoB,YAAA;AAAA;AAAA,IAECN,YAAY,0BAAAoL,aAAA;EAAAC,SAAA,CAAArL,YAAA,EAAAoL,aAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAvL,YAAA;EACd,SAAAA,aAAY5N,MAAM,EAAE8M,WAAW,EAAE9H,MAAM,EAAEjI,IAAI,EAAEC,EAAE,EAAE;IAAA,IAAAoc,OAAA;IAAAjd,eAAA,OAAAyR,YAAA;IAC/CwL,OAAA,GAAAF,MAAA,CAAAG,IAAA,OAAMrZ,MAAM,EAAE,CAAC,CAAC,oBAAoB8M,WAAW;IAC/CsM,OAAA,CAAKpU,MAAM,GAAGA,MAAM;IACpBoU,OAAA,CAAKrc,IAAI,GAAGA,IAAI;IAChBqc,OAAA,CAAKpc,EAAE,GAAGA,EAAE;IAAC,OAAAoc,OAAA;EACjB;EAAC/c,YAAA,CAAAuR,YAAA;IAAAtR,GAAA;IAAAC,KAAA,EACD,SAAAwR,UAAA,EAAY;MAAE,OAAO,IAAI;IAAE;EAAC;IAAAzR,GAAA;IAAAC,KAAA,EAC5B,SAAAkc,gBAAgBjN,EAAE,EAAErO,IAAI,EAAEsQ,IAAI,EAAE;MAC5B,IAAIlM,EAAE;MACN,IAAIxE,IAAI,GAAGyO,EAAE,CAACpJ,OAAO,CAAC6U,MAAM,CAAC,IAAI,CAACla,IAAI,CAAC;QAAEC,EAAE,GAAGwO,EAAE,CAACpJ,OAAO,CAAC6U,MAAM,CAAC,IAAI,CAACja,EAAE,EAAE,CAAC,CAAC;MAC3E,IAAIf,GAAG,GAAGmF,GAAG,CAACoK,EAAE,CAACxP,KAAK,CAAC;MACvB,IAAI,CAAC,IAAI,CAAC8Q,WAAW,GAAG,CAAC,GAAG7Q,GAAG,IAAIc,IAAI,GAAGd,GAAG,GAAG,IAAI,CAACc,IAAI,KACrDd,GAAG,GAAGe,EAAE,IACRG,IAAI,IAAI,QAAQ,IAAIiE,GAAG,CAACoK,EAAE,CAACH,UAAU,CAAC,IAAI,IAAI,CAACtO,IAAI,EACnD,OAAO,IAAImR,YAAY,CAAC,IAAI,CAAClO,MAAM,EAAE7C,IAAI,IAAI,OAAO,IAAIsQ,IAAI,CAAClI,gBAAgB,GAAG,CAAC,CAAC,sBAAsB,CAAC,CAAC,oBAAoB,CAAC;MACnI,IAAIuH,WAAW,GAAG,IAAI,CAACA,WAAW,GAAG,CAAC,GAAG,CAAC,CAAC,GAAGtB,EAAE,CAACpJ,OAAO,CAAC6U,MAAM,CAAC,IAAI,CAACnK,WAAW,CAAC;QAAEU,OAAO;MAC1F,IAAI8L,UAAU,CAAC,IAAI,CAACtU,MAAM,CAACtE,QAAQ,EAAE8K,EAAE,CAACxP,KAAK,EAAEe,IAAI,EAAEC,EAAE,CAAC,EACpD,OAAO,IAAI4Q,YAAY,CAAC,IAAI,CAAC5N,MAAM,EAAE8M,WAAW,EAAE,IAAI,CAAC9H,MAAM,EAAEjI,IAAI,EAAEC,EAAE,CAAC;MAC5E,IAAI,IAAI,CAACgI,MAAM,CAACiG,MAAM,KACjBuC,OAAO,GAAG,IAAI,CAACxI,MAAM,CAACiG,MAAM,CAAC,IAAI,CAACjG,MAAM,EAAEjI,IAAI,EAAEC,EAAE,EAAE,IAAIjB,iBAAiB,CAACyP,EAAE,CAACxP,KAAK,EAAEC,GAAG,EAAE6Q,WAAW,IAAI,CAAC,CAAC,CAAC,CAAC,EAC7G,OAAO,IAAIc,YAAY,CAAC,IAAI,CAAC5N,MAAM,EAAE8M,WAAW,EAAEU,OAAO,EAAEA,OAAO,CAACzQ,IAAI,EAAE,CAACwE,EAAE,GAAGiM,OAAO,CAACxQ,EAAE,MAAM,IAAI,IAAIuE,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAGH,GAAG,CAACoK,EAAE,CAACxP,KAAK,CAAC,CAAC;MAC9I,OAAO,IAAIkS,YAAY,CAAC,IAAI,CAAClO,MAAM,EAAE,CAAC,CAAC,qBAAqB8M,WAAW,CAAC;IAC5E;EAAC;IAAAxQ,GAAA;IAAAC,KAAA,EACD,SAAAmc,aAAalN,EAAE,EAAE;MACb,OAAOA,EAAE,CAACpJ,OAAO,CAACsV,YAAY,CAAC,IAAI,CAAC3a,IAAI,EAAE,IAAI,CAACC,EAAE,CAAC,GAAG,IAAIkR,YAAY,CAAC,IAAI,CAAClO,MAAM,EAAE,CAAC,CAAC,oBAAoB,CAAC,GAAG,IAAI,CAACI,GAAG,CAACoL,EAAE,CAACpJ,OAAO,CAAC;IACrI;EAAC;IAAA9F,GAAA;IAAAC,KAAA,EACD,SAAA6D,IAAImZ,OAAO,EAAE;MACT,OAAOA,OAAO,CAACR,KAAK,GAAG,IAAI,GACvB,IAAInL,YAAY,CAAC,IAAI,CAAC5N,MAAM,EAAE,IAAI,CAAC8M,WAAW,GAAG,CAAC,GAAG,CAAC,CAAC,GAAGyM,OAAO,CAACtC,MAAM,CAAC,IAAI,CAACnK,WAAW,CAAC,EAAE,IAAI,CAAC9H,MAAM,EAAEuU,OAAO,CAACtC,MAAM,CAAC,IAAI,CAACla,IAAI,CAAC,EAAEwc,OAAO,CAACtC,MAAM,CAAC,IAAI,CAACja,EAAE,EAAE,CAAC,CAAC,CAAC;IACvK;EAAC;EAAA,OAAA4Q,YAAA;AAAA,EA9BsBM,YAAY;AAgCvC,SAASoL,UAAUA,CAAC5Y,QAAQ,EAAE1E,KAAK,EAAEe,IAAI,EAAEC,EAAE,EAAE;EAC3C,IAAI,CAAC0D,QAAQ,EACT,OAAO,KAAK;EAChB,IAAIzD,IAAI,GAAGjB,KAAK,CAACkB,QAAQ,CAACH,IAAI,EAAEC,EAAE,CAAC;EACnC,OAAO,OAAO0D,QAAQ,IAAI,UAAU,GAAGA,QAAQ,CAACzD,IAAI,EAAEF,IAAI,EAAEC,EAAE,EAAEhB,KAAK,CAAC,GAAGgC,YAAY,CAAC0C,QAAQ,EAAE,IAAI,CAAC,CAAC9B,IAAI,CAAC3B,IAAI,CAAC;AACpH;AACA,IAAMqR,eAAe,GAAG,aAAahU,WAAW,CAACuH,MAAM,CAAC;EACpDzB,GAAG,WAAAA,IAACoX,OAAO,EAAE+B,OAAO,EAAE;IAAE,OAAO/B,OAAO,CAACpX,GAAG,CAAC,UAAAb,CAAC;MAAA,OAAIA,CAAC,CAACa,GAAG,CAACmZ,OAAO,CAAC;IAAA,EAAC;EAAE;AACrE,CAAC,CAAC;AACF,IAAM/P,iBAAiB,GAAG,aAAalP,WAAW,CAACuH,MAAM,CAAC,CAAC;AAC3D,IAAM2G,eAAe,GAAG,aAAa3N,UAAU,CAACgH,MAAM,CAAC;EACnD3C,MAAM,WAAAA,OAAA,EAAG;IAAE,OAAOoY,eAAe,CAAC7Z,KAAK,CAAC,CAAC;EAAE,CAAC;EAC5CwN,MAAM,WAAAA,OAAC1O,KAAK,EAAEiP,EAAE,EAAE;IAAE,OAAOjP,KAAK,CAAC0O,MAAM,CAACO,EAAE,CAAC;EAAE,CAAC;EAC9CgO,OAAO,EAAE,SAAAA,QAAAzZ,CAAC;IAAA,OAAI,CACVvE,WAAW,CAACuB,IAAI,CAACgD,CAAC,EAAE,UAAA0Z,GAAG;MAAA,OAAIA,GAAG,CAACzQ,OAAO;IAAA,EAAC,EACvCvN,UAAU,CAACie,iBAAiB,CAAC3c,IAAI,CAACgD,CAAC,EAAE,UAAA/D,KAAK;MAAA,OAAIA,KAAK,CAAC8a,KAAK;IAAA,EAAC,CAC7D;EAAA;AACL,CAAC,CAAC;AAEF,IAAM6C,SAAS,GAAG,aAAale,UAAU,CAACke,SAAS,CAAC;EAChD,qCAAqC,EAAE;IACnC,QAAQ,EAAE;MACNC,UAAU,EAAE,WAAW;MACvBC,UAAU,EAAE,QAAQ;MACpBC,QAAQ,EAAE,aAAa;MACvBC,iBAAiB,EAAE,OAAO;MAC1BzS,QAAQ,EAAE,kBAAkB;MAC5B0S,QAAQ,EAAE,OAAO;MACjBC,SAAS,EAAE,MAAM;MACjBC,MAAM,EAAE,MAAM;MACdC,SAAS,EAAE,MAAM;MACjBC,MAAM,EAAE,CAAC;MACTC,OAAO,EAAE,CAAC;MACV,gCAAgC,EAAE;QAC9BA,OAAO,EAAE,SAAS;QAClBC,UAAU,EAAE;MAChB,CAAC;MACD,QAAQ,EAAE;QACNC,SAAS,EAAE,QAAQ;QACnBC,YAAY,EAAE,UAAU;QACxBlY,MAAM,EAAE;MACZ,CAAC;MACD,wBAAwB,EAAE;QACtBmY,OAAO,EAAE,WAAW;QACpBC,YAAY,EAAE,kBAAkB;QAChCC,WAAW,EAAE,OAAO;QACpBC,OAAO,EAAE;MACb;IACJ;EACJ,CAAC;EACD,sDAAsD,EAAE;IACpDC,UAAU,EAAE,MAAM;IAClBC,KAAK,EAAE;EACX,CAAC;EACD,+DAA+D,EAAE;IAC7DD,UAAU,EAAE;EAChB,CAAC;EACD,qDAAqD,EAAE;IACnDA,UAAU,EAAE,MAAM;IAClBC,KAAK,EAAE;EACX,CAAC;EACD,8DAA8D,EAAE;IAC5DD,UAAU,EAAE;EAChB,CAAC;EACD,kFAAkF,EAAE;IAChF1L,OAAO,EAAE,OAAO;IAChByL,OAAO,EAAE,GAAG;IACZH,OAAO,EAAE,OAAO;IAChBM,SAAS,EAAE;EACf,CAAC;EACD,+BAA+B,EAAE;IAC7BjL,QAAQ,EAAE,UAAU;IACpBuK,OAAO,EAAE,SAAS;IAClBW,KAAK,EAAE,aAAa;IACpB1T,QAAQ,KAAAxI,MAAA,CAAK,GAAG,CAAC,uBAAoB;IACrCmc,SAAS,EAAE;EACf,CAAC;EACD,2CAA2C,EAAE;IAAExT,KAAK,EAAE;EAAO,CAAC;EAC9D,4CAA4C,EAAE;IAAEP,IAAI,EAAE;EAAO,CAAC;EAC9D,kDAAkD,EAAE;IAAEO,KAAK,KAAA3I,MAAA,CAAK,EAAE,CAAC;EAAsB,CAAC;EAC1F,mDAAmD,EAAE;IAAEoI,IAAI,KAAApI,MAAA,CAAK,EAAE,CAAC;EAAsB,CAAC;EAC1F,yBAAyB,EAAE;IAAEoc,eAAe,EAAE;EAAY,CAAC;EAC3D,wBAAwB,EAAE;IAAEA,eAAe,EAAE;EAAY,CAAC;EAC1D,0BAA0B,EAAE;IACxBC,aAAa,EAAE,UAAU;IACzBH,KAAK,EAAE,CAAC;IACRd,MAAM,EAAE,QAAQ;IAChBO,OAAO,EAAE,cAAc;IACvBL,MAAM,EAAE,gBAAgB;IACxBgB,UAAU,EAAE;EAChB,CAAC;EACD,2BAA2B,EAAE;IACzBC,cAAc,EAAE;EACpB,CAAC;EACD,sBAAsB,EAAE;IACpBC,UAAU,EAAE,OAAO;IACnBC,SAAS,EAAE;EACf,CAAC;EACD,oBAAoB,EAAE;IAClBC,QAAQ,EAAE,KAAK;IACfR,KAAK,EAAE,MAAM;IACbP,OAAO,EAAE,cAAc;IACvBM,SAAS,EAAE,QAAQ;IACnBU,YAAY,EAAE,MAAM;IACpBb,OAAO,EAAE,KAAK;IACdK,SAAS,EAAE;EACf,CAAC;EACD,wDAAwD,EAAE;IACtD,SAAS,EAAE;MAAE9L,OAAO,EAAE;IAAM;EAChC,CAAC;EACD,0BAA0B,EAAE;IACxB,SAAS,EAAE;MAAEA,OAAO,EAAE;IAAM;EAChC,CAAC;EACD,8BAA8B,EAAE;IAC5B,SAAS,EAAE;MAAEA,OAAO,EAAE;IAAM;EAChC,CAAC;EACD,6BAA6B,EAAE;IAC3B,SAAS,EAAE;MAAEA,OAAO,EAAE;IAAO;EACjC,CAAC;EACD,6BAA6B,EAAE;IAC3B,SAAS,EAAE;MAAEA,OAAO,EAAE;IAAO;EACjC,CAAC;EACD,yBAAyB,EAAE;IACvB,SAAS,EAAE;MAAEA,OAAO,EAAE;IAAO;EACjC,CAAC;EACD,yBAAyB,EAAE;IACvB,SAAS,EAAE;MAAEA,OAAO,EAAE;IAAM;EAChC,CAAC;EACD,6BAA6B,EAAE;IAC3B,SAAS,EAAE;MAAEA,OAAO,EAAE;IAAM;EAChC,CAAC;EACD,4BAA4B,EAAE;IAC1B,SAAS,EAAE;MAAEA,OAAO,EAAE;IAAa,CAAC,CAAC;EACzC,CAAC;;EACD,8BAA8B,EAAE;IAC5B,SAAS,EAAE;MAAEA,OAAO,EAAE;IAAM;EAChC,CAAC;EACD,yBAAyB,EAAE;IACvB,SAAS,EAAE;MAAEA,OAAO,EAAE,OAAO;MAAEqM,QAAQ,EAAE,KAAK;MAAEL,aAAa,EAAE;IAAS;EAC5E;AACJ,CAAC,CAAC;AAAC,IAEGO,QAAQ,gBAAArf,YAAA,CACV,SAAAqf,SAAYnT,KAAK,EAAEjL,IAAI,EAAEP,IAAI,EAAEC,EAAE,EAAE;EAAAb,eAAA,OAAAuf,QAAA;EAC/B,IAAI,CAACnT,KAAK,GAAGA,KAAK;EAClB,IAAI,CAACjL,IAAI,GAAGA,IAAI;EAChB,IAAI,CAACP,IAAI,GAAGA,IAAI;EAChB,IAAI,CAACC,EAAE,GAAGA,EAAE;AAChB,CAAC;AAAA,IAEC2e,UAAU;EACZ,SAAAA,WAAYpT,KAAK,EAAExL,IAAI,EAAEC,EAAE,EAAE;IAAAb,eAAA,OAAAwf,UAAA;IACzB,IAAI,CAACpT,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACxL,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,EAAE,GAAGA,EAAE;EAChB;EAACX,YAAA,CAAAsf,UAAA;IAAArf,GAAA;IAAAC,KAAA,EACD,SAAA6D,IAAIgC,OAAO,EAAE;MACT,IAAIrF,IAAI,GAAGqF,OAAO,CAAC6U,MAAM,CAAC,IAAI,CAACla,IAAI,EAAE,CAAC,CAAC,EAAE/B,OAAO,CAAC4gB,QAAQ,CAAC;MAC1D,IAAI5e,EAAE,GAAGoF,OAAO,CAAC6U,MAAM,CAAC,IAAI,CAACja,EAAE,EAAE,CAAC,EAAEhC,OAAO,CAAC4gB,QAAQ,CAAC;MACrD,OAAO7e,IAAI,IAAI,IAAI,IAAIC,EAAE,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI2e,UAAU,CAAC,IAAI,CAACpT,KAAK,EAAExL,IAAI,EAAEC,EAAE,CAAC;IACnF;EAAC;EAAA,OAAA2e,UAAA;AAAA;AAAA,IAECE,OAAO;EACT,SAAAA,QAAYC,KAAK,EAAEC,cAAc,EAAE;IAAA5f,eAAA,OAAA0f,OAAA;IAC/B,IAAI,CAACC,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,cAAc,GAAGA,cAAc;EACxC;EAAC1f,YAAA,CAAAwf,OAAA;IAAAvf,GAAA;IAAAC,KAAA,EACD,SAAAyf,YAAYhgB,KAAK,EAAEC,GAAG,EAAE;MACpB,IAAIgB,IAAI,GAAG,EAAE;QAAEgf,SAAS,GAAG,CAAChgB,GAAG,CAAC;MAChC,IAAIigB,OAAO,GAAGlgB,KAAK,CAACuB,GAAG,CAACC,MAAM,CAACvB,GAAG,CAAC;QAAEkgB,UAAU,GAAG,MAAM,CAACxK,IAAI,CAACuK,OAAO,CAACjf,IAAI,CAAC,CAAC,CAAC,CAAC;MAAC,IAAAmf,WAAA,GAAA/c,0BAAA,CAC9D,IAAI,CAACyc,KAAK;QAAAO,OAAA;MAAA;QAA3B,KAAAD,WAAA,CAAA7c,CAAA,MAAA8c,OAAA,GAAAD,WAAA,CAAA5c,CAAA,IAAAC,IAAA,GAA6B;UAAA,IAApBnC,IAAI,GAAA+e,OAAA,CAAA9f,KAAA;UACT,IAAIU,IAAI,CAAC2C,MAAM,EAAE;YACb,IAAI0c,MAAM,GAAGH,UAAU;cAAEI,IAAI,GAAG,MAAM,CAAC5K,IAAI,CAACrU,IAAI,CAAC,CAAC,CAAC,CAAC,CAACsC,MAAM;YAC3D,KAAK,IAAID,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG4c,IAAI,EAAE5c,CAAC,EAAE,EACzB2c,MAAM,IAAItgB,KAAK,CAAC8M,KAAK,CAAChN,UAAU,CAAC;YACrCmgB,SAAS,CAAC7d,IAAI,CAACnC,GAAG,GAAGqgB,MAAM,CAAC1c,MAAM,GAAG2c,IAAI,CAAC;YAC1Cjf,IAAI,GAAGgf,MAAM,GAAGhf,IAAI,CAACO,KAAK,CAAC0e,IAAI,CAAC;UACpC;UACAtf,IAAI,CAACmB,IAAI,CAACd,IAAI,CAAC;UACfrB,GAAG,IAAIqB,IAAI,CAACsC,MAAM,GAAG,CAAC;QAC1B;MAAC,SAAAC,GAAA;QAAAuc,WAAA,CAAAtc,CAAA,CAAAD,GAAA;MAAA;QAAAuc,WAAA,CAAArc,CAAA;MAAA;MACD,IAAIyc,MAAM,GAAG,IAAI,CAACT,cAAc,CAAC3b,GAAG,CAAC,UAAAnE,GAAG;QAAA,OAAI,IAAI0f,UAAU,CAAC1f,GAAG,CAACsM,KAAK,EAAE0T,SAAS,CAAChgB,GAAG,CAACqB,IAAI,CAAC,GAAGrB,GAAG,CAACc,IAAI,EAAEkf,SAAS,CAAChgB,GAAG,CAACqB,IAAI,CAAC,GAAGrB,GAAG,CAACe,EAAE,CAAC;MAAA,EAAC;MACpI,OAAO;QAAEC,IAAI,EAAJA,IAAI;QAAEuf,MAAM,EAANA;MAAO,CAAC;IAC3B;EAAC;IAAAlgB,GAAA;IAAAC,KAAA,EACD,SAAAkgB,MAAaC,QAAQ,EAAE;MACnB,IAAIC,MAAM,GAAG,EAAE;MACf,IAAIb,KAAK,GAAG,EAAE;QAAE7W,SAAS,GAAG,EAAE;QAAE2X,CAAC;MAAC,IAAAC,WAAA,GAAAxd,0BAAA,CACjBqd,QAAQ,CAAC/M,KAAK,CAAC,UAAU,CAAC;QAAAmN,OAAA;MAAA;QAA3C,KAAAD,WAAA,CAAAtd,CAAA,MAAAud,OAAA,GAAAD,WAAA,CAAArd,CAAA,IAAAC,IAAA,GAA6C;UAAA,IAApCnC,IAAI,GAAAwf,OAAA,CAAAvgB,KAAA;UACT,OAAOqgB,CAAC,GAAG,wCAAwC,CAACjL,IAAI,CAACrU,IAAI,CAAC,EAAE;YAC5D,IAAIyf,GAAG,GAAGH,CAAC,CAAC,CAAC,CAAC,GAAG,CAACA,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI;cAAE/f,IAAI,GAAG+f,CAAC,CAAC,CAAC,CAAC,IAAIA,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE;cAAE9e,KAAK,GAAG,CAAC,CAAC;YACpE,KAAK,IAAI6B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGgd,MAAM,CAAC/c,MAAM,EAAED,CAAC,EAAE,EAAE;cACpC,IAAIod,GAAG,IAAI,IAAI,GAAGJ,MAAM,CAAChd,CAAC,CAAC,CAACod,GAAG,IAAIA,GAAG,GAAGlgB,IAAI,GAAG8f,MAAM,CAAChd,CAAC,CAAC,CAAC9C,IAAI,IAAIA,IAAI,GAAG,KAAK,EAC1EiB,KAAK,GAAG6B,CAAC;YACjB;YACA,IAAI7B,KAAK,GAAG,CAAC,EAAE;cACX,IAAI6B,GAAC,GAAG,CAAC;cACT,OAAOA,GAAC,GAAGgd,MAAM,CAAC/c,MAAM,KAAKmd,GAAG,IAAI,IAAI,IAAKJ,MAAM,CAAChd,GAAC,CAAC,CAACod,GAAG,IAAI,IAAI,IAAIJ,MAAM,CAAChd,GAAC,CAAC,CAACod,GAAG,GAAGA,GAAI,CAAC,EACvFpd,GAAC,EAAE;cACPgd,MAAM,CAAC7Q,MAAM,CAACnM,GAAC,EAAE,CAAC,EAAE;gBAAEod,GAAG,EAAHA,GAAG;gBAAElgB,IAAI,EAAJA;cAAK,CAAC,CAAC;cAClCiB,KAAK,GAAG6B,GAAC;cAAC,IAAAqd,WAAA,GAAA3d,0BAAA,CACM4F,SAAS;gBAAAgY,OAAA;cAAA;gBAAzB,KAAAD,WAAA,CAAAzd,CAAA,MAAA0d,OAAA,GAAAD,WAAA,CAAAxd,CAAA,IAAAC,IAAA,GACI;kBAAA,IADKxD,GAAG,GAAAghB,OAAA,CAAA1gB,KAAA;kBACR,IAAIN,GAAG,CAACsM,KAAK,IAAIzK,KAAK,EAClB7B,GAAG,CAACsM,KAAK,EAAE;gBAAA;cAAC,SAAA1I,GAAA;gBAAAmd,WAAA,CAAAld,CAAA,CAAAD,GAAA;cAAA;gBAAAmd,WAAA,CAAAjd,CAAA;cAAA;YACxB;YACAkF,SAAS,CAAC7G,IAAI,CAAC,IAAIsd,QAAQ,CAAC5d,KAAK,EAAEge,KAAK,CAAClc,MAAM,EAAEgd,CAAC,CAACM,KAAK,EAAEN,CAAC,CAACM,KAAK,GAAGrgB,IAAI,CAAC+C,MAAM,CAAC,CAAC;YACjFtC,IAAI,GAAGA,IAAI,CAACO,KAAK,CAAC,CAAC,EAAE+e,CAAC,CAACM,KAAK,CAAC,GAAGrgB,IAAI,GAAGS,IAAI,CAACO,KAAK,CAAC+e,CAAC,CAACM,KAAK,GAAGN,CAAC,CAAC,CAAC,CAAC,CAAChd,MAAM,CAAC;UAC5E;UACA,KAAK,IAAIud,GAAG,EAAEA,GAAG,GAAG,UAAU,CAACxL,IAAI,CAACrU,IAAI,CAAC,GAAG;YACxCA,IAAI,GAAGA,IAAI,CAACO,KAAK,CAAC,CAAC,EAAEsf,GAAG,CAACD,KAAK,CAAC,GAAGC,GAAG,CAAC,CAAC,CAAC,GAAG7f,IAAI,CAACO,KAAK,CAACsf,GAAG,CAACD,KAAK,GAAGC,GAAG,CAAC,CAAC,CAAC,CAACvd,MAAM,CAAC;YAAC,IAAAwd,WAAA,GAAA/d,0BAAA,CACjE4F,SAAS;cAAAoY,OAAA;YAAA;cAAzB,KAAAD,WAAA,CAAA7d,CAAA,MAAA8d,OAAA,GAAAD,WAAA,CAAA5d,CAAA,IAAAC,IAAA,GACI;gBAAA,IADKxD,IAAG,GAAAohB,OAAA,CAAA9gB,KAAA;gBACR,IAAIN,IAAG,CAACqB,IAAI,IAAIwe,KAAK,CAAClc,MAAM,IAAI3D,IAAG,CAACc,IAAI,GAAGogB,GAAG,CAACD,KAAK,EAAE;kBAClDjhB,IAAG,CAACc,IAAI,EAAE;kBACVd,IAAG,CAACe,EAAE,EAAE;gBACZ;cAAA;YAAC,SAAA6C,GAAA;cAAAud,WAAA,CAAAtd,CAAA,CAAAD,GAAA;YAAA;cAAAud,WAAA,CAAArd,CAAA;YAAA;UACT;UACA+b,KAAK,CAAC1d,IAAI,CAACd,IAAI,CAAC;QACpB;MAAC,SAAAuC,GAAA;QAAAgd,WAAA,CAAA/c,CAAA,CAAAD,GAAA;MAAA;QAAAgd,WAAA,CAAA9c,CAAA;MAAA;MACD,OAAO,IAAI8b,OAAO,CAACC,KAAK,EAAE7W,SAAS,CAAC;IACxC;EAAC;EAAA,OAAA4W,OAAA;AAAA;AAEL,IAAIyB,WAAW,GAAG,aAAa5hB,UAAU,CAAC6hB,MAAM,CAAC;EAAEA,MAAM,EAAE,aAAa,6BAAAC,WAAA;IAAAvE,SAAA,CAAAwE,OAAA,EAAAD,WAAA;IAAA,IAAAE,OAAA,GAAAvE,YAAA,CAAAsE,OAAA;IAAA,SAAAA,QAAA;MAAAthB,eAAA,OAAAshB,OAAA;MAAA,OAAAC,OAAA,CAAA1R,KAAA,OAAA5D,SAAA;IAAA;IAAA/L,YAAA,CAAAohB,OAAA;MAAAnhB,GAAA;MAAAC,KAAA,EAChE,SAAAohB,MAAA,EAAQ;QACJ,IAAIrN,IAAI,GAAGf,QAAQ,CAACC,aAAa,CAAC,MAAM,CAAC;QACzCc,IAAI,CAACL,SAAS,GAAG,yBAAyB;QAC1C,OAAOK,IAAI;MACf;IAAC;MAAAhU,GAAA;MAAAC,KAAA,EACD,SAAAqhB,YAAA,EAAc;QAAE,OAAO,KAAK;MAAE;IAAC;IAAA,OAAAH,OAAA;EAAA,EANmD9hB,UAAU,GAOhG;AAAE,CAAC,CAAC;AACR,IAAIkiB,UAAU,GAAG,aAAaniB,UAAU,CAACoiB,IAAI,CAAC;EAAE9V,KAAK,EAAE;AAAkB,CAAC,CAAC;AAAC,IACtE+V,aAAa;EACf,SAAAA,cAAYvB,MAAM,EAAEzS,MAAM,EAAE;IAAA5N,eAAA,OAAA4hB,aAAA;IACxB,IAAI,CAACvB,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACzS,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACiU,IAAI,GAAGtiB,UAAU,CAACoH,GAAG,CAAC0Z,MAAM,CAACpc,GAAG,CAAC,UAAAwM,CAAC;MAAA,OAAI,CAACA,CAAC,CAAC7P,IAAI,IAAI6P,CAAC,CAAC5P,EAAE,GAAGsgB,WAAW,GAAGO,UAAU,EAAE1b,KAAK,CAACyK,CAAC,CAAC7P,IAAI,EAAE6P,CAAC,CAAC5P,EAAE,CAAC;IAAA,EAAC,CAAC;EAChH;EAACX,YAAA,CAAA0hB,aAAA;IAAAzhB,GAAA;IAAAC,KAAA,EACD,SAAA6D,IAAIgC,OAAO,EAAE;MACT,IAAIoa,MAAM,GAAG,EAAE;MAAC,IAAAyB,WAAA,GAAA5e,0BAAA,CACF,IAAI,CAACmd,MAAM;QAAA0B,OAAA;MAAA;QAAzB,KAAAD,WAAA,CAAA1e,CAAA,MAAA2e,OAAA,GAAAD,WAAA,CAAAze,CAAA,IAAAC,IAAA,GAA2B;UAAA,IAAlBmN,CAAC,GAAAsR,OAAA,CAAA3hB,KAAA;UACN,IAAI4hB,MAAM,GAAGvR,CAAC,CAACxM,GAAG,CAACgC,OAAO,CAAC;UAC3B,IAAI,CAAC+b,MAAM,EACP,OAAO,IAAI;UACf3B,MAAM,CAACpe,IAAI,CAAC+f,MAAM,CAAC;QACvB;MAAC,SAAAte,GAAA;QAAAoe,WAAA,CAAAne,CAAA,CAAAD,GAAA;MAAA;QAAAoe,WAAA,CAAAle,CAAA;MAAA;MACD,OAAO,IAAIge,aAAa,CAACvB,MAAM,EAAE,IAAI,CAACzS,MAAM,CAAC;IACjD;EAAC;IAAAzN,GAAA;IAAAC,KAAA,EACD,SAAA6hB,qBAAqB3K,GAAG,EAAE;MAAA,IAAA4K,OAAA;MACtB,OAAO5K,GAAG,CAAC+I,MAAM,CAACjc,KAAK,CAAC,UAAA4B,KAAK;QAAA,OAAIkc,OAAI,CAAC7B,MAAM,CAACxS,IAAI,CAAC,UAAA4C,CAAC;UAAA,OAAIA,CAAC,CAACrE,KAAK,IAAI8V,OAAI,CAACtU,MAAM,IAAI6C,CAAC,CAAC7P,IAAI,IAAIoF,KAAK,CAACpF,IAAI,IAAI6P,CAAC,CAAC5P,EAAE,IAAImF,KAAK,CAACnF,EAAE;QAAA,EAAC;MAAA,EAAC;IAC/H;EAAC;EAAA,OAAA+gB,aAAA;AAAA;AAEL,IAAMO,SAAS,GAAG,aAAahkB,WAAW,CAACuH,MAAM,CAAC;EAC9CzB,GAAG,WAAAA,IAAC7D,KAAK,EAAE6F,OAAO,EAAE;IAAE,OAAO7F,KAAK,IAAIA,KAAK,CAAC6D,GAAG,CAACgC,OAAO,CAAC;EAAE;AAC9D,CAAC,CAAC;AACF,IAAMmc,WAAW,GAAG,aAAajkB,WAAW,CAACuH,MAAM,CAAC,CAAC;AACrD,IAAM2c,YAAY,GAAG,aAAa3jB,UAAU,CAACgH,MAAM,CAAC;EAChD3C,MAAM,WAAAA,OAAA,EAAG;IAAE,OAAO,IAAI;EAAE,CAAC;EACzB+L,MAAM,WAAAA,OAAC1O,KAAK,EAAEiP,EAAE,EAAE;IAAA,IAAAiT,WAAA,GAAApf,0BAAA,CACKmM,EAAE,CAACjC,OAAO;MAAAmV,OAAA;IAAA;MAA7B,KAAAD,WAAA,CAAAlf,CAAA,MAAAmf,OAAA,GAAAD,WAAA,CAAAjf,CAAA,IAAAC,IAAA,GAA+B;QAAA,IAAtBqY,MAAM,GAAA4G,OAAA,CAAAniB,KAAA;QACX,IAAIub,MAAM,CAACC,EAAE,CAACuG,SAAS,CAAC,EACpB,OAAOxG,MAAM,CAACvb,KAAK;QACvB,IAAIub,MAAM,CAACC,EAAE,CAACwG,WAAW,CAAC,IAAIhiB,KAAK,EAC/B,OAAO,IAAIwhB,aAAa,CAACxhB,KAAK,CAACigB,MAAM,EAAE1E,MAAM,CAACvb,KAAK,CAAC;MAC5D;IAAC,SAAAsD,GAAA;MAAA4e,WAAA,CAAA3e,CAAA,CAAAD,GAAA;IAAA;MAAA4e,WAAA,CAAA1e,CAAA;IAAA;IACD,IAAIxD,KAAK,IAAIiP,EAAE,CAACJ,UAAU,EACtB7O,KAAK,GAAGA,KAAK,CAAC6D,GAAG,CAACoL,EAAE,CAACpJ,OAAO,CAAC;IACjC,IAAI7F,KAAK,IAAIiP,EAAE,CAACnK,SAAS,IAAI,CAAC9E,KAAK,CAAC6hB,oBAAoB,CAAC5S,EAAE,CAACnK,SAAS,CAAC,EAClE9E,KAAK,GAAG,IAAI;IAChB,OAAOA,KAAK;EAChB,CAAC;EACDid,OAAO,EAAE,SAAAA,QAAAzZ,CAAC;IAAA,OAAItE,UAAU,CAACkjB,WAAW,CAAC5hB,IAAI,CAACgD,CAAC,EAAE,UAAA0Z,GAAG;MAAA,OAAIA,GAAG,GAAGA,GAAG,CAACuE,IAAI,GAAGtiB,UAAU,CAACuc,IAAI;IAAA,EAAC;EAAA;AACzF,CAAC,CAAC;AACF,SAAS2G,cAAcA,CAACpC,MAAM,EAAEjU,KAAK,EAAE;EACnC,OAAOhO,eAAe,CAAC2E,MAAM,CAACsd,MAAM,CAAC/G,MAAM,CAAC,UAAA7I,CAAC;IAAA,OAAIA,CAAC,CAACrE,KAAK,IAAIA,KAAK;EAAA,EAAC,CAACnI,GAAG,CAAC,UAAAwM,CAAC;IAAA,OAAIrS,eAAe,CAAC4H,KAAK,CAACyK,CAAC,CAAC7P,IAAI,EAAE6P,CAAC,CAAC5P,EAAE,CAAC;EAAA,EAAC,CAAC;AACrH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS6hB,OAAOA,CAACnC,QAAQ,EAAE;EACvB,IAAImC,OAAO,GAAGhD,OAAO,CAACY,KAAK,CAACC,QAAQ,CAAC;EACrC,OAAO,UAACoC,MAAM,EAAE5d,UAAU,EAAEnE,IAAI,EAAEC,EAAE,EAAK;IACrC,IAAA+hB,oBAAA,GAAuBF,OAAO,CAAC7C,WAAW,CAAC8C,MAAM,CAAC9iB,KAAK,EAAEe,IAAI,CAAC;MAAxDE,IAAI,GAAA8hB,oBAAA,CAAJ9hB,IAAI;MAAEuf,MAAM,GAAAuC,oBAAA,CAANvC,MAAM;IAClB,IAAIwC,IAAI,GAAG;MACP5c,OAAO,EAAE;QAAErF,IAAI,EAAJA,IAAI;QAAEC,EAAE,EAAFA,EAAE;QAAEqF,MAAM,EAAEtH,IAAI,CAAC0O,EAAE,CAACxM,IAAI;MAAE,CAAC;MAC5CuW,cAAc,EAAE,IAAI;MACpBxE,WAAW,EAAE9N,UAAU,GAAGU,gBAAgB,CAAC6H,EAAE,CAACvI,UAAU,CAAC,GAAGmH;IAChE,CAAC;IACD,IAAImU,MAAM,CAAC5c,MAAM,EACbof,IAAI,CAAC3d,SAAS,GAAGud,cAAc,CAACpC,MAAM,EAAE,CAAC,CAAC;IAC9C,IAAIA,MAAM,CAAC5c,MAAM,GAAG,CAAC,EAAE;MACnB,IAAImK,MAAM,GAAG,IAAIgU,aAAa,CAACvB,MAAM,EAAE,CAAC,CAAC;MACzC,IAAIjT,OAAO,GAAGyV,IAAI,CAACzV,OAAO,GAAG,CAAC+U,SAAS,CAAC7U,EAAE,CAACM,MAAM,CAAC,CAAC;MACnD,IAAI+U,MAAM,CAAC9iB,KAAK,CAACuM,KAAK,CAACiW,YAAY,EAAE,KAAK,CAAC,KAAKnW,SAAS,EACrDkB,OAAO,CAACnL,IAAI,CAAC9D,WAAW,CAAC2kB,YAAY,CAACxV,EAAE,CAAC,CAAC+U,YAAY,EAAEU,gBAAgB,EAAEC,qBAAqB,EAAExF,SAAS,CAAC,CAAC,CAAC;IACrH;IACAmF,MAAM,CAACxV,QAAQ,CAACwV,MAAM,CAAC9iB,KAAK,CAACiP,MAAM,CAAC+T,IAAI,CAAC,CAAC;EAC9C,CAAC;AACL;AACA,SAASI,SAASA,CAACC,GAAG,EAAE;EACpB,OAAO,UAAAC,KAAA,EAAyB;IAAA,IAAtBtjB,KAAK,GAAAsjB,KAAA,CAALtjB,KAAK;MAAEsN,QAAQ,GAAAgW,KAAA,CAARhW,QAAQ;IACrB,IAAIS,MAAM,GAAG/N,KAAK,CAACuM,KAAK,CAACiW,YAAY,EAAE,KAAK,CAAC;IAC7C,IAAI,CAACzU,MAAM,IAAIsV,GAAG,GAAG,CAAC,IAAItV,MAAM,CAACA,MAAM,IAAI,CAAC,EACxC,OAAO,KAAK;IAChB,IAAI1F,IAAI,GAAG0F,MAAM,CAACA,MAAM,GAAGsV,GAAG;MAAEE,IAAI,GAAGF,GAAG,GAAG,CAAC,IAAI,CAACtV,MAAM,CAACyS,MAAM,CAACxS,IAAI,CAAC,UAAA4C,CAAC;QAAA,OAAIA,CAAC,CAACrE,KAAK,IAAIlE,IAAI,GAAGgb,GAAG;MAAA,EAAC;IACjG/V,QAAQ,CAACtN,KAAK,CAACiP,MAAM,CAAC;MAClB5J,SAAS,EAAEud,cAAc,CAAC7U,MAAM,CAACyS,MAAM,EAAEnY,IAAI,CAAC;MAC9CkF,OAAO,EAAE+U,SAAS,CAAC7U,EAAE,CAAC8V,IAAI,GAAG,IAAI,GAAG,IAAIxB,aAAa,CAAChU,MAAM,CAACyS,MAAM,EAAEnY,IAAI,CAAC;IAC9E,CAAC,CAAC,CAAC;IACH,OAAO,IAAI;EACf,CAAC;AACL;AACA;AACA;AACA;AACA,IAAMmb,YAAY,GAAG,SAAfA,YAAYA,CAAAC,KAAA,EAA4B;EAAA,IAAtBzjB,KAAK,GAAAyjB,KAAA,CAALzjB,KAAK;IAAEsN,QAAQ,GAAAmW,KAAA,CAARnW,QAAQ;EACnC,IAAIS,MAAM,GAAG/N,KAAK,CAACuM,KAAK,CAACiW,YAAY,EAAE,KAAK,CAAC;EAC7C,IAAI,CAACzU,MAAM,EACP,OAAO,KAAK;EAChBT,QAAQ,CAACtN,KAAK,CAACiP,MAAM,CAAC;IAAE1B,OAAO,EAAE+U,SAAS,CAAC7U,EAAE,CAAC,IAAI;EAAE,CAAC,CAAC,CAAC;EACvD,OAAO,IAAI;AACf,CAAC;AACD;AACA;AACA;AACA,IAAMiW,gBAAgB,GAAG,aAAaN,SAAS,CAAC,CAAC,CAAC;AAClD;AACA;AACA;AACA,IAAMO,gBAAgB,GAAG,aAAaP,SAAS,CAAC,CAAC,CAAC,CAAC;AACnD;AACA;AACA;AACA;AACA,SAASQ,mBAAmBA,CAAC5jB,KAAK,EAAE;EAChC,IAAI+N,MAAM,GAAG/N,KAAK,CAACuM,KAAK,CAACiW,YAAY,EAAE,KAAK,CAAC;EAC7C,OAAO,CAAC,EAAEzU,MAAM,IAAIA,MAAM,CAACyS,MAAM,CAACxS,IAAI,CAAC,UAAA4C,CAAC;IAAA,OAAIA,CAAC,CAACrE,KAAK,IAAIwB,MAAM,CAACA,MAAM,GAAG,CAAC;EAAA,EAAC,CAAC;AAC9E;AACA;AACA;AACA;AACA;AACA,SAAS8V,mBAAmBA,CAAC7jB,KAAK,EAAE;EAChC,IAAI+N,MAAM,GAAG/N,KAAK,CAACuM,KAAK,CAACiW,YAAY,EAAE,KAAK,CAAC;EAC7C,OAAO,CAAC,EAAEzU,MAAM,IAAIA,MAAM,CAACA,MAAM,GAAG,CAAC,CAAC;AAC1C;AACA,IAAM+V,oBAAoB,GAAG,CACzB;EAAExjB,GAAG,EAAE,KAAK;EAAEyjB,GAAG,EAAEL,gBAAgB;EAAEM,KAAK,EAAEL;AAAiB,CAAC,EAC9D;EAAErjB,GAAG,EAAE,QAAQ;EAAEyjB,GAAG,EAAEP;AAAa,CAAC,CACvC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAMS,aAAa,GAAG,aAAatlB,KAAK,CAACkH,MAAM,CAAC;EAC5CwD,OAAO,WAAAA,QAAC6a,IAAI,EAAE;IAAE,OAAOA,IAAI,CAACtgB,MAAM,GAAGsgB,IAAI,CAAC,CAAC,CAAC,GAAGJ,oBAAoB;EAAE;AACzE,CAAC,CAAC;AACF,IAAMZ,gBAAgB,GAAG,aAAapkB,IAAI,CAACqlB,OAAO,EAAC,aAAavkB,MAAM,CAACwkB,OAAO,CAAC,CAACH,aAAa,CAAC,EAAE,UAAAjkB,KAAK;EAAA,OAAIA,KAAK,CAAC8M,KAAK,CAACmX,aAAa,CAAC;AAAA,EAAC,CAAC;AACrI;AACA;AACA;AACA;AACA;AACA,SAASI,iBAAiBA,CAAC3D,QAAQ,EAAExb,UAAU,EAAE;EAC7C,OAAO1C,MAAM,CAACyD,MAAM,CAACzD,MAAM,CAACyD,MAAM,CAAC,CAAC,CAAC,EAAEf,UAAU,CAAC,EAAE;IAAE8K,KAAK,EAAE6S,OAAO,CAACnC,QAAQ;EAAE,CAAC,CAAC;AACrF;AACA,IAAMyC,qBAAqB,GAAG,aAAa1jB,UAAU,CAAC6kB,gBAAgB,CAAC;EACnEC,SAAS,WAAAA,UAAC9R,KAAK,EAAE9H,IAAI,EAAE;IACnB,IAAIoD,MAAM,GAAGpD,IAAI,CAAC3K,KAAK,CAACuM,KAAK,CAACiW,YAAY,EAAE,KAAK,CAAC;MAAEviB,GAAG;IACvD,IAAI,CAAC8N,MAAM,IAAI,CAAC9N,GAAG,GAAG0K,IAAI,CAAC6Z,WAAW,CAAC;MAAEC,CAAC,EAAEhS,KAAK,CAACiS,OAAO;MAAEC,CAAC,EAAElS,KAAK,CAACmS;IAAQ,CAAC,CAAC,KAAK,IAAI,EACnF,OAAO,KAAK;IAChB,IAAIjgB,KAAK,GAAGoJ,MAAM,CAACyS,MAAM,CAACvO,IAAI,CAAC,UAAArB,CAAC;MAAA,OAAIA,CAAC,CAAC7P,IAAI,IAAId,GAAG,IAAI2Q,CAAC,CAAC5P,EAAE,IAAIf,GAAG;IAAA,EAAC;IACjE,IAAI,CAAC0E,KAAK,IAAIA,KAAK,CAAC4H,KAAK,IAAIwB,MAAM,CAACA,MAAM,EACtC,OAAO,KAAK;IAChBpD,IAAI,CAAC2C,QAAQ,CAAC;MACVjI,SAAS,EAAEud,cAAc,CAAC7U,MAAM,CAACyS,MAAM,EAAE7b,KAAK,CAAC4H,KAAK,CAAC;MACrDgB,OAAO,EAAE+U,SAAS,CAAC7U,EAAE,CAACM,MAAM,CAACyS,MAAM,CAACxS,IAAI,CAAC,UAAA4C,CAAC;QAAA,OAAIA,CAAC,CAACrE,KAAK,GAAG5H,KAAK,CAAC4H,KAAK;MAAA,EAAC,GAAG,IAAIwV,aAAa,CAAChU,MAAM,CAACyS,MAAM,EAAE7b,KAAK,CAAC4H,KAAK,CAAC,GAAG,IAAI;IAC/H,CAAC,CAAC;IACF,OAAO,IAAI;EACf;AACJ,CAAC,CAAC;AAEF,SAASsY,MAAMA,CAACC,SAAS,EAAE;EACvB,IAAIC,OAAO,GAAGD,SAAS,CAACjiB,OAAO,CAAC,kBAAkB,EAAE,MAAM,CAAC;EAC3D,IAAI;IACA,OAAO,IAAIoB,MAAM,gCAAAnB,MAAA,CAAgCiiB,OAAO,SAAM,IAAI,CAAC;EACvE,CAAC,CACD,OAAOxf,EAAE,EAAE;IACP,OAAO,IAAItB,MAAM,MAAAnB,MAAA,CAAOiiB,OAAO,QAAK,GAAG,CAAC;EAC5C;AACJ;AACA,SAASC,KAAKA,CAACC,EAAE,EAAElhB,CAAC,EAAE;EAClB,OAAO,IAAIE,MAAM,CAACF,CAAC,CAACkhB,EAAE,CAACjhB,MAAM,CAAC,EAAEihB,EAAE,CAACC,OAAO,GAAG,GAAG,GAAG,EAAE,CAAC;AAC1D;AACA,IAAMC,UAAU,GAAG,aAAa3iB,MAAM,CAACU,MAAM,CAAC,IAAI,CAAC;AACnD,SAASkiB,SAASA,CAACN,SAAS,EAAE;EAC1B,OAAOK,UAAU,CAACL,SAAS,CAAC,KAAKK,UAAU,CAACL,SAAS,CAAC,GAAG,IAAIre,OAAO,CAAD,CAAC,CAAC;AACzE;AACA,SAAS4e,UAAUA,CAAC9jB,GAAG,EAAEsjB,MAAM,EAAE7b,MAAM,EAAEsc,IAAI,EAAEC,QAAQ,EAAE;EACrD,KAAK,IAAIzF,KAAK,GAAGve,GAAG,CAACikB,SAAS,CAAC,CAAC,EAAEvlB,GAAG,GAAG,CAAC,EAAE,CAAC6f,KAAK,CAACzX,IAAI,CAAC,CAAC,CAAC5E,IAAI,GAAG;IACxD,IAAElD,KAAK,GAAKuf,KAAK,CAAfvf,KAAK;MAAYqgB,CAAC;IACxBiE,MAAM,CAACY,SAAS,GAAG,CAAC;IACpB,OAAO7E,CAAC,GAAGiE,MAAM,CAAClP,IAAI,CAACpV,KAAK,CAAC,EAAE;MAC3B,IAAI,CAAC+kB,IAAI,CAAC1E,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI3gB,GAAG,GAAG2gB,CAAC,CAACM,KAAK,IAAIqE,QAAQ,EAAE;QAC1Cvc,MAAM,CAAC5G,IAAI,CAAC;UAAEjB,IAAI,EAAE,MAAM;UAAEuC,KAAK,EAAEkd,CAAC,CAAC,CAAC;QAAE,CAAC,CAAC;QAC1C0E,IAAI,CAAC1E,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI;QACjB,IAAI5X,MAAM,CAACpF,MAAM,IAAI,IAAI,CAAC,iBACtB;MACR;IACJ;IACA3D,GAAG,IAAIM,KAAK,CAACqD,MAAM,GAAG,CAAC;EAC3B;AACJ;AACA,SAAS8hB,YAAYA,CAACnkB,GAAG,EAAEokB,KAAK,EAAEd,MAAM,EAAE7jB,EAAE,EAAEukB,QAAQ,EAAE;EACpD,IAAIK,GAAG,GAAGrkB,GAAG,CAACqC,MAAM,IAAI,IAAI,CAAC;EAC7B,IAAIiiB,MAAM,GAAGD,GAAG,IAAID,KAAK,CAAC1jB,GAAG,CAACV,GAAG,CAAC;EAClC,IAAIskB,MAAM,EACN,OAAOA,MAAM;EACjB,IAAI7c,MAAM,GAAG,EAAE;IAAEsc,IAAI,GAAG9iB,MAAM,CAACU,MAAM,CAAC,IAAI,CAAC;EAC3C,IAAI3B,GAAG,CAACukB,QAAQ,EAAE;IACd,IAAI7lB,GAAG,GAAG,CAAC;IAAC,IAAA8lB,WAAA,GAAA1iB,0BAAA,CACG9B,GAAG,CAACukB,QAAQ;MAAAE,OAAA;IAAA;MAA3B,KAAAD,WAAA,CAAAxiB,CAAA,MAAAyiB,OAAA,GAAAD,WAAA,CAAAviB,CAAA,IAAAC,IAAA,GAA6B;QAAA,IAApBsF,EAAE,GAAAid,OAAA,CAAAzlB,KAAA;QACP,IAAIwI,EAAE,CAACnF,MAAM,IAAI,IAAI,CAAC,qBAAqB;UAAA,IAAAqiB,WAAA,GAAA5iB,0BAAA,CACzBqiB,YAAY,CAAC3c,EAAE,EAAE4c,KAAK,EAAEd,MAAM,EAAE7jB,EAAE,GAAGf,GAAG,EAAEslB,QAAQ,GAAGtlB,GAAG,CAAC;YAAAimB,OAAA;UAAA;YAAvE,KAAAD,WAAA,CAAA1iB,CAAA,MAAA2iB,OAAA,GAAAD,WAAA,CAAAziB,CAAA,IAAAC,IAAA,GAAyE;cAAA,IAAhEgH,CAAC,GAAAyb,OAAA,CAAA3lB,KAAA;cACN,IAAI,CAAC+kB,IAAI,CAAC7a,CAAC,CAAC/G,KAAK,CAAC,EAAE;gBAChB4hB,IAAI,CAAC7a,CAAC,CAAC/G,KAAK,CAAC,GAAG,IAAI;gBACpBsF,MAAM,CAAC5G,IAAI,CAACqI,CAAC,CAAC;cAClB;YACJ;UAAC,SAAA5G,GAAA;YAAAoiB,WAAA,CAAAniB,CAAA,CAAAD,GAAA;UAAA;YAAAoiB,WAAA,CAAAliB,CAAA;UAAA;QACL,CAAC,MACI;UACDshB,UAAU,CAACtc,EAAE,EAAE8b,MAAM,EAAE7b,MAAM,EAAEsc,IAAI,EAAEC,QAAQ,GAAGtlB,GAAG,CAAC;QACxD;QACAA,GAAG,IAAI8I,EAAE,CAACnF,MAAM,GAAG,CAAC;MACxB;IAAC,SAAAC,GAAA;MAAAkiB,WAAA,CAAAjiB,CAAA,CAAAD,GAAA;IAAA;MAAAkiB,WAAA,CAAAhiB,CAAA;IAAA;EACL,CAAC,MACI;IACDshB,UAAU,CAAC9jB,GAAG,EAAEsjB,MAAM,EAAE7b,MAAM,EAAEsc,IAAI,EAAEC,QAAQ,CAAC;EACnD;EACA,IAAIK,GAAG,IAAI5c,MAAM,CAACpF,MAAM,GAAG,IAAI,CAAC,iBAC5B+hB,KAAK,CAAC7e,GAAG,CAACvF,GAAG,EAAEyH,MAAM,CAAC;EAC1B,OAAOA,MAAM;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,IAAMmd,eAAe,GAAG,SAAlBA,eAAeA,CAAGvhB,OAAO,EAAI;EAC/B,IAAIkgB,SAAS,GAAGlgB,OAAO,CAAC5E,KAAK,CAACyb,cAAc,CAAC,WAAW,EAAE7W,OAAO,CAAC3E,GAAG,CAAC,CAACyC,IAAI,CAAC,EAAE,CAAC;EAC/E,IAAIuiB,EAAE,GAAGJ,MAAM,CAACC,SAAS,CAAC;EAC1B,IAAIpkB,KAAK,GAAGkE,OAAO,CAACxD,WAAW,CAAC4jB,KAAK,CAACC,EAAE,EAAE,UAAA1hB,CAAC;IAAA,OAAIA,CAAC,GAAG,GAAG;EAAA,EAAC,CAAC;EACxD,IAAI,CAAC7C,KAAK,IAAI,CAACkE,OAAO,CAAC1E,QAAQ,EAC3B,OAAO,IAAI;EACf,IAAIa,IAAI,GAAGL,KAAK,GAAGA,KAAK,CAACK,IAAI,GAAG6D,OAAO,CAAC3E,GAAG;EAC3C,IAAI+C,OAAO,GAAG0iB,YAAY,CAAC9gB,OAAO,CAAC5E,KAAK,CAACuB,GAAG,EAAE6jB,SAAS,CAACN,SAAS,CAAC,EAAEG,EAAE,EAAE,KAAK,CAAC,eAAelkB,IAAI,CAAC;EAClG,OAAO;IAAEA,IAAI,EAAJA,IAAI;IAAEiC,OAAO,EAAPA,OAAO;IAAE0B,QAAQ,EAAEsgB,KAAK,CAACC,EAAE,EAAE,UAAA1hB,CAAC;MAAA,OAAI,GAAG,GAAGA,CAAC;IAAA;EAAE,CAAC;AAC/D,CAAC;AAED,IAAM6iB,QAAQ,GAAG;EACbC,QAAQ,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACnCC,MAAM,EAAE,QAAQ;EAChBC,cAAc,EAAE;AACpB,CAAC;AACD,IAAMC,kBAAkB,GAAG,aAAaloB,WAAW,CAACuH,MAAM,CAAC;EACvDzB,GAAG,WAAAA,IAAC7D,KAAK,EAAEgd,OAAO,EAAE;IAChB,IAAI4E,MAAM,GAAG5E,OAAO,CAACtC,MAAM,CAAC1a,KAAK,EAAE,CAAC,CAAC,EAAEvB,OAAO,CAACynB,UAAU,CAAC;IAC1D,OAAOtE,MAAM,IAAI,IAAI,GAAG9V,SAAS,GAAG8V,MAAM;EAC9C;AACJ,CAAC,CAAC;AACF,IAAMuE,aAAa,GAAG,aAAa,6BAAAC,WAAA;EAAA1J,SAAA,CAAA2J,OAAA,EAAAD,WAAA;EAAA,IAAAE,OAAA,GAAA1J,YAAA,CAAAyJ,OAAA;EAAA,SAAAA,QAAA;IAAAzmB,eAAA,OAAAymB,OAAA;IAAA,OAAAC,OAAA,CAAA7W,KAAA,OAAA5D,SAAA;EAAA;EAAA,OAAA/L,YAAA,CAAAumB,OAAA;AAAA,EAAkB3nB,UAAU,GAC/D,CAAC;AACDynB,aAAa,CAACI,SAAS,GAAG,CAAC;AAC3BJ,aAAa,CAACK,OAAO,GAAG,CAAC,CAAC;AAC1B,IAAMC,YAAY,GAAG,aAAanoB,UAAU,CAACgH,MAAM,CAAC;EAChD3C,MAAM,WAAAA,OAAA,EAAG;IAAE,OAAOhE,QAAQ,CAAC6d,KAAK;EAAE,CAAC;EACnC9N,MAAM,WAAAA,OAAC1O,KAAK,EAAEiP,EAAE,EAAE;IACd,IAAIA,EAAE,CAACnK,SAAS,EAAE;MACd,IAAI4a,SAAS,GAAGzQ,EAAE,CAACxP,KAAK,CAACuB,GAAG,CAACC,MAAM,CAACgO,EAAE,CAACnK,SAAS,CAACC,IAAI,CAAC2hB,IAAI,CAAC,CAAClmB,IAAI;MAChE,IAAImmB,aAAa,GAAG1X,EAAE,CAACH,UAAU,CAAC9N,GAAG,CAACC,MAAM,CAACgO,EAAE,CAACH,UAAU,CAAChK,SAAS,CAACC,IAAI,CAAC2hB,IAAI,CAAC,CAAClmB,IAAI;MACpF,IAAIkf,SAAS,IAAIzQ,EAAE,CAACpJ,OAAO,CAAC6U,MAAM,CAACiM,aAAa,EAAE,CAAC,CAAC,CAAC,EACjD3mB,KAAK,GAAGrB,QAAQ,CAAC6d,KAAK;IAC9B;IACAxc,KAAK,GAAGA,KAAK,CAAC6D,GAAG,CAACoL,EAAE,CAACpJ,OAAO,CAAC;IAAC,IAAA+gB,WAAA,GAAA9jB,0BAAA,CACXmM,EAAE,CAACjC,OAAO;MAAA6Z,OAAA;IAAA;MAA7B,KAAAD,WAAA,CAAA5jB,CAAA,MAAA6jB,OAAA,GAAAD,WAAA,CAAA3jB,CAAA,IAAAC,IAAA,GACI;QAAA,IADKqY,MAAM,GAAAsL,OAAA,CAAA7mB,KAAA;QACX,IAAIub,MAAM,CAACC,EAAE,CAACyK,kBAAkB,CAAC,EAC7BjmB,KAAK,GAAGA,KAAK,CAAC0O,MAAM,CAAC;UAAEyE,GAAG,EAAE,CAACgT,aAAa,CAACvgB,KAAK,CAAC2V,MAAM,CAACvb,KAAK,EAAEub,MAAM,CAACvb,KAAK,GAAG,CAAC,CAAC;QAAE,CAAC,CAAC;MAAA;IAAC,SAAAsD,GAAA;MAAAsjB,WAAA,CAAArjB,CAAA,CAAAD,GAAA;IAAA;MAAAsjB,WAAA,CAAApjB,CAAA;IAAA;IAC7F,OAAOxD,KAAK;EAChB;AACJ,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS8mB,aAAaA,CAAA,EAAG;EACrB,OAAO,CAACC,YAAY,EAAEN,YAAY,CAAC;AACvC;AACA,IAAMO,cAAc,GAAG,UAAU;AACjC,SAASC,OAAOA,CAACze,EAAE,EAAE;EACjB,KAAK,IAAIpF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG4jB,cAAc,CAAC3jB,MAAM,EAAED,CAAC,IAAI,CAAC,EAC7C,IAAI4jB,cAAc,CAACE,UAAU,CAAC9jB,CAAC,CAAC,IAAIoF,EAAE,EAClC,OAAOwe,cAAc,CAACG,MAAM,CAAC/jB,CAAC,GAAG,CAAC,CAAC;EAC3C,OAAOjF,aAAa,CAACqK,EAAE,GAAG,GAAG,GAAGA,EAAE,GAAGA,EAAE,GAAG,CAAC,CAAC;AAChD;AACA,SAASmK,MAAMA,CAAClT,KAAK,EAAEC,GAAG,EAAE;EACxB,OAAOD,KAAK,CAACyb,cAAc,CAAC,eAAe,EAAExb,GAAG,CAAC,CAAC,CAAC,CAAC,IAAImmB,QAAQ;AACpE;AACA,IAAMuB,OAAO,GAAG,OAAOC,SAAS,IAAI,QAAQ,IAAI,aAAa,YAAW,CAAChlB,IAAI,CAACglB,SAAS,CAACC,SAAS,CAAC;AAClG,IAAMP,YAAY,GAAG,aAAa7nB,UAAU,CAAC6nB,YAAY,CAAC7Z,EAAE,CAAC,UAAC9C,IAAI,EAAE5J,IAAI,EAAEC,EAAE,EAAEqF,MAAM,EAAK;EACrF,IAAI,CAACshB,OAAO,GAAGhd,IAAI,CAACkE,SAAS,GAAGlE,IAAI,CAACmd,kBAAkB,KAAKnd,IAAI,CAAC3K,KAAK,CAAC2N,QAAQ,EAC3E,OAAO,KAAK;EAChB,IAAI8J,GAAG,GAAG9M,IAAI,CAAC3K,KAAK,CAACqF,SAAS,CAACC,IAAI;EACnC,IAAIe,MAAM,CAACzC,MAAM,GAAG,CAAC,IAAIyC,MAAM,CAACzC,MAAM,IAAI,CAAC,IAAInF,aAAa,CAACD,WAAW,CAAC6H,MAAM,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IACrFtF,IAAI,IAAI0W,GAAG,CAAC1W,IAAI,IAAIC,EAAE,IAAIyW,GAAG,CAACzW,EAAE,EAChC,OAAO,KAAK;EAChB,IAAIwO,EAAE,GAAGuY,aAAa,CAACpd,IAAI,CAAC3K,KAAK,EAAEqG,MAAM,CAAC;EAC1C,IAAI,CAACmJ,EAAE,EACH,OAAO,KAAK;EAChB7E,IAAI,CAAC2C,QAAQ,CAACkC,EAAE,CAAC;EACjB,OAAO,IAAI;AACf,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA,IAAMwY,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAAC,KAAA,EAA4B;EAAA,IAAtBjoB,KAAK,GAAAioB,KAAA,CAALjoB,KAAK;IAAEsN,QAAQ,GAAA2a,KAAA,CAAR3a,QAAQ;EACxC,IAAItN,KAAK,CAAC2N,QAAQ,EACd,OAAO,KAAK;EAChB,IAAI8D,IAAI,GAAGyB,MAAM,CAAClT,KAAK,EAAEA,KAAK,CAACqF,SAAS,CAACC,IAAI,CAAC2hB,IAAI,CAAC;EACnD,IAAIiB,MAAM,GAAGzW,IAAI,CAAC4U,QAAQ,IAAID,QAAQ,CAACC,QAAQ;EAC/C,IAAI8B,IAAI,GAAG,IAAI;IAAE/hB,OAAO,GAAGpG,KAAK,CAACkG,aAAa,CAAC,UAAAC,KAAK,EAAI;MACpD,IAAIA,KAAK,CAAC4W,KAAK,EAAE;QACb,IAAIuJ,MAAM,GAAG8B,QAAQ,CAACpoB,KAAK,CAACuB,GAAG,EAAE4E,KAAK,CAAC8gB,IAAI,CAAC;QAAC,IAAAoB,WAAA,GAAAhlB,0BAAA,CAC3B6kB,MAAM;UAAAI,OAAA;QAAA;UAAxB,KAAAD,WAAA,CAAA9kB,CAAA,MAAA+kB,OAAA,GAAAD,WAAA,CAAA7kB,CAAA,IAAAC,IAAA,GAA0B;YAAA,IAAjB/C,KAAK,GAAA4nB,OAAA,CAAA/nB,KAAA;YACV,IAAIG,KAAK,IAAI4lB,MAAM,IAAIiC,QAAQ,CAACvoB,KAAK,CAACuB,GAAG,EAAE4E,KAAK,CAAC8gB,IAAI,CAAC,IAAIO,OAAO,CAAChpB,WAAW,CAACkC,KAAK,EAAE,CAAC,CAAC,CAAC,EACpF,OAAO;cAAE0F,OAAO,EAAE;gBAAErF,IAAI,EAAEoF,KAAK,CAAC8gB,IAAI,GAAGvmB,KAAK,CAACkD,MAAM;gBAAE5C,EAAE,EAAEmF,KAAK,CAAC8gB,IAAI,GAAGvmB,KAAK,CAACkD;cAAO,CAAC;cAChFuC,KAAK,EAAE5H,eAAe,CAAC+H,MAAM,CAACH,KAAK,CAAC8gB,IAAI,GAAGvmB,KAAK,CAACkD,MAAM;YAAE,CAAC;UACtE;QAAC,SAAAC,GAAA;UAAAwkB,WAAA,CAAAvkB,CAAA,CAAAD,GAAA;QAAA;UAAAwkB,WAAA,CAAAtkB,CAAA;QAAA;MACL;MACA,OAAO;QAAEoC,KAAK,EAAEgiB,IAAI,GAAGhiB;MAAM,CAAC;IAClC,CAAC,CAAC;EACF,IAAI,CAACgiB,IAAI,EACL7a,QAAQ,CAACtN,KAAK,CAACiP,MAAM,CAAC7I,OAAO,EAAE;IAAEoR,cAAc,EAAE,IAAI;IAAEjR,SAAS,EAAE;EAAkB,CAAC,CAAC,CAAC;EAC3F,OAAO,CAAC4hB,IAAI;AAChB,CAAC;AACD;AACA;AACA;AACA;AACA,IAAMK,mBAAmB,GAAG,CACxB;EAAEloB,GAAG,EAAE,WAAW;EAAEyjB,GAAG,EAAEiE;AAAkB,CAAC,CAC/C;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASD,aAAaA,CAAC/nB,KAAK,EAAEyoB,OAAO,EAAE;EACnC,IAAIhX,IAAI,GAAGyB,MAAM,CAAClT,KAAK,EAAEA,KAAK,CAACqF,SAAS,CAACC,IAAI,CAAC2hB,IAAI,CAAC;EACnD,IAAIiB,MAAM,GAAGzW,IAAI,CAAC4U,QAAQ,IAAID,QAAQ,CAACC,QAAQ;EAAC,IAAAqC,WAAA,GAAArlB,0BAAA,CAChC6kB,MAAM;IAAAS,OAAA;EAAA;IAAtB,KAAAD,WAAA,CAAAnlB,CAAA,MAAAolB,OAAA,GAAAD,WAAA,CAAAllB,CAAA,IAAAC,IAAA,GAAwB;MAAA,IAAfmlB,GAAG,GAAAD,OAAA,CAAApoB,KAAA;MACR,IAAIsoB,MAAM,GAAGrB,OAAO,CAAChpB,WAAW,CAACoqB,GAAG,EAAE,CAAC,CAAC,CAAC;MACzC,IAAIH,OAAO,IAAIG,GAAG,EACd,OAAOC,MAAM,IAAID,GAAG,GAAGE,UAAU,CAAC9oB,KAAK,EAAE4oB,GAAG,EAAEV,MAAM,CAACtnB,OAAO,CAACgoB,GAAG,GAAGA,GAAG,GAAGA,GAAG,CAAC,GAAG,CAAC,CAAC,EAAEnX,IAAI,CAAC,GACnFsX,UAAU,CAAC/oB,KAAK,EAAE4oB,GAAG,EAAEC,MAAM,EAAEpX,IAAI,CAAC6U,MAAM,IAAIF,QAAQ,CAACE,MAAM,CAAC;MACxE,IAAImC,OAAO,IAAII,MAAM,IAAIG,eAAe,CAAChpB,KAAK,EAAEA,KAAK,CAACqF,SAAS,CAACC,IAAI,CAACvE,IAAI,CAAC,EACtE,OAAOkoB,WAAW,CAACjpB,KAAK,EAAE4oB,GAAG,EAAEC,MAAM,CAAC;IAC9C;EAAC,SAAAhlB,GAAA;IAAA6kB,WAAA,CAAA5kB,CAAA,CAAAD,GAAA;EAAA;IAAA6kB,WAAA,CAAA3kB,CAAA;EAAA;EACD,OAAO,IAAI;AACf;AACA,SAASilB,eAAeA,CAAChpB,KAAK,EAAEC,GAAG,EAAE;EACjC,IAAI6B,KAAK,GAAG,KAAK;EACjB9B,KAAK,CAACuM,KAAK,CAACya,YAAY,CAAC,CAACkC,OAAO,CAAC,CAAC,EAAElpB,KAAK,CAACuB,GAAG,CAACqC,MAAM,EAAE,UAAA7C,IAAI,EAAI;IAC3D,IAAIA,IAAI,IAAId,GAAG,EACX6B,KAAK,GAAG,IAAI;EACpB,CAAC,CAAC;EACF,OAAOA,KAAK;AAChB;AACA,SAASymB,QAAQA,CAAChnB,GAAG,EAAEtB,GAAG,EAAE;EACxB,IAAIoI,IAAI,GAAG9G,GAAG,CAAC4nB,WAAW,CAAClpB,GAAG,EAAEA,GAAG,GAAG,CAAC,CAAC;EACxC,OAAOoI,IAAI,CAACxG,KAAK,CAAC,CAAC,EAAEpD,aAAa,CAACD,WAAW,CAAC6J,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;AAC7D;AACA,SAAS+f,QAAQA,CAAC7mB,GAAG,EAAEtB,GAAG,EAAE;EACxB,IAAIwa,IAAI,GAAGlZ,GAAG,CAAC4nB,WAAW,CAAClpB,GAAG,GAAG,CAAC,EAAEA,GAAG,CAAC;EACxC,OAAOxB,aAAa,CAACD,WAAW,CAACic,IAAI,EAAE,CAAC,CAAC,CAAC,IAAIA,IAAI,CAAC7W,MAAM,GAAG6W,IAAI,GAAGA,IAAI,CAAC5Y,KAAK,CAAC,CAAC,CAAC;AACpF;AACA,SAASknB,UAAUA,CAAC/oB,KAAK,EAAEyM,IAAI,EAAE2c,KAAK,EAAEC,WAAW,EAAE;EACjD,IAAIlB,IAAI,GAAG,IAAI;IAAE/hB,OAAO,GAAGpG,KAAK,CAACkG,aAAa,CAAC,UAAAC,KAAK,EAAI;MACpD,IAAI,CAACA,KAAK,CAAC4W,KAAK,EACZ,OAAO;QAAE3W,OAAO,EAAE,CAAC;UAAEC,MAAM,EAAEoG,IAAI;UAAE1L,IAAI,EAAEoF,KAAK,CAACpF;QAAK,CAAC,EAAE;UAAEsF,MAAM,EAAE+iB,KAAK;UAAEroB,IAAI,EAAEoF,KAAK,CAACnF;QAAG,CAAC,CAAC;QACrFuM,OAAO,EAAEiZ,kBAAkB,CAAC/Y,EAAE,CAACtH,KAAK,CAACnF,EAAE,GAAGyL,IAAI,CAAC7I,MAAM,CAAC;QACtDuC,KAAK,EAAE5H,eAAe,CAAC4H,KAAK,CAACA,KAAK,CAACmjB,MAAM,GAAG7c,IAAI,CAAC7I,MAAM,EAAEuC,KAAK,CAAC8gB,IAAI,GAAGxa,IAAI,CAAC7I,MAAM;MAAE,CAAC;MAC5F,IAAIyE,IAAI,GAAGkgB,QAAQ,CAACvoB,KAAK,CAACuB,GAAG,EAAE4E,KAAK,CAAC8gB,IAAI,CAAC;MAC1C,IAAI,CAAC5e,IAAI,IAAI,IAAI,CAACzF,IAAI,CAACyF,IAAI,CAAC,IAAIghB,WAAW,CAACzoB,OAAO,CAACyH,IAAI,CAAC,GAAG,CAAC,CAAC,EAC1D,OAAO;QAAEjC,OAAO,EAAE;UAAEC,MAAM,EAAEoG,IAAI,GAAG2c,KAAK;UAAEroB,IAAI,EAAEoF,KAAK,CAAC8gB;QAAK,CAAC;QACxD1Z,OAAO,EAAEiZ,kBAAkB,CAAC/Y,EAAE,CAACtH,KAAK,CAAC8gB,IAAI,GAAGxa,IAAI,CAAC7I,MAAM,CAAC;QACxDuC,KAAK,EAAE5H,eAAe,CAAC+H,MAAM,CAACH,KAAK,CAAC8gB,IAAI,GAAGxa,IAAI,CAAC7I,MAAM;MAAE,CAAC;MACjE,OAAO;QAAEuC,KAAK,EAAEgiB,IAAI,GAAGhiB;MAAM,CAAC;IAClC,CAAC,CAAC;EACF,OAAOgiB,IAAI,GAAG,IAAI,GAAGnoB,KAAK,CAACiP,MAAM,CAAC7I,OAAO,EAAE;IACvCoR,cAAc,EAAE,IAAI;IACpBjR,SAAS,EAAE;EACf,CAAC,CAAC;AACN;AACA,SAAS0iB,WAAWA,CAACjpB,KAAK,EAAEupB,KAAK,EAAEH,KAAK,EAAE;EACtC,IAAIjB,IAAI,GAAG,IAAI;IAAE/hB,OAAO,GAAGpG,KAAK,CAACkG,aAAa,CAAC,UAAAC,KAAK,EAAI;MACpD,IAAIA,KAAK,CAAC4W,KAAK,IAAIwL,QAAQ,CAACvoB,KAAK,CAACuB,GAAG,EAAE4E,KAAK,CAAC8gB,IAAI,CAAC,IAAImC,KAAK,EACvD,OAAO;QAAEhjB,OAAO,EAAE;UAAErF,IAAI,EAAEoF,KAAK,CAAC8gB,IAAI;UAAEjmB,EAAE,EAAEmF,KAAK,CAAC8gB,IAAI,GAAGmC,KAAK,CAACxlB,MAAM;UAAEyC,MAAM,EAAE+iB;QAAM,CAAC;QAChFjjB,KAAK,EAAE5H,eAAe,CAAC+H,MAAM,CAACH,KAAK,CAAC8gB,IAAI,GAAGmC,KAAK,CAACxlB,MAAM;MAAE,CAAC;MAClE,OAAOukB,IAAI,GAAG;QAAEhiB,KAAK,EAALA;MAAM,CAAC;IAC3B,CAAC,CAAC;EACF,OAAOgiB,IAAI,GAAG,IAAI,GAAGnoB,KAAK,CAACiP,MAAM,CAAC7I,OAAO,EAAE;IACvCoR,cAAc,EAAE,IAAI;IACpBjR,SAAS,EAAE;EACf,CAAC,CAAC;AACN;AACA;AACA;AACA,SAASuiB,UAAUA,CAAC9oB,KAAK,EAAEU,KAAK,EAAE8oB,WAAW,EAAEtW,MAAM,EAAE;EACnD,IAAIqT,cAAc,GAAGrT,MAAM,CAACqT,cAAc,IAAIH,QAAQ,CAACG,cAAc;EACrE,IAAI4B,IAAI,GAAG,IAAI;IAAE/hB,OAAO,GAAGpG,KAAK,CAACkG,aAAa,CAAC,UAAAC,KAAK,EAAI;MACpD,IAAI,CAACA,KAAK,CAAC4W,KAAK,EACZ,OAAO;QAAE3W,OAAO,EAAE,CAAC;UAAEC,MAAM,EAAE3F,KAAK;UAAEK,IAAI,EAAEoF,KAAK,CAACpF;QAAK,CAAC,EAAE;UAAEsF,MAAM,EAAE3F,KAAK;UAAEK,IAAI,EAAEoF,KAAK,CAACnF;QAAG,CAAC,CAAC;QACtFuM,OAAO,EAAEiZ,kBAAkB,CAAC/Y,EAAE,CAACtH,KAAK,CAACnF,EAAE,GAAGN,KAAK,CAACkD,MAAM,CAAC;QACvDuC,KAAK,EAAE5H,eAAe,CAAC4H,KAAK,CAACA,KAAK,CAACmjB,MAAM,GAAG5oB,KAAK,CAACkD,MAAM,EAAEuC,KAAK,CAAC8gB,IAAI,GAAGvmB,KAAK,CAACkD,MAAM;MAAE,CAAC;MAC9F,IAAI3D,GAAG,GAAGkG,KAAK,CAAC8gB,IAAI;QAAE5e,IAAI,GAAGkgB,QAAQ,CAACvoB,KAAK,CAACuB,GAAG,EAAEtB,GAAG,CAAC;QAAEwB,KAAK;MAC5D,IAAI4G,IAAI,IAAI3H,KAAK,EAAE;QACf,IAAI+oB,SAAS,CAACzpB,KAAK,EAAEC,GAAG,CAAC,EAAE;UACvB,OAAO;YAAEmG,OAAO,EAAE;cAAEC,MAAM,EAAE3F,KAAK,GAAGA,KAAK;cAAEK,IAAI,EAAEd;YAAI,CAAC;YAClDsN,OAAO,EAAEiZ,kBAAkB,CAAC/Y,EAAE,CAACxN,GAAG,GAAGS,KAAK,CAACkD,MAAM,CAAC;YAClDuC,KAAK,EAAE5H,eAAe,CAAC+H,MAAM,CAACrG,GAAG,GAAGS,KAAK,CAACkD,MAAM;UAAE,CAAC;QAC3D,CAAC,MACI,IAAIolB,eAAe,CAAChpB,KAAK,EAAEC,GAAG,CAAC,EAAE;UAClC,IAAIypB,QAAQ,GAAGF,WAAW,IAAIxpB,KAAK,CAACkB,QAAQ,CAACjB,GAAG,EAAEA,GAAG,GAAGS,KAAK,CAACkD,MAAM,GAAG,CAAC,CAAC,IAAIlD,KAAK,GAAGA,KAAK,GAAGA,KAAK;UAClG,IAAIyS,OAAO,GAAGuW,QAAQ,GAAGhpB,KAAK,GAAGA,KAAK,GAAGA,KAAK,GAAGA,KAAK;UACtD,OAAO;YAAE0F,OAAO,EAAE;cAAErF,IAAI,EAAEd,GAAG;cAAEe,EAAE,EAAEf,GAAG,GAAGkT,OAAO,CAACvP,MAAM;cAAEyC,MAAM,EAAE8M;YAAQ,CAAC;YACtEhN,KAAK,EAAE5H,eAAe,CAAC+H,MAAM,CAACrG,GAAG,GAAGkT,OAAO,CAACvP,MAAM;UAAE,CAAC;QAC7D;MACJ,CAAC,MACI,IAAI4lB,WAAW,IAAIxpB,KAAK,CAACkB,QAAQ,CAACjB,GAAG,GAAG,CAAC,GAAGS,KAAK,CAACkD,MAAM,EAAE3D,GAAG,CAAC,IAAIS,KAAK,GAAGA,KAAK,IAChF,CAACe,KAAK,GAAGkoB,gBAAgB,CAAC3pB,KAAK,EAAEC,GAAG,GAAG,CAAC,GAAGS,KAAK,CAACkD,MAAM,EAAE2iB,cAAc,CAAC,IAAI,CAAC,CAAC,IAC9EkD,SAAS,CAACzpB,KAAK,EAAEyB,KAAK,CAAC,EAAE;QACzB,OAAO;UAAE2E,OAAO,EAAE;YAAEC,MAAM,EAAE3F,KAAK,GAAGA,KAAK,GAAGA,KAAK,GAAGA,KAAK;YAAEK,IAAI,EAAEd;UAAI,CAAC;UAClEsN,OAAO,EAAEiZ,kBAAkB,CAAC/Y,EAAE,CAACxN,GAAG,GAAGS,KAAK,CAACkD,MAAM,CAAC;UAClDuC,KAAK,EAAE5H,eAAe,CAAC+H,MAAM,CAACrG,GAAG,GAAGS,KAAK,CAACkD,MAAM;QAAE,CAAC;MAC3D,CAAC,MACI,IAAI5D,KAAK,CAAC4pB,eAAe,CAAC3pB,GAAG,CAAC,CAACoI,IAAI,CAAC,IAAIlJ,YAAY,CAAC0qB,IAAI,EAAE;QAC5D,IAAIF,gBAAgB,CAAC3pB,KAAK,EAAEC,GAAG,EAAEsmB,cAAc,CAAC,GAAG,CAAC,CAAC,IAAI,CAACuD,gBAAgB,CAAC9pB,KAAK,EAAEC,GAAG,EAAES,KAAK,EAAE6lB,cAAc,CAAC,EACzG,OAAO;UAAEngB,OAAO,EAAE;YAAEC,MAAM,EAAE3F,KAAK,GAAGA,KAAK;YAAEK,IAAI,EAAEd;UAAI,CAAC;UAClDsN,OAAO,EAAEiZ,kBAAkB,CAAC/Y,EAAE,CAACxN,GAAG,GAAGS,KAAK,CAACkD,MAAM,CAAC;UAClDuC,KAAK,EAAE5H,eAAe,CAAC+H,MAAM,CAACrG,GAAG,GAAGS,KAAK,CAACkD,MAAM;QAAE,CAAC;MAC/D;MACA,OAAO;QAAEuC,KAAK,EAAEgiB,IAAI,GAAGhiB;MAAM,CAAC;IAClC,CAAC,CAAC;EACF,OAAOgiB,IAAI,GAAG,IAAI,GAAGnoB,KAAK,CAACiP,MAAM,CAAC7I,OAAO,EAAE;IACvCoR,cAAc,EAAE,IAAI;IACpBjR,SAAS,EAAE;EACf,CAAC,CAAC;AACN;AACA,SAASkjB,SAASA,CAACzpB,KAAK,EAAEC,GAAG,EAAE;EAC3B,IAAI8pB,IAAI,GAAGlqB,UAAU,CAACG,KAAK,CAAC,CAACW,YAAY,CAACV,GAAG,GAAG,CAAC,CAAC;EAClD,OAAO8pB,IAAI,CAACjpB,MAAM,IAAIipB,IAAI,CAAChpB,IAAI,IAAId,GAAG;AAC1C;AACA,SAAS6pB,gBAAgBA,CAAC9pB,KAAK,EAAEC,GAAG,EAAE+pB,UAAU,EAAEC,QAAQ,EAAE;EACxD,IAAIjT,IAAI,GAAGnX,UAAU,CAACG,KAAK,CAAC,CAACW,YAAY,CAACV,GAAG,EAAE,CAAC,CAAC,CAAC;EAClD,IAAIiqB,SAAS,GAAGD,QAAQ,CAAC7O,MAAM,CAAC,UAACwF,CAAC,EAAErZ,CAAC;IAAA,OAAK7F,IAAI,CAACC,GAAG,CAACif,CAAC,EAAErZ,CAAC,CAAC3D,MAAM,CAAC;EAAA,GAAE,CAAC,CAAC;EACnE,KAAK,IAAID,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;IACxB,IAAIlC,KAAK,GAAGzB,KAAK,CAACkB,QAAQ,CAAC8V,IAAI,CAACjW,IAAI,EAAEW,IAAI,CAAC0G,GAAG,CAAC4O,IAAI,CAAChW,EAAE,EAAEgW,IAAI,CAACjW,IAAI,GAAGipB,UAAU,CAACpmB,MAAM,GAAGsmB,SAAS,CAAC,CAAC;IACnG,IAAIC,QAAQ,GAAG1oB,KAAK,CAACb,OAAO,CAACopB,UAAU,CAAC;IACxC,IAAI,CAACG,QAAQ,IAAIA,QAAQ,GAAG,CAAC,CAAC,IAAIF,QAAQ,CAACrpB,OAAO,CAACa,KAAK,CAACI,KAAK,CAAC,CAAC,EAAEsoB,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE;MAC/E,IAAIlnB,KAAK,GAAG+T,IAAI,CAACI,UAAU;MAC3B,OAAOnU,KAAK,IAAIA,KAAK,CAAClC,IAAI,IAAIiW,IAAI,CAACjW,IAAI,IAAIkC,KAAK,CAACjC,EAAE,GAAGiC,KAAK,CAAClC,IAAI,GAAGipB,UAAU,CAACpmB,MAAM,GAAGumB,QAAQ,EAAE;QAC7F,IAAInqB,KAAK,CAACkB,QAAQ,CAAC+B,KAAK,CAACjC,EAAE,GAAGgpB,UAAU,CAACpmB,MAAM,EAAEX,KAAK,CAACjC,EAAE,CAAC,IAAIgpB,UAAU,EACpE,OAAO,KAAK;QAChB/mB,KAAK,GAAGA,KAAK,CAACmU,UAAU;MAC5B;MACA,OAAO,IAAI;IACf;IACA,IAAItW,MAAM,GAAGkW,IAAI,CAAChW,EAAE,IAAIf,GAAG,IAAI+W,IAAI,CAAClW,MAAM;IAC1C,IAAI,CAACA,MAAM,EACP;IACJkW,IAAI,GAAGlW,MAAM;EACjB;EACA,OAAO,KAAK;AAChB;AACA,SAAS6oB,gBAAgBA,CAAC3pB,KAAK,EAAEC,GAAG,EAAEgqB,QAAQ,EAAE;EAC5C,IAAIG,OAAO,GAAGpqB,KAAK,CAAC4pB,eAAe,CAAC3pB,GAAG,CAAC;EACxC,IAAImqB,OAAO,CAACpqB,KAAK,CAACkB,QAAQ,CAACjB,GAAG,GAAG,CAAC,EAAEA,GAAG,CAAC,CAAC,IAAId,YAAY,CAAC0qB,IAAI,EAC1D,OAAO5pB,GAAG;EAAC,IAAAoqB,WAAA,GAAAhnB,0BAAA,CACI4mB,QAAQ;IAAAK,OAAA;EAAA;IAA3B,KAAAD,WAAA,CAAA9mB,CAAA,MAAA+mB,OAAA,GAAAD,WAAA,CAAA7mB,CAAA,IAAAC,IAAA,GAA6B;MAAA,IAApB8mB,MAAM,GAAAD,OAAA,CAAA/pB,KAAA;MACX,IAAIkB,KAAK,GAAGxB,GAAG,GAAGsqB,MAAM,CAAC3mB,MAAM;MAC/B,IAAI5D,KAAK,CAACkB,QAAQ,CAACO,KAAK,EAAExB,GAAG,CAAC,IAAIsqB,MAAM,IAAIH,OAAO,CAACpqB,KAAK,CAACkB,QAAQ,CAACO,KAAK,GAAG,CAAC,EAAEA,KAAK,CAAC,CAAC,IAAItC,YAAY,CAAC0qB,IAAI,EACtG,OAAOpoB,KAAK;IACpB;EAAC,SAAAoC,GAAA;IAAAwmB,WAAA,CAAAvmB,CAAA,CAAAD,GAAA;EAAA;IAAAwmB,WAAA,CAAAtmB,CAAA;EAAA;EACD,OAAO,CAAC,CAAC;AACb;;AAEA;AACA;AACA;AACA,SAASymB,cAAcA,CAAA,EAAc;EAAA,IAAbtX,MAAM,GAAA9G,SAAA,CAAAxI,MAAA,QAAAwI,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,CAAC,CAAC;EAC/B,OAAO,CACHI,eAAe,EACfpD,gBAAgB,CAACqE,EAAE,CAACyF,MAAM,CAAC,EAC3B3E,gBAAgB,EAChBkc,mBAAmB,EACnB9M,SAAS,CACZ;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAM+M,gBAAgB,GAAG,CACrB;EAAEpqB,GAAG,EAAE,YAAY;EAAEyjB,GAAG,EAAElW;AAAgB,CAAC,EAC3C;EAAEvN,GAAG,EAAE,QAAQ;EAAEyjB,GAAG,EAAEjW;AAAgB,CAAC,EACvC;EAAExN,GAAG,EAAE,WAAW;EAAEyjB,GAAG,EAAE,aAAa9X,uBAAuB,CAAC,IAAI;AAAE,CAAC,EACrE;EAAE3L,GAAG,EAAE,SAAS;EAAEyjB,GAAG,EAAE,aAAa9X,uBAAuB,CAAC,KAAK;AAAE,CAAC,EACpE;EAAE3L,GAAG,EAAE,UAAU;EAAEyjB,GAAG,EAAE,aAAa9X,uBAAuB,CAAC,IAAI,EAAE,MAAM;AAAE,CAAC,EAC5E;EAAE3L,GAAG,EAAE,QAAQ;EAAEyjB,GAAG,EAAE,aAAa9X,uBAAuB,CAAC,KAAK,EAAE,MAAM;AAAE,CAAC,EAC3E;EAAE3L,GAAG,EAAE,OAAO;EAAEyjB,GAAG,EAAErW;AAAiB,CAAC,CAC1C;AACD,IAAM+c,mBAAmB,GAAG,aAAa3rB,IAAI,CAACqlB,OAAO,EAAC,aAAavkB,MAAM,CAAC+qB,QAAQ,CAAC,CAACvhB,gBAAgB,CAAC,EAAE,UAAApJ,KAAK;EAAA,OAAIA,KAAK,CAAC8M,KAAK,CAAC1D,gBAAgB,CAAC,CAACQ,aAAa,GAAG,CAAC8gB,gBAAgB,CAAC,GAAG,EAAE;AAAA,EAAC,CAAC;AACvL;AACA;AACA;AACA;AACA;AACA;AACA,SAASE,gBAAgBA,CAAC5qB,KAAK,EAAE;EAC7B,IAAIsM,MAAM,GAAGtM,KAAK,CAACuM,KAAK,CAACC,eAAe,EAAE,KAAK,CAAC;EAChD,OAAOF,MAAM,IAAIA,MAAM,CAACyB,MAAM,CAACC,IAAI,CAAC,UAAA3D,CAAC;IAAA,OAAIA,CAAC,CAACrK,KAAK,IAAI,CAAC;EAAA,EAAC,mBAAmB,CAAC,GAAG,SAAS,GAChFsM,MAAM,IAAIA,MAAM,CAACyB,MAAM,CAACC,IAAI,CAAC,UAAA3D,CAAC;IAAA,OAAIA,CAAC,CAACrK,KAAK,IAAI,CAAC;EAAA,EAAC,oBAAoB,CAAC,GAAG,QAAQ,GAAG,IAAI;AAChG;AACA,IAAM6qB,oBAAoB,GAAG,aAAa,IAAIpkB,OAAO,CAAD,CAAC;AACrD;AACA;AACA;AACA,SAASqkB,kBAAkBA,CAAC9qB,KAAK,EAAE;EAC/B,IAAIuF,EAAE;EACN,IAAIkH,IAAI,GAAG,CAAClH,EAAE,GAAGvF,KAAK,CAACuM,KAAK,CAACC,eAAe,EAAE,KAAK,CAAC,MAAM,IAAI,IAAIjH,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACkH,IAAI;EAClG,IAAI,CAACA,IAAI,IAAIA,IAAI,CAACC,QAAQ,EACtB,OAAO,EAAE;EACb,IAAIqe,WAAW,GAAGF,oBAAoB,CAAC5oB,GAAG,CAACwK,IAAI,CAACzJ,OAAO,CAAC;EACxD,IAAI,CAAC+nB,WAAW,EACZF,oBAAoB,CAAC/jB,GAAG,CAAC2F,IAAI,CAACzJ,OAAO,EAAE+nB,WAAW,GAAGte,IAAI,CAACzJ,OAAO,CAACoB,GAAG,CAAC,UAAAC,CAAC;IAAA,OAAIA,CAAC,CAACa,UAAU;EAAA,EAAC,CAAC;EAC7F,OAAO6lB,WAAW;AACtB;AACA;AACA;AACA;AACA,SAASC,kBAAkBA,CAAChrB,KAAK,EAAE;EAC/B,IAAIuF,EAAE;EACN,IAAIkH,IAAI,GAAG,CAAClH,EAAE,GAAGvF,KAAK,CAACuM,KAAK,CAACC,eAAe,EAAE,KAAK,CAAC,MAAM,IAAI,IAAIjH,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACkH,IAAI;EAClG,OAAOA,IAAI,IAAI,CAACA,IAAI,CAACC,QAAQ,IAAID,IAAI,CAACY,QAAQ,IAAI,CAAC,GAAGZ,IAAI,CAACzJ,OAAO,CAACyJ,IAAI,CAACY,QAAQ,CAAC,CAACnI,UAAU,GAAG,IAAI;AACvG;AACA;AACA;AACA;AACA;AACA,SAAS+lB,uBAAuBA,CAACjrB,KAAK,EAAE;EACpC,IAAIuF,EAAE;EACN,IAAIkH,IAAI,GAAG,CAAClH,EAAE,GAAGvF,KAAK,CAACuM,KAAK,CAACC,eAAe,EAAE,KAAK,CAAC,MAAM,IAAI,IAAIjH,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACkH,IAAI;EAClG,OAAOA,IAAI,IAAI,CAACA,IAAI,CAACC,QAAQ,IAAID,IAAI,CAACY,QAAQ,IAAI,CAAC,GAAGZ,IAAI,CAACY,QAAQ,GAAG,IAAI;AAC9E;AACA;AACA;AACA;AACA;AACA,SAAS6d,qBAAqBA,CAAChK,KAAK,EAAE;EAClC,OAAO1T,iBAAiB,CAACC,EAAE,CAACyT,KAAK,CAAC;AACtC;AAEA,SAASnhB,iBAAiB,EAAE2N,gBAAgB,EAAE8c,cAAc,EAAEhH,YAAY,EAAE6D,aAAa,EAAEmB,mBAAmB,EAAE1a,eAAe,EAAEqY,eAAe,EAAEjiB,gBAAgB,EAAEwmB,gBAAgB,EAAEE,gBAAgB,EAAEE,kBAAkB,EAAE9C,iBAAiB,EAAEpE,mBAAmB,EAAEC,mBAAmB,EAAEhf,IAAI,EAAEG,OAAO,EAAE+iB,aAAa,EAAEjiB,oBAAoB,EAAEmG,uBAAuB,EAAEyX,gBAAgB,EAAE9d,gBAAgB,EAAE+d,gBAAgB,EAAEqH,kBAAkB,EAAEC,uBAAuB,EAAEC,qBAAqB,EAAErI,OAAO,EAAEwB,iBAAiB,EAAEJ,aAAa,EAAEpW,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}