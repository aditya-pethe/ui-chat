{"ast":null,"code":"import { indentWithTab } from '@codemirror/commands';\nimport { basicSetup } from '@uiw/codemirror-extensions-basic-setup';\nimport { EditorView, keymap, placeholder } from '@codemirror/view';\nimport { oneDark } from '@codemirror/theme-one-dark';\nimport { EditorState } from '@codemirror/state';\nexport var getDefaultExtensions = function getDefaultExtensions(optios) {\n  if (optios === void 0) {\n    optios = {};\n  }\n  var {\n    indentWithTab: defaultIndentWithTab = true,\n    editable = true,\n    readOnly = false,\n    theme = 'light',\n    placeholder: placeholderStr = '',\n    basicSetup: defaultBasicSetup = true\n  } = optios;\n  var getExtensions = [];\n  var defaultLightThemeOption = EditorView.theme({\n    '&': {\n      backgroundColor: '#fff'\n    }\n  }, {\n    dark: false\n  });\n  if (defaultIndentWithTab) {\n    getExtensions.unshift(keymap.of([indentWithTab]));\n  }\n  if (defaultBasicSetup) {\n    if (typeof defaultBasicSetup === 'boolean') {\n      getExtensions.unshift(basicSetup());\n    } else {\n      getExtensions.unshift(basicSetup(defaultBasicSetup));\n    }\n  }\n  if (placeholderStr) {\n    getExtensions.unshift(placeholder(placeholderStr));\n  }\n  switch (theme) {\n    case 'light':\n      getExtensions.push(defaultLightThemeOption);\n      break;\n    case 'dark':\n      getExtensions.push(oneDark);\n      break;\n    case 'none':\n      break;\n    default:\n      getExtensions.push(theme);\n      break;\n  }\n  if (editable === false) {\n    getExtensions.push(EditorView.editable.of(false));\n  }\n  if (readOnly) {\n    getExtensions.push(EditorState.readOnly.of(true));\n  }\n  return [...getExtensions];\n};","map":{"version":3,"names":["indentWithTab","basicSetup","EditorView","keymap","placeholder","oneDark","EditorState","getDefaultExtensions","optios","defaultIndentWithTab","editable","readOnly","theme","placeholderStr","defaultBasicSetup","getExtensions","defaultLightThemeOption","backgroundColor","dark","unshift","of","push"],"sources":["/Users/adityapethe/Developer/ui-chat/ui-chat/client/node_modules/@uiw/react-codemirror/esm/getDefaultExtensions.js"],"sourcesContent":["import { indentWithTab } from '@codemirror/commands';\nimport { basicSetup } from '@uiw/codemirror-extensions-basic-setup';\nimport { EditorView, keymap, placeholder } from '@codemirror/view';\nimport { oneDark } from '@codemirror/theme-one-dark';\nimport { EditorState } from '@codemirror/state';\nexport var getDefaultExtensions = function getDefaultExtensions(optios) {\n  if (optios === void 0) {\n    optios = {};\n  }\n  var {\n    indentWithTab: defaultIndentWithTab = true,\n    editable = true,\n    readOnly = false,\n    theme = 'light',\n    placeholder: placeholderStr = '',\n    basicSetup: defaultBasicSetup = true\n  } = optios;\n  var getExtensions = [];\n  var defaultLightThemeOption = EditorView.theme({\n    '&': {\n      backgroundColor: '#fff'\n    }\n  }, {\n    dark: false\n  });\n  if (defaultIndentWithTab) {\n    getExtensions.unshift(keymap.of([indentWithTab]));\n  }\n  if (defaultBasicSetup) {\n    if (typeof defaultBasicSetup === 'boolean') {\n      getExtensions.unshift(basicSetup());\n    } else {\n      getExtensions.unshift(basicSetup(defaultBasicSetup));\n    }\n  }\n  if (placeholderStr) {\n    getExtensions.unshift(placeholder(placeholderStr));\n  }\n  switch (theme) {\n    case 'light':\n      getExtensions.push(defaultLightThemeOption);\n      break;\n    case 'dark':\n      getExtensions.push(oneDark);\n      break;\n    case 'none':\n      break;\n    default:\n      getExtensions.push(theme);\n      break;\n  }\n  if (editable === false) {\n    getExtensions.push(EditorView.editable.of(false));\n  }\n  if (readOnly) {\n    getExtensions.push(EditorState.readOnly.of(true));\n  }\n  return [...getExtensions];\n};"],"mappings":"AAAA,SAASA,aAAa,QAAQ,sBAAsB;AACpD,SAASC,UAAU,QAAQ,wCAAwC;AACnE,SAASC,UAAU,EAAEC,MAAM,EAAEC,WAAW,QAAQ,kBAAkB;AAClE,SAASC,OAAO,QAAQ,4BAA4B;AACpD,SAASC,WAAW,QAAQ,mBAAmB;AAC/C,OAAO,IAAIC,oBAAoB,GAAG,SAASA,oBAAoBA,CAACC,MAAM,EAAE;EACtE,IAAIA,MAAM,KAAK,KAAK,CAAC,EAAE;IACrBA,MAAM,GAAG,CAAC,CAAC;EACb;EACA,IAAI;IACFR,aAAa,EAAES,oBAAoB,GAAG,IAAI;IAC1CC,QAAQ,GAAG,IAAI;IACfC,QAAQ,GAAG,KAAK;IAChBC,KAAK,GAAG,OAAO;IACfR,WAAW,EAAES,cAAc,GAAG,EAAE;IAChCZ,UAAU,EAAEa,iBAAiB,GAAG;EAClC,CAAC,GAAGN,MAAM;EACV,IAAIO,aAAa,GAAG,EAAE;EACtB,IAAIC,uBAAuB,GAAGd,UAAU,CAACU,KAAK,CAAC;IAC7C,GAAG,EAAE;MACHK,eAAe,EAAE;IACnB;EACF,CAAC,EAAE;IACDC,IAAI,EAAE;EACR,CAAC,CAAC;EACF,IAAIT,oBAAoB,EAAE;IACxBM,aAAa,CAACI,OAAO,CAAChB,MAAM,CAACiB,EAAE,CAAC,CAACpB,aAAa,CAAC,CAAC,CAAC;EACnD;EACA,IAAIc,iBAAiB,EAAE;IACrB,IAAI,OAAOA,iBAAiB,KAAK,SAAS,EAAE;MAC1CC,aAAa,CAACI,OAAO,CAAClB,UAAU,CAAC,CAAC,CAAC;IACrC,CAAC,MAAM;MACLc,aAAa,CAACI,OAAO,CAAClB,UAAU,CAACa,iBAAiB,CAAC,CAAC;IACtD;EACF;EACA,IAAID,cAAc,EAAE;IAClBE,aAAa,CAACI,OAAO,CAACf,WAAW,CAACS,cAAc,CAAC,CAAC;EACpD;EACA,QAAQD,KAAK;IACX,KAAK,OAAO;MACVG,aAAa,CAACM,IAAI,CAACL,uBAAuB,CAAC;MAC3C;IACF,KAAK,MAAM;MACTD,aAAa,CAACM,IAAI,CAAChB,OAAO,CAAC;MAC3B;IACF,KAAK,MAAM;MACT;IACF;MACEU,aAAa,CAACM,IAAI,CAACT,KAAK,CAAC;MACzB;EACJ;EACA,IAAIF,QAAQ,KAAK,KAAK,EAAE;IACtBK,aAAa,CAACM,IAAI,CAACnB,UAAU,CAACQ,QAAQ,CAACU,EAAE,CAAC,KAAK,CAAC,CAAC;EACnD;EACA,IAAIT,QAAQ,EAAE;IACZI,aAAa,CAACM,IAAI,CAACf,WAAW,CAACK,QAAQ,CAACS,EAAE,CAAC,IAAI,CAAC,CAAC;EACnD;EACA,OAAO,CAAC,GAAGL,aAAa,CAAC;AAC3B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}